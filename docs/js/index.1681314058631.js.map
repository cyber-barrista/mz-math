{
  "version": 3,
  "sources": ["../../src/docs/client-side/js/index.tsx"],
  "sourcesContent": ["\nconst initMobileMenu = () => {\n  const $btn = document.getElementById('mobile-menu-btn');\n  if(!$btn) return;\n\n  $btn.addEventListener('click', (evt) => {\n    evt.stopPropagation();\n    document.body.classList.toggle('mobile-menu-opened');\n  });\n\n  document.body.addEventListener('click', () => {\n    document.body.classList.remove('mobile-menu-opened');\n  });\n\n  const $sideMenu = document.getElementById('side-menu');\n  if(!$sideMenu) return;\n\n  $sideMenu.addEventListener('click', (evt) => {\n    evt.stopPropagation();\n  });\n\n  const $close = document.getElementById('mobile-menu-close-btn');\n  if(!$close) return;\n\n  $close.addEventListener('click', () => {\n    document.body.classList.remove('mobile-menu-opened');\n  });\n};\n\nconst initMenuScroll = () => {\n  const $menu = document.querySelector('.side-menu');\n  if(!$menu) return;\n\n  const path = window.location.pathname;\n  const $link = $menu.querySelector(`a[href='${ path }']`);\n  if(!$link) return;\n\n  $link.scrollIntoView({\n    block: 'center',\n  });\n};\n\nconst initMenuCollapsible = () => {\n  const $titles = document.querySelectorAll('.side-menu [data-collapsible-title]');\n\n  for(const $title of $titles){\n    $title.addEventListener('click', () => {\n      const isOpened = $title.getAttribute('data-opened') === 'true';\n\n      $title.setAttribute('data-opened', (!isOpened).toString());\n\n      const $arrow = $title.querySelector('[data-arrow]');\n      if(!$arrow) return;\n\n      $arrow.classList.toggle('rotate-90', !isOpened);\n      $title.nextElementSibling?.classList.toggle('hidden', isOpened);\n    });\n  }\n};\n\nconst handleDarkLightModes = () => {\n\n  const mode = window.localStorage.getItem('mode') || 'light';\n  document.documentElement.classList.toggle('dark', mode === 'dark');\n\n  const $moveToDarkBtn = document.getElementById('move-to-dark-mode-btn') as HTMLButtonElement;\n  const $moveToLightBtn = document.getElementById('move-to-light-mode-btn') as HTMLButtonElement;\n\n\n  const moveToDark = () => {\n    document.documentElement.classList.add('dark');\n    $moveToDarkBtn.classList.add('hidden');\n    $moveToLightBtn.classList.remove('hidden');\n    window.localStorage.setItem('mode', 'dark');\n  };\n\n  const moveToLight = () => {\n    document.documentElement.classList.remove('dark');\n    $moveToLightBtn.classList.add('hidden');\n    $moveToDarkBtn.classList.remove('hidden');\n    window.localStorage.setItem('mode', 'light');\n  };\n\n  if(mode === 'dark'){\n    moveToDark();\n  }\n  else{\n    moveToLight();\n  }\n\n  $moveToDarkBtn?.addEventListener('click', moveToDark);\n  $moveToLightBtn?.addEventListener('click', moveToLight);\n};\n\nconst init = () => {\n  initMobileMenu();\n  initMenuScroll();\n  initMenuCollapsible();\n  handleDarkLightModes();\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  init();\n});\n\nexport {};\n"],
  "mappings": "MACA,IAAMA,EAAiB,IAAM,CAC3B,IAAMC,EAAO,SAAS,eAAe,iBAAiB,EACtD,GAAG,CAACA,EAAM,OAEVA,EAAK,iBAAiB,QAAUC,GAAQ,CACtCA,EAAI,gBAAgB,EACpB,SAAS,KAAK,UAAU,OAAO,oBAAoB,CACrD,CAAC,EAED,SAAS,KAAK,iBAAiB,QAAS,IAAM,CAC5C,SAAS,KAAK,UAAU,OAAO,oBAAoB,CACrD,CAAC,EAED,IAAMC,EAAY,SAAS,eAAe,WAAW,EACrD,GAAG,CAACA,EAAW,OAEfA,EAAU,iBAAiB,QAAUD,GAAQ,CAC3CA,EAAI,gBAAgB,CACtB,CAAC,EAED,IAAME,EAAS,SAAS,eAAe,uBAAuB,EAC3D,CAACA,GAEJA,EAAO,iBAAiB,QAAS,IAAM,CACrC,SAAS,KAAK,UAAU,OAAO,oBAAoB,CACrD,CAAC,CACH,EAEMC,EAAiB,IAAM,CAC3B,IAAMC,EAAQ,SAAS,cAAc,YAAY,EACjD,GAAG,CAACA,EAAO,OAEX,IAAMC,EAAO,OAAO,SAAS,SACvBC,EAAQF,EAAM,cAAc,WAAYC,KAAS,EACpD,CAACC,GAEJA,EAAM,eAAe,CACnB,MAAO,QACT,CAAC,CACH,EAEMC,EAAsB,IAAM,CAChC,IAAMC,EAAU,SAAS,iBAAiB,qCAAqC,EAE/E,QAAUC,KAAUD,EAClBC,EAAO,iBAAiB,QAAS,IAAM,CA9C3C,IAAAC,EA+CM,IAAMC,EAAWF,EAAO,aAAa,aAAa,IAAM,OAExDA,EAAO,aAAa,eAAgB,CAACE,GAAU,SAAS,CAAC,EAEzD,IAAMC,EAASH,EAAO,cAAc,cAAc,EAC/C,CAACG,IAEJA,EAAO,UAAU,OAAO,YAAa,CAACD,CAAQ,GAC9CD,EAAAD,EAAO,qBAAP,MAAAC,EAA2B,UAAU,OAAO,SAAUC,GACxD,CAAC,CAEL,EAEME,EAAuB,IAAM,CAEjC,IAAMC,EAAO,OAAO,aAAa,QAAQ,MAAM,GAAK,QACpD,SAAS,gBAAgB,UAAU,OAAO,OAAQA,IAAS,MAAM,EAEjE,IAAMC,EAAiB,SAAS,eAAe,uBAAuB,EAChEC,EAAkB,SAAS,eAAe,wBAAwB,EAGlEC,EAAa,IAAM,CACvB,SAAS,gBAAgB,UAAU,IAAI,MAAM,EAC7CF,EAAe,UAAU,IAAI,QAAQ,EACrCC,EAAgB,UAAU,OAAO,QAAQ,EACzC,OAAO,aAAa,QAAQ,OAAQ,MAAM,CAC5C,EAEME,EAAc,IAAM,CACxB,SAAS,gBAAgB,UAAU,OAAO,MAAM,EAChDF,EAAgB,UAAU,IAAI,QAAQ,EACtCD,EAAe,UAAU,OAAO,QAAQ,EACxC,OAAO,aAAa,QAAQ,OAAQ,OAAO,CAC7C,EAEGD,IAAS,OACVG,EAAW,EAGXC,EAAY,EAGdH,GAAA,MAAAA,EAAgB,iBAAiB,QAASE,GAC1CD,GAAA,MAAAA,EAAiB,iBAAiB,QAASE,EAC7C,EAEMC,EAAO,IAAM,CACjBrB,EAAe,EACfK,EAAe,EACfI,EAAoB,EACpBM,EAAqB,CACvB,EAEA,SAAS,iBAAiB,mBAAoB,IAAM,CAClDM,EAAK,CACP,CAAC",
  "names": ["initMobileMenu", "$btn", "evt", "$sideMenu", "$close", "initMenuScroll", "$menu", "path", "$link", "initMenuCollapsible", "$titles", "$title", "_a", "isOpened", "$arrow", "handleDarkLightModes", "mode", "$moveToDarkBtn", "$moveToLightBtn", "moveToDark", "moveToLight", "init"]
}
