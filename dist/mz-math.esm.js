/* 
mzMath - a collection of TypeScript-based math helpers.
Version: 3.0.2
Author: Miriam Zusin     
Contact: miriam.zusin@gmail.com
Documentation: https://github.com/mzusin/mz-math
Licensed GPLv3 for open source use, or Commercial License for commercial use - https://github.com/mzusin/index/blob/main/LICENSE.md                 
*/
var h=Math.pow;var i=(t,r=1/0)=>{if(r===1/0)return t;r<0&&(r=0);let e=h(10,r);return Math.round(t*e)/e};var R=(t,r=1/0)=>{let e=Math.atan2(t[1],t[0]);return i(e,r)},Y=(t,r,e=1/0)=>{let n=j(t);return[i(Math.cos(r)*n,e),i(Math.sin(r)*n,e)]},Xt=(t,r=1/0)=>{let e=t*(180/Math.PI);return i(e,r)},Yt=(t,r=1/0)=>{let e=t*(Math.PI/180);return i(e,r)},mt=(t,r,e=1/0)=>{let n=S(t),o=S(r),c=I(n,o),s=Math.acos(c);return i(s,e)},jt=(t,r,e=1/0)=>{let n=b(t,r),o=Math.atan2(n[1],n[0]);return i(o,e)},qt=(t,r,e=1/0)=>mt(t,r,e);var H=(t,r,e=1/0)=>{let n=[];for(let o=0;o<t.length;o++)n.push(i(t[o]+r[o],e));return n},Ft=(t,r,e=1/0)=>H(t,r,e),Wt=(t,r,e=1/0)=>H(t,r,e),b=(t,r,e=1/0)=>{let n=[];for(let o=0;o<t.length;o++)n.push(i(t[o]-r[o],e));return n},q=(t,r,e=1/0)=>b(t,r,e),Ot=(t,r,e=1/0)=>b(t,r,e),C=(t,r,e=1/0)=>{let n=[];for(let o=0;o<t.length;o++)n.push(i(t[o]*r,e));return n},kt=(t,r,e=1/0)=>C(t,r,e),$=(t,r,e=1/0)=>C(t,r,e),T=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let n=[];for(let o=0;o<t.length;o++)n.push(i(t[o]/r,e));return n},Jt=(t,r,e=1/0)=>T(t,r,e),Kt=(t,r,e=1/0)=>T(t,r,e),v=(t,r=1/0)=>{let e=0;for(let n=0;n<t.length;n++)e+=t[n]*t[n];return i(Math.sqrt(e),r)},j=(t,r=1/0)=>v(t,r),Ut=(t,r=1/0)=>v(t,r),ft=(t,r,e=1/0)=>{let n=R(t);return[i(Math.cos(n)*r,e),i(Math.sin(n)*r,e)]},_t=(t,r,e=1/0)=>{let n=b(t,r);return v(n,e)},Pt=(t,r,e=1/0)=>{let n=b(t,r);return v(n,e)},tr=(t,r,e=1/0)=>{let n=b(t,r);return v(n,e)},S=(t,r=1/0)=>{let e=v(t),n=[];for(let o=0;o<t.length;o++)n.push(e===0?0:i(t[o]/e,r));return n},d=(t,r=1/0)=>S(t,r),y=(t,r=1/0)=>S(t,r),I=(t,r,e=1/0)=>{let n=0;for(let o=0;o<t.length;o++)n+=t[o]*r[o];return i(n,e)},rr=(t,r,e=1/0)=>I(t,r,e),er=(t,r,e=1/0)=>I(t,r,e),nr=(t,r,e=1/0)=>[i(t[1]*r[2]-t[2]*r[1],e),i(t[2]*r[0]-t[0]*r[2],e),i(t[0]*r[1]-t[1]*r[0],e)],or=(t=0)=>[t,t],cr=(t=0)=>[t,t,t],ir=(t=0)=>[t,t,t,t],G=(t,r=0)=>{if(t<0)throw new Error("N must be a non-negative number.");let e=[];for(let n=0;n<t;n++)e.push(r);return e},sr=(t,r)=>{let e=[0,0];return e=ft(e,t),Y(e,r)},Q=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0};var Z=(t,r,e=1/0)=>{let n=[];for(let o=0;o<t.length;o++)n.push(H(t[o],r[o],e));return n},ar=(t,r,e=1/0)=>Z(t,r,e),pr=(t,r,e=1/0)=>Z(t,r,e),F=(t,r,e=1/0)=>{let n=[];for(let o=0;o<t.length;o++)n.push(b(t[o],r[o],e));return n},mr=(t,r,e=1/0)=>F(t,r,e),fr=(t,r,e=1/0)=>F(t,r,e),W=(t,r,e=1/0)=>{let n=[];for(let o of t)n.push(C(o,r,e));return n},Mr=(t,r,e=1/0)=>W(t,r,e),Vr=(t,r,e=1/0)=>W(t,r,e),B=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let n=[];for(let o of t)n.push(T(o,r,e));return n},Mt=(t,r,e=1/0)=>B(t,r,e),hr=(t,r,e=1/0)=>B(t,r,e),D=t=>{let r=t.length;if(r<=0)return t;let e=t[0].length;if(e<=0)return t;let n=[];for(let o=0;o<e;o++)n.push([]);for(let o=0;o<r;o++)for(let c=0;c<e;c++)n[c].push(t[o][c]);return n},br=t=>D(t),gr=t=>D(t),O=(t,r=0)=>{if(t.length<=0)return[];let e=[];for(let n=0;n<t.length;n++){let o=t[n].length,c=[];for(let s=0;s<o;s++)c.push(r);e.push(c)}return e},lr=(t,r=0)=>O(t,r),yr=(t,r=0)=>O(t,r),Ir=(t=0)=>[[t,t],[t,t]],vr=(t=0)=>[[t,t,t],[t,t,t],[t,t,t]],Sr=(t=0)=>[[t,t,t,t],[t,t,t,t],[t,t,t,t],[t,t,t,t]],dr=(t,r,e=0)=>{if(t<=0||r<=0)throw new Error("M and N must be positive numbers.");let n=[];for(let o=0;o<t;o++)n.push(G(r,e));return n},wr=()=>[[1,0],[0,1]],Rr=()=>[[1,0,0],[0,1,0],[0,0,1]],Hr=()=>[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],Cr=t=>{if(t<0)throw new Error("N must be a non-negative number.");if(t===0)return[];let r=[];for(let e=0;e<t;e++){let n=[];for(let o=0;o<t;o++)n.push(e===o?1:0);r.push(n)}return r},V=t=>{let r=[];for(let e=0;e<t.length;e++){let n=t[e],o=[];for(let c=0;c<n.length;c++)o.push(n[c]);r.push(o)}return r},k=t=>V(t),J=t=>V(t),Tr=(t,r)=>{if(t.length<=0)return[];let e=V(t);for(let n=0;n<e.length;n++)e[n].push(r[n]);return e},Dr=(t,r)=>{if(t.length<=0)return[];let e=V(t);for(let n=0;n<e.length;n++)e[n].unshift(r[n]);return e},zr=(t,r)=>{let e=V(t);return e.push(r),e},Lr=(t,r)=>{let e=k(t);return e.push(r),e},$r=(t,r)=>{let e=J(t);return e.push(r),e},Br=(t,r)=>{let e=V(t);return e.unshift(r),e},Ar=(t,r)=>{let e=k(t);return e.unshift(r),e},Er=(t,r)=>{let e=J(t);return e.unshift(r),e},Nr=t=>{if(t.length<=0)return[];let r=V(t);return r.pop(),r},Xr=t=>{if(t.length<=0)return[];let r=V(t);return r.shift(),r},K=t=>{if(t.length<=0)return[];let r=V(t);for(let e=0;e<r.length;e++)r[e].pop();return r},Yr=t=>{if(t.length<=0)return[];let r=V(t);for(let e=0;e<r.length;e++)r[e].shift();return r},jr=t=>{if(t.length<=0)return[];let r=[];for(let e=0;e<t.length;e++)r.push(t[e][0]);return r},U=t=>{if(t.length<=0)return[];let r=t[0].length,e=[];for(let n=0;n<t.length;n++)e.push(t[n][r-1]);return e},qr=(t,r)=>{if(t.length<=0)return[];let e=[];for(let n=0;n<t.length;n++)e.push(t[n][r]);return e},w=(t,r,e=1/0)=>{let n=[];for(let c=0;c<t.length;c++)n.push([]);let o=D(r);if(n.length!==o.length)throw new Error("The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.");for(let c=0;c<t.length;c++){let s=t[c];for(let u=0;u<o.length;u++){let a=o[u],x=I(s,a,e);n[c].push(x)}}return n},p=(t,r,e=1/0)=>{if(t.length<0)return[];if(t[0].length!==r.length)throw new Error("The number of columns in the matrix must be equal to the length of the vector.");let n=[];for(let o=0;o<t.length;o++)n[o]=I(t[o],r,e);return n},Gr=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(!Q(t[e],r[e]))return!1;return!0},Vt=(t,r,e)=>{let n=t.length;if(n<=0)throw new Error("The matrix should not be empty.");if(n!==t[0].length)throw new Error("The matrix must be square.");let o=[];for(let c=0;c<n;c++){if(c===r)continue;let s=[];for(let u=0;u<n;u++)u!==e&&s.push(t[c][u]);o.push(s)}return o},_=(t,r,e)=>{let n=t.length;if(n<=0)throw new Error("The matrix should not be empty.");if(n!==t[0].length)throw new Error("The matrix must be square.");let o=Vt(t,r,e);return z(o)},z=t=>{let r=t.length;if(r===0)return 1;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t[0][0];if(r===2)return P(t);let e=0;for(let n=0;n<r;n++){let o=_(t,0,n),c=t[0][n];n%2!==0&&(c=-c),e+=o*c}return e},P=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return t[0][0]*t[1][1]-t[1][0]*t[0][1]},Qr=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return z(t)},tt=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return[[t[1][1],-t[0][1]],[-t[1][0],t[0][0]]]},Zr=t=>rt(t),rt=t=>{let r=t.length;if(r<=0)return null;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t;if(r===2)return tt(t);let e=[];for(let n=0;n<r;n++){let o=[];for(let c=0;c<r;c++){let s=_(t,n,c),u=Math.pow(-1,n+c);o.push(u*s)}e.push(o)}return D(e)},Fr=t=>{if(t.length>0&&t.length!==t[0].length)throw new Error("The matrix must be square.");return z(t)===0},et=(t,r=1/0)=>{if(t.length>0&&t.length!==t[0].length)throw new Error("The matrix must be square.");let e=P(t);if(e===0)return null;let n=tt(t);return n===null?null:Mt(n,e,r)},nt=(t,r=1/0)=>A(t,r),A=(t,r=1/0)=>{let e=t.length;if(e>0&&e!==t[0].length)throw new Error("The matrix must be square.");let n=z(t),o=rt(t);return o===null?null:B(o,n,r)};var Kr=t=>{let r=t[0][0],e=t[1][0],n=t[0][1],o=t[1][1];return`matrix(${r}, ${e}, ${n}, ${o}, 0, 0)`},Ur=t=>{let r=t[0][0],e=t[1][0],n=t[0][1],o=t[1][1],c=t[0][2],s=t[1][2];return`matrix(${r}, ${e}, ${n}, ${o}, ${c}, ${s})`},_r=t=>{let r=t[0][0],e=t[1][0],n=t[0][1],o=t[1][1],c=t[0][2],s=t[1][2];return`matrix3d(${r}, ${e}, 0, 0, ${n}, ${o}, 0, 0, 0, 0, 1, 0, ${c}, ${s}, 0, 1)`},Pr=t=>`matrix3d(
        ${t[0][0]}, ${t[0][1]}, ${t[0][2]}, ${t[0][3]},
        ${t[1][0]}, ${t[1][1]}, ${t[1][2]}, ${t[1][3]},
        ${t[2][0]}, ${t[2][1]}, ${t[2][2]}, ${t[2][3]},
        ${t[3][0]}, ${t[3][1]}, ${t[3][2]}, ${t[3][3]}
    )`,te=(t,r=1/0)=>[[1,0],[0,1],[i(t[0],r),i(t[1],r)]],re=(t,r=1/0)=>[[1,0,0],[0,1,0],[0,0,1],[i(t[0],r),i(t[1],r),i(t[2],r)]],L=(t,r=1/0)=>[[1,0,i(t[0],r)],[0,1,i(t[1],r)],[0,0,1]],ee=(t,r=1/0)=>[[1,0,0,i(t[0],r)],[0,1,0,i(t[1],r)],[0,0,1,i(t[2],r)],[0,0,0,1]],ht=(t,r=!0,e=1/0)=>{let n=i(Math.cos(t),e),o=i(Math.sin(t),e);return r?[[n,-o],[o,n]]:[[n,o],[-o,n]]},ot=(t,r=!0,e=1/0)=>{let n=i(Math.cos(t),e),o=i(Math.sin(t),e);return r?[[n,-o,0],[o,n,0],[0,0,1]]:[[n,o,0],[-o,n,0],[0,0,1]]},bt=(t,r,e=!0,n=1/0)=>{let o=L(r,n),c=ot(t,e,n),s=L($(r,-1),n),u=w(o,c);return w(u,s)},ne=(t,r,e,n=!0,o=1/0)=>{let c=bt(t,r,n,o);return p(c,e)},oe=(t,r,e=!0,n=1/0)=>{let o=d(r);return p(ht(t,e,n),o)},ce=(t,r,e=!0,n=1/0)=>{let o=y(r);return p(ot(t,e,n),o)},gt=(t,r=!0,e=1/0)=>{let n=i(Math.cos(t),e),o=i(Math.sin(t),e);return r?[[1,0,0],[0,n,-o],[0,o,n]]:[[1,0,0],[0,n,o],[0,-o,n]]},ie=(t,r=!0,e=1/0)=>{let n=i(Math.cos(t),e),o=i(Math.sin(t),e);return r?[[1,0,0,0],[0,n,-o,0],[0,o,n,0],[0,0,0,1]]:[[1,0,0,0],[0,n,o,0],[0,-o,n,0],[0,0,0,1]]},se=(t,r,e=!0,n=1/0)=>{let o=y(r);return p(gt(t,e,n),o)},lt=(t,r=!0,e=1/0)=>{let n=i(Math.cos(t),e),o=i(Math.sin(t),e);return r?[[n,0,o],[0,1,0],[-o,0,n]]:[[n,0,-o],[0,1,0],[o,0,n]]},ue=(t,r=!0,e=1/0)=>{let n=i(Math.cos(t),e),o=i(Math.sin(t),e);return r?[[n,0,o,0],[0,1,0,0],[-o,0,n,0],[0,0,0,1]]:[[n,0,-o,0],[0,1,0,0],[o,0,n,0],[0,0,0,1]]},xe=(t,r,e=!0,n=1/0)=>{let o=y(r);return p(lt(t,e,n),o)},yt=(t,r=!0,e=1/0)=>{let n=i(Math.cos(t),e),o=i(Math.sin(t),e);return r?[[n,-o,0],[o,n,0],[0,0,1]]:[[n,o,0],[-o,n,0],[0,0,1]]},ae=(t,r=!0,e=1/0)=>{let n=i(Math.cos(t),e),o=i(Math.sin(t),e);return r?[[n,-o,0,0],[o,n,0,0],[0,0,1,0],[0,0,0,1]]:[[n,o,0,0],[-o,n,0,0],[0,0,1,0],[0,0,0,1]]},pe=(t,r,e=!0,n=1/0)=>{let o=y(r);return p(yt(t,e,n),o)},It=(t,r,e=1/0)=>{let n=L(r,e),o=St(t),c=L($(r,-1),e),s=w(n,o);return w(s,c)},me=(t,r,e,n=1/0)=>{let o=It(t,r,n);return p(o,e)},vt=t=>[[t[0],0],[0,t[1]]],fe=(t,r)=>p(vt(t),r),St=t=>[[t[0],0,0],[0,t[1],0],[0,0,1]],dt=t=>[[t[0],0,0],[0,t[1],0],[0,0,t[2]]],Me=t=>[[t[0],0,0,0],[0,t[1],0,0],[0,0,t[2],0],[0,0,0,1]],Ve=(t,r)=>p(dt(t),r),he=t=>[[t,0],[0,1]],be=t=>[[t,0,0],[0,1,0],[0,0,1]],ge=t=>[[t,0,0],[0,1,0],[0,0,1]],le=t=>[[t,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],ye=t=>[[1,0,0],[0,t,0],[0,0,1]],Ie=t=>[[1,0,0,0],[0,t,0,0],[0,0,1,0],[0,0,0,1]],ve=t=>[[1,0,0],[0,1,0],[0,0,t]],Se=t=>[[1,0,0,0],[0,1,0,0],[0,0,t,0],[0,0,0,1]],de=t=>[[1,0],[0,t]],we=t=>[[1,0,0],[0,t,0],[0,0,1]],Re=()=>[[-1,0],[0,-1]],He=()=>[[-1,0,0],[0,-1,0],[0,0,1]],Ce=()=>[[-1,0,0],[0,-1,0],[0,0,-1]],Te=()=>[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]],De=()=>[[0,-1],[-1,0]],ze=()=>[[1,0],[0,-1]],Le=()=>[[1,0,0],[0,-1,0],[0,0,1]],$e=()=>[[-1,0],[0,1]],Be=()=>[[-1,0,0],[0,1,0],[0,0,1]],Ae=()=>[[-1,0,0],[0,1,0],[0,0,1]],Ee=()=>[[-1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],Ne=()=>[[1,0,0],[0,-1,0],[0,0,1]],Xe=()=>[[1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]],Ye=()=>[[1,0,0],[0,1,0],[0,0,-1]],je=()=>[[1,0,0,0],[0,1,0,0],[0,0,-1,0],[0,0,0,1]],qe=t=>[[1,t],[0,1]],Ge=t=>[[1,0],[t,1]];var m=(t,r,e=1/0)=>i(Math.random()*(r-t)+t,e),wt=(t,r)=>Math.floor(Math.random()*(r-t+1)+t),Fe=()=>Math.random()<.5,We=t=>{let r=wt(0,t.length-1);return t[r]};var E=(t,r)=>(t%r+r)%r,ct=(t,r,e,n,o)=>(o-n)*(t-r)/(e-r)+n,ke=(t,r,e,n)=>Math.max(t,e)<=Math.min(r,n),Je=t=>!isNaN(parseFloat(t))&&isFinite(t);var Ue=(t,r)=>{var n;if(t==null)return r;let e=(n=Number(t))!=null?n:r;return isNaN(e)?r:e};var tn=(t,r,e=1/0)=>{let n=0;for(let o of r){if(o.length!==2)return NaN;let c=o[0],s=o[1];n+=c*s*Math.pow(t,s-1)}return i(n,e)},it=(t,r,e,n,o=1/0)=>{let c=-2*(1-t),s=2-4*t,u=2*t;return[i(c*r[0]+s*e[0]+u*n[0],o),i(c*r[1]+s*e[1]+u*n[1],o)]},st=(t,r,e,n,o=1/0)=>{let c=-2*(1-t),s=2-4*t,u=2*t;return[i(c*r[0]+s*e[0]+u*n[0],o),i(c*r[1]+s*e[1]+u*n[1],o),i(c*r[2]+s*e[2]+u*n[2],o)]},ut=(t,r,e,n,o,c=1/0)=>{let s=-3*Math.pow(1-t,2),u=3*(t-1)*(3*t-1),a=6*t-9*t*t,x=3*t*t;return[i(s*r[0]+u*e[0]+a*n[0]+x*o[0],c),i(s*r[1]+u*e[1]+a*n[1]+x*o[1],c)]},xt=(t,r,e,n,o,c=1/0)=>{let s=-3*Math.pow(1-t,2),u=3*(t-1)*(3*t-1),a=6*t-9*t*t,x=3*t*t;return[i(s*r[0]+u*e[0]+a*n[0]+x*o[0],c),i(s*r[1]+u*e[1]+a*n[1]+x*o[1],c),i(s*r[2]+u*e[2]+a*n[2]+x*o[2],c)]},rn=(t,r=1/0)=>i(Math.cos(t),r),en=(t,r=1/0)=>i(-Math.sin(t),r),nn=(t,r=1/0)=>i(1/h(Math.cos(t),2),r),on=(t,r=1/0)=>i(-1/h(Math.sin(t),2),r),cn=(t,r=1/0)=>i(1/Math.sqrt(1-h(t,2)),r),sn=(t,r=1/0)=>i(-1/Math.sqrt(1-h(t,2)),r),un=(t,r=1/0)=>i(1/(1+h(t,2)),r),xn=(t,r=1/0)=>i(-1/(1+h(t,2)),r);var Vn=(t,r,e,n,o=1/0)=>{let c=Math.pow(1-t,2),s=(1-t)*2*t,u=t*t;return[i(c*r[0]+s*e[0]+u*n[0],o),i(c*r[1]+s*e[1]+u*n[1],o)]},hn=(t,r,e,n,o=1/0)=>{let c=Math.pow(1-t,2),s=(1-t)*2*t,u=t*t;return[i(c*r[0]+s*e[0]+u*n[0],o),i(c*r[1]+s*e[1]+u*n[1],o),i(c*r[2]+s*e[2]+u*n[2],o)]},bn=(t,r,e,n,o,c=1/0)=>{let s=Math.pow(1-t,3),u=Math.pow(1-t,2)*3*t,a=(1-t)*3*t*t,x=t*t*t;return[i(s*r[0]+u*e[0]+a*n[0]+x*o[0],c),i(s*r[1]+u*e[1]+a*n[1]+x*o[1],c)]},gn=(t,r,e,n,o,c=1/0)=>{let s=Math.pow(1-t,3),u=Math.pow(1-t,2)*3*t,a=(1-t)*3*t*t,x=t*t*t;return[i(s*r[0]+u*e[0]+a*n[0]+x*o[0],c),i(s*r[1]+u*e[1]+a*n[1]+x*o[1],c),i(s*r[2]+u*e[2]+a*n[2]+x*o[2],c)]},Rt=(t,r,e,n,o=1/0)=>{let c=it(t,r,e,n);return d(c,o)},ln=(t,r,e,n,o=1/0)=>{let c=st(t,r,e,n);return y(c,o)},Ht=(t,r,e,n,o,c=1/0)=>{let s=ut(t,r,e,n,o);return d(s,c)},yn=(t,r,e,n,o,c=1/0)=>{let s=xt(t,r,e,n,o);return y(s,c)},In=(t,r,e,n,o=1/0)=>{let c=Rt(t,r,e,n,o);return[-c[1],c[0]]},vn=(t,r,e,n,o,c=1/0)=>{let s=Ht(t,r,e,n,o,c);return[-s[1],s[0]]};var wn=(t,r,e=1/0)=>{let n=[[t[0],t[1]],[r[0],r[1]]],o=et(n);if(o===null)return null;let c=[t[2],r[2]];return p(o,c,e)},Rn=(t,r,e,n=1/0)=>{let o=[[t[0],t[1],t[2]],[r[0],r[1],r[2]],[e[0],e[1],e[2]]],c=nt(o);if(c===null)return null;let s=[t[3],r[3],e[3]];return p(c,s,n)},Hn=(t,r=1/0)=>{if(t.length<=0)return null;let e=K(t),n=A(e);if(n===null)return null;let o=U(t);return p(n,o,r)};var Ct=(t,r,e)=>(r=r%Math.PI*2,[t[0]+Math.cos(r)*e,t[1]+Math.sin(r)*e]),Ln=(t,r,e)=>{let n=q(t,r),o=R(n);return o=ct(o,0,Math.PI*2,0,Math.PI),Ct(r,o,e)},$n=(t,r,e,n)=>(r=r%Math.PI*2,[t[0]+Math.cos(r)*e,t[1]+Math.sin(r)*n]),Bn=(t,r,e,n)=>{let o=r*Math.sin(2*Math.PI*e*t+n);return[t,o]},An=(t,r,e,n,o,c,s)=>[t*Math.cos(n*e-c),r*Math.cos(o*e-s)];var jn=()=>{let t=at();return zt(t)},qn=()=>{let t=at();return Lt(t)},at=()=>{let t=m(1,360),r=m(0,100),e=m(0,100);return[t,r,e]},Gn=t=>{let r=m(0,100),e=m(0,100);return[t,r,e]},Qn=t=>{let r=m(1,360),e=m(0,100);return[r,t,e]},Zn=t=>{let r=m(1,360),e=m(0,100);return[r,e,t]},Fn=()=>[0,0,m(0,100)],Wn=(t=1,r=360,e=0,n=100,o=0,c=100)=>{let s=m(t,r),u=m(e,n),a=m(o,c);return[s,u,a]},N=t=>(t*=60,t<0&&(t+=360),t*100/360),Tt=(t,r,e,n=void 0,o=void 0)=>(n=n===void 0?Math.min(t,r,e):n,o=n===void 0?Math.max(t,r,e):o,n===o?0:o===t?N((r-e)/(o-n)):o===r?N(2+(e-t)/(o-n)):o===e?N(4+(t-r)/(o-n)):0),pt=(t,r,e,n=void 0,o=void 0)=>(n=n===void 0?Math.min(t,r,e):n,o=n===void 0?Math.max(t,r,e):o,(n+o)/2*100),Dt=(t,r,e,n=void 0,o=void 0,c=void 0)=>(n=n===void 0?Math.min(t,r,e):n,o=n===void 0?Math.max(t,r,e):o,n===o?0:(c=c===void 0?pt(t,r,e):c,(c<=50?(o-n)/(o+n):(o-n)/(2-o-n))*100)),On=(t,r=1/0)=>{let e=t[0]/255,n=t[1]/255,o=t[2]/255,c=Math.min(e,n,o),s=Math.max(e,n,o),u=pt(e,n,o,c,s),a=Dt(e,n,o,c,s,u),x=Tt(e,n,o,c,s);return x>360||a>100||u>100?[0,0,100]:x<0||a<0||u<0?[0,0,0]:[i(x,r),i(a,r),i(u,r)]},X=(t,r,e)=>(e<0&&(e+=1),e>1&&(e-=1),e*6<1?r+(t-r)*6*e:e*2<1?t:e*3<2?r+(t-r)*(.666-e)*6:r),zt=(t,r=1/0)=>{let e=t[0]/100,n=t[1]/100,o=t[2]/100;if(n===0){let f=o*255;return[f,f,f]}let c=o<.5?o*(1+n):o+n-o*n,s=2*o-c,u=e+.333,a=e,x=e-.333,g=X(c,s,u),M=X(c,s,a),l=X(c,s,x);return g*=255,M*=255,l*=255,g>255||M>255||l>255?[255,255,255]:g<0||M<0||l<0?[0,0,0]:[i(g,r),i(M,r),i(l,r)]},Lt=t=>{if(t[0]>360||t[1]>100||t[2]>100)return"#ffffff";if(t[0]<0||t[1]<0||t[2]<0)return"#000000";let r=t[0]/360,e=t[1]/100,n=t[2]/100,o,c,s;if(e===0)o=c=s=n;else{let a=(M,l,f)=>(f<0&&(f+=1),f>1&&(f-=1),f<.16666666666666666?M+(l-M)*6*f:f<.5?l:f<.6666666666666666?M+(l-M)*(.6666666666666666-f)*6:M),x=n<.5?n*(1+e):n+e-n*e,g=2*n-x;o=a(g,x,r+1/3),c=a(g,x,r),s=a(g,x,r-1/3)}let u=a=>{let x=Math.round(a*255).toString(16);return x.length===1?"0"+x:x};return`#${u(o)}${u(c)}${u(s)}`},kn=(t,r=180)=>{let e=t[0];return e+=r,(e>360||e<0)&&(e=E(e,360)),[e,t[1],t[2]]},Jn=(t,r=10)=>{let e=t[2];return e+=r,(e>100||e<0)&&(e=E(e,100)),[t[0],t[1],e]},Kn=(t,r=10)=>{let e=t[1];return e+=r,e>100&&(e-=100),e<0&&(e+=100),[t[0],e,t[2]]};var _n=()=>"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,t=>{let r=Math.random()*16|0;return(t=="x"?r:r&3|8).toString(16)}),Pn=()=>Math.random().toString(36).substring(2)+new Date().getTime().toString(36);var eo=(t,r=1/0)=>i(t*2/Math.sqrt(2),r);export{Ct as circleMovement,Ln as circleMovementAfterMouse,ct as convertRange,Yt as degreesToRadians,ke as doRangesOverlap,sn as dxArcCos,xn as dxArcCot,cn as dxArcSin,un as dxArcTan,en as dxCos,on as dxCot,tn as dxPolynomial,rn as dxSin,nn as dxTan,ut as dxV2CubicBezierCurve,it as dxV2QuadraticBezierCurve,xt as dxV3CubicBezierCurve,st as dxV3QuadraticBezierCurve,$n as ellipseMovement,wn as equationSystem2,Rn as equationSystem3,Hn as equationSystemN,m as getRandom,Fe as getRandomBoolean,Fn as getRandomGrayscaleHSLColor,at as getRandomHSLColor,Gn as getRandomHSLColorWithHue,Zn as getRandomHSLColorWithLightness,Qn as getRandomHSLColorWithSaturation,Wn as getRandomHSLColorWithinRanges,qn as getRandomHexColor,wt as getRandomInt,We as getRandomItemFromArray,jn as getRandomRGBColor,kn as getShiftedHue,Jn as getShiftedLightness,Kn as getShiftedSaturation,eo as getSquareInCircleSide,R as getV2Angle,jt as getV2AngleBetween,qt as getV3AngleBetween,mt as getVNAngleBetween,_n as guid,Lt as hslToHex,zt as hslToRgb,wr as identity2,Rr as identity3,Hr as identity4,Cr as identityN,Je as isNumber,Fr as isSingularMatrix,An as lissajousCurve,tt as m2Adjugate,Lr as m2AppendRow,k as m2DeepCopy,P as m2Determinant,Mt as m2DivideScalar,et as m2Inverse,Mr as m2MulScalar,Ar as m2PrependRow,Re as m2ReflectionOrigin,He as m2ReflectionOriginH,ze as m2ReflectionX,Le as m2ReflectionXH,$e as m2ReflectionY,Be as m2ReflectionYH,De as m2ReflectionYmX,lr as m2Reset,ne as m2RotateAroundPointH,ht as m2Rotation,bt as m2RotationAroundPointH,ot as m2RotationH,vt as m2Scale,me as m2ScaleAtPointH,It as m2ScaleAtPointHMatrix,St as m2ScaleH,he as m2ScaleX,be as m2ScaleXH,de as m2ScaleY,we as m2ScaleYH,Ge as m2ShearingX,qe as m2ShearingY,mr as m2Sub,ar as m2Sum,Kr as m2ToCSS,te as m2Translation,L as m2TranslationH,br as m2Transpose,Ur as m2hToCSS,_r as m2hToCSS3d,Ir as m2x2,Zr as m3Adjugate,$r as m3AppendRow,J as m3DeepCopy,Qr as m3Determinant,hr as m3DivideScalar,nt as m3Inverse,Vr as m3MulScalar,Er as m3PrependRow,Ce as m3ReflectionOrigin,Te as m3ReflectionOriginH,Ye as m3ReflectionXY,je as m3ReflectionXYH,Ne as m3ReflectionXZ,Xe as m3ReflectionXZH,Ae as m3ReflectionYZ,Ee as m3ReflectionYZH,yr as m3Reset,gt as m3RotationX,ie as m3RotationXH,lt as m3RotationY,ue as m3RotationYH,yt as m3RotationZ,ae as m3RotationZH,dt as m3Scale,Me as m3ScaleH,ge as m3ScaleX,le as m3ScaleXH,ye as m3ScaleY,Ie as m3ScaleYH,ve as m3ScaleZ,Se as m3ScaleZH,fr as m3Sub,pr as m3Sum,re as m3Translation,ee as m3TranslationH,gr as m3Transpose,Pr as m3hToCSS3d,vr as m3x3,Sr as m4x4,rt as mAdjugate,Tr as mAppendCol,zr as mAppendRow,V as mDeepCopy,Yr as mDelFirstColumn,Xr as mDelFirstRow,K as mDelLastColumn,Nr as mDelLastRow,z as mDeterminant,B as mDivideScalar,Gr as mEqual,qr as mGetColumn,jr as mGetFirstColumn,U as mGetLastColumn,A as mInverse,_ as mMinor,w as mMul,W as mMulScalar,p as mMulVector,dr as mNxM,Dr as mPrependCol,Br as mPrependRow,O as mReset,F as mSub,Z as mSum,D as mTranspose,E as mod,Pn as newId,Xt as radiansToDegrees,On as rgbToHsl,i as setDecimalPlaces,Y as setV2Angle,Bn as sineWaveMovement,Ue as stringToNumber,or as v2,bn as v2CubicBezierCurve,vn as v2CubicBezierCurveNormal,Ht as v2CubicBezierCurveTangent,Pt as v2Distance,Jt as v2DivideScalar,rr as v2DotProduct,sr as v2FromPolarCoords,j as v2Length,kt as v2MulScalar,d as v2Normalize,Vn as v2QuadraticBezierCurve,In as v2QuadraticBezierCurveNormal,Rt as v2QuadraticBezierCurveTangent,oe as v2Rotate,ce as v2RotateH,fe as v2Scale,ft as v2SetLength,q as v2Sub,Ft as v2Sum,cr as v3,nr as v3CrossProduct,gn as v3CubicBezierCurve,yn as v3CubicBezierCurveTangent,tr as v3Distance,Kt as v3DivideScalar,er as v3DotProduct,Ut as v3Length,$ as v3MulScalar,y as v3Normalize,hn as v3QuadraticBezierCurve,ln as v3QuadraticBezierCurveTangent,se as v3RotateX,xe as v3RotateY,pe as v3RotateZ,Ve as v3Scale,Ot as v3Sub,Wt as v3Sum,ir as v4,_t as vDistance,T as vDivideScalar,I as vDotProduct,Q as vEqual,v as vLength,C as vMulScalar,G as vN,S as vNormalize,b as vSub,H as vSum};
//# sourceMappingURL=mz-math.esm.js.map
