/* 
Tool Cool Math Helpers
Version: 1.0.19
Documentation: https://github.com/toolcool-org/toolcool-math
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
var C=Math.pow;var x=(t,r=1/0)=>{if(r===1/0)return t;r<0&&(r=0);let e=C(10,r);return Math.round(t*e)/e};var V=(t,r=1/0)=>{let e=Math.atan2(t[1],t[0]);return x(e,r)},mt=(t,r,e=1/0)=>{let n=z(t);return[x(Math.cos(r)*n,e),x(Math.sin(r)*n,e)]},pt=(t,r=1/0)=>{let e=t*(180/Math.PI);return x(e,r)},ft=(t,r=1/0)=>{let e=t*(Math.PI/180);return x(e,r)},E=(t,r,e=1/0)=>{let n=b(t),o=b(r),i=l(n,o),s=Math.acos(i);return x(s,e)},ht=(t,r,e=1/0)=>E(t,r,e),Mt=(t,r,e=1/0)=>E(t,r,e);var g=(t,r,e=1/0)=>{let n=[];for(let o=0;o<t.length;o++)n.push(x(t[o]+r[o],e));return n},gt=(t,r,e=1/0)=>g(t,r,e),yt=(t,r,e=1/0)=>g(t,r,e),y=(t,r,e=1/0)=>{let n=[];for(let o=0;o<t.length;o++)n.push(x(t[o]-r[o],e));return n},A=(t,r,e=1/0)=>y(t,r,e),dt=(t,r,e=1/0)=>y(t,r,e),d=(t,r,e=1/0)=>{let n=[];for(let o=0;o<t.length;o++)n.push(x(t[o]*r,e));return n},vt=(t,r,e=1/0)=>d(t,r,e),It=(t,r,e=1/0)=>d(t,r,e),v=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let n=[];for(let o=0;o<t.length;o++)n.push(x(t[o]/r,e));return n},St=(t,r,e=1/0)=>v(t,r,e),wt=(t,r,e=1/0)=>v(t,r,e),L=(t,r=1/0)=>{let e=0;for(let n=0;n<t.length;n++)e+=t[n]*t[n];return x(Math.sqrt(e),r)},z=(t,r=1/0)=>L(t,r),Lt=(t,r=1/0)=>L(t,r),Rt=(t,r,e=1/0)=>{let n=V(t);return[x(Math.cos(n)*r,e),x(Math.sin(n)*r,e)]},b=(t,r=1/0)=>{let e=L(t),n=[];for(let o=0;o<t.length;o++)n.push(e===0?0:x(t[o]/e,r));return n},Dt=(t,r=1/0)=>b(t,r),Tt=(t,r=1/0)=>b(t,r),l=(t,r,e=1/0)=>{let n=0;for(let o=0;o<t.length;o++)n+=t[o]*r[o];return x(n,e)},Ht=(t,r,e=1/0)=>l(t,r,e),Ct=(t,r,e=1/0)=>l(t,r,e),Et=(t,r,e=1/0)=>[x(t[1]*r[2]-t[2]*r[1],e),x(t[2]*r[0]-t[0]*r[2],e),x(t[0]*r[1]-t[1]*r[0],e)],zt=(t=0)=>[t,t],At=(t=0)=>[t,t,t],jt=(t=0)=>[t,t,t,t],j=(t,r=0)=>{if(t<0)throw new Error("N must be a non-negative number.");let e=[];for(let n=0;n<t;n++)e.push(r);return e},N=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0};var B=(t,r,e=1/0)=>{let n=[];for(let o=0;o<t.length;o++)n.push(g(t[o],r[o],e));return n},qt=(t,r,e=1/0)=>B(t,r,e),Gt=(t,r,e=1/0)=>B(t,r,e),q=(t,r,e=1/0)=>{let n=[];for(let o=0;o<t.length;o++)n.push(y(t[o],r[o],e));return n},Ft=(t,r,e=1/0)=>q(t,r,e),Wt=(t,r,e=1/0)=>q(t,r,e),G=(t,r,e=1/0)=>{let n=[];for(let o of t)n.push(d(o,r,e));return n},$t=(t,r,e=1/0)=>G(t,r,e),Qt=(t,r,e=1/0)=>G(t,r,e),R=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let n=[];for(let o of t)n.push(v(o,r,e));return n},tt=(t,r,e=1/0)=>R(t,r,e),Ot=(t,r,e=1/0)=>R(t,r,e),I=t=>{let r=t.length;if(r<=0)return t;let e=t[0].length;if(e<=0)return t;let n=[];for(let o=0;o<e;o++)n.push([]);for(let o=0;o<r;o++)for(let i=0;i<e;i++)n[i].push(t[o][i]);return n},kt=t=>I(t),Jt=t=>I(t),F=(t,r=0)=>{if(t.length<=0)return[];let e=[];for(let n=0;n<t.length;n++){let o=t[n].length,i=[];for(let s=0;s<o;s++)i.push(r);e.push(i)}return e},Kt=(t,r=0)=>F(t,r),Ut=(t,r=0)=>F(t,r),Xt=(t=0)=>[[t,t],[t,t]],Yt=(t=0)=>[[t,t,t],[t,t,t],[t,t,t]],Zt=(t=0)=>[[t,t,t,t],[t,t,t,t],[t,t,t,t],[t,t,t,t]],_t=(t,r,e=0)=>{if(t<=0||r<=0)throw new Error("M and N must be positive numbers.");let n=[];for(let o=0;o<t;o++)n.push(j(r,e));return n},Pt=()=>[[1,0],[0,1]],tr=()=>[[1,0,0],[0,1,0],[0,0,1]],rr=()=>[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],er=t=>{if(t<0)throw new Error("N must be a non-negative number.");if(t===0)return[];let r=[];for(let e=0;e<t;e++){let n=[];for(let o=0;o<t;o++)n.push(e===o?1:0);r.push(n)}return r},m=t=>{let r=[];for(let e=0;e<t.length;e++){let n=t[e],o=[];for(let i=0;i<n.length;i++)o.push(n[i]);r.push(o)}return r},W=t=>m(t),$=t=>m(t),nr=(t,r)=>{if(t.length<=0)return[];let e=m(t);for(let n=0;n<e.length;n++)e[n].push(r[n]);return e},or=(t,r)=>{if(t.length<=0)return[];let e=m(t);for(let n=0;n<e.length;n++)e[n].unshift(r[n]);return e},ir=(t,r)=>{let e=m(t);return e.push(r),e},sr=(t,r)=>{let e=W(t);return e.push(r),e},cr=(t,r)=>{let e=$(t);return e.push(r),e},ur=(t,r)=>{let e=m(t);return e.unshift(r),e},xr=(t,r)=>{let e=W(t);return e.unshift(r),e},ar=(t,r)=>{let e=$(t);return e.unshift(r),e},mr=t=>{if(t.length<=0)return[];let r=m(t);return r.pop(),r},pr=t=>{if(t.length<=0)return[];let r=m(t);return r.shift(),r},Q=t=>{if(t.length<=0)return[];let r=m(t);for(let e=0;e<r.length;e++)r[e].pop();return r},fr=t=>{if(t.length<=0)return[];let r=m(t);for(let e=0;e<r.length;e++)r[e].shift();return r},hr=t=>{if(t.length<=0)return[];let r=[];for(let e=0;e<t.length;e++)r.push(t[e][0]);return r},O=t=>{if(t.length<=0)return[];let r=t[0].length,e=[];for(let n=0;n<t.length;n++)e.push(t[n][r-1]);return e},Mr=(t,r)=>{if(t.length<=0)return[];let e=[];for(let n=0;n<t.length;n++)e.push(t[n][r]);return e},lr=(t,r,e=1/0)=>{let n=[];for(let i=0;i<t.length;i++)n.push([]);let o=I(r);if(n.length!==o.length)throw new Error("The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.");for(let i=0;i<t.length;i++){let s=t[i];for(let c=0;c<o.length;c++){let u=o[c],f=l(s,u,e);n[i].push(f)}}return n},S=(t,r,e=1/0)=>{if(t.length<0)return[];if(t[0].length!==r.length)throw new Error("The number of columns in the matrix must be equal to the length of the vector.");let n=[];for(let o=0;o<t.length;o++)n[o]=l(t[o],r,e);return n},br=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(!N(t[e],r[e]))return!1;return!0},rt=(t,r,e)=>{let n=t.length;if(n<=0)throw new Error("The matrix should not be empty.");if(n!==t[0].length)throw new Error("The matrix must be square.");let o=[];for(let i=0;i<n;i++){if(i===r)continue;let s=[];for(let c=0;c<n;c++)c!==e&&s.push(t[i][c]);o.push(s)}return o},k=(t,r,e)=>{let n=t.length;if(n<=0)throw new Error("The matrix should not be empty.");if(n!==t[0].length)throw new Error("The matrix must be square.");let o=rt(t,r,e);return w(o)},w=t=>{let r=t.length;if(r===0)return 1;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t[0][0];if(r===2)return J(t);let e=0;for(let n=0;n<r;n++){let o=k(t,0,n),i=t[0][n];n%2!==0&&(i=-i),e+=o*i}return e},J=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return t[0][0]*t[1][1]-t[1][0]*t[0][1]},Vr=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return w(t)},K=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return[[t[1][1],-t[0][1]],[-t[1][0],t[0][0]]]},gr=t=>U(t),U=t=>{let r=t.length;if(r<=0)return null;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t;if(r===2)return K(t);let e=[];for(let n=0;n<r;n++){let o=[];for(let i=0;i<r;i++){let s=k(t,n,i),c=Math.pow(-1,n+i);o.push(c*s)}e.push(o)}return I(e)},yr=t=>{if(t.length>0&&t.length!==t[0].length)throw new Error("The matrix must be square.");return w(t)===0},X=(t,r=1/0)=>{if(t.length>0&&t.length!==t[0].length)throw new Error("The matrix must be square.");let e=J(t);if(e===0)return null;let n=K(t);return n===null?null:tt(n,e,r)},Y=(t,r=1/0)=>D(t,r),D=(t,r=1/0)=>{let e=t.length;if(e>0&&e!==t[0].length)throw new Error("The matrix must be square.");let n=w(t),o=U(t);return o===null?null:R(o,n,r)};var a=(t,r,e=1/0)=>x(Math.random()*(r-t)+t,e),et=(t,r)=>Math.floor(Math.random()*(r-t+1)+t),Ir=()=>Math.random()<.5,Sr=t=>{let r=et(0,t.length-1);return t[r]};var Z=(t,r)=>(t%r+r)%r,_=(t,r,e,n,o)=>(o-n)*(t-r)/(e-r)+n,Lr=(t,r,e,n)=>Math.max(t,e)<=Math.min(r,n),Rr=t=>!isNaN(parseFloat(t))&&isFinite(t);var Tr=(t,r)=>{var n;if(t==null)return r;let e=(n=Number(t))!=null?n:r;return isNaN(e)?r:e};var Cr=(t,r,e,n)=>{let o=Math.pow(1-t,2),i=(1-t)*2*t,s=t*t;return[o*r[0]+i*e[0]+s*n[0],o*r[1]+i*e[1]+s*n[1]]},Er=(t,r,e,n)=>{let o=Math.pow(1-t,2),i=(1-t)*2*t,s=t*t;return[o*r[0]+i*e[0]+s*n[0],o*r[1]+i*e[1]+s*n[1],o*r[2]+i*e[2]+s*n[2]]},zr=(t,r,e,n,o)=>{let i=Math.pow(1-t,3),s=Math.pow(1-t,2)*3*t,c=(1-t)*3*t*t,u=t*t*t;return[i*r[0]+s*e[0]+c*n[0]+u*o[0],i*r[1]+s*e[1]+c*n[1]+u*o[1]]},Ar=(t,r,e,n,o)=>{let i=Math.pow(1-t,3),s=Math.pow(1-t,2)*3*t,c=(1-t)*3*t*t,u=t*t*t;return[i*r[0]+s*e[0]+c*n[0]+u*o[0],i*r[1]+s*e[1]+c*n[1]+u*o[1],i*r[2]+s*e[2]+c*n[2]+u*o[2]]};var Br=(t,r,e=1/0)=>{let n=[[t[0],t[1]],[r[0],r[1]]],o=X(n);if(o===null)return null;let i=[t[2],r[2]];return S(o,i,e)},qr=(t,r,e,n=1/0)=>{let o=[[t[0],t[1],t[2]],[r[0],r[1],r[2]],[e[0],e[1],e[2]]],i=Y(o);if(i===null)return null;let s=[t[3],r[3],e[3]];return S(i,s,n)},Gr=(t,r=1/0)=>{if(t.length<=0)return null;let e=Q(t),n=D(e);if(n===null)return null;let o=O(t);return S(n,o,r)};var nt=(t,r,e)=>(r=r%Math.PI*2,[t[0]+Math.cos(r)*e,t[1]+Math.sin(r)*e]),Or=(t,r,e)=>{let n=A(t,r),o=V(n);return o=_(o,0,Math.PI*2,0,Math.PI),nt(r,o,e)},kr=(t,r,e,n)=>(r=r%Math.PI*2,[t[0]+Math.cos(r)*e,t[1]+Math.sin(r)*n]),Jr=(t,r,e,n)=>{let o=r*Math.sin(2*Math.PI*e*t+n);return[t,o]},Kr=(t,r,e,n,o,i,s)=>[t*Math.cos(n*e-i),r*Math.cos(o*e-s)];var Zr=()=>{let t=a(1,360),r=a(0,100),e=a(0,95);return[t,r,e]},_r=t=>{let r=a(0,100),e=a(0,95);return[t,r,e]},Pr=t=>{let r=a(1,360),e=a(0,95);return[r,t,e]},te=t=>{let r=a(1,360),e=a(0,100);return[r,e,t]},re=()=>[0,0,a(0,100)],ee=(t=1,r=360,e=0,n=100,o=0,i=100)=>{let s=a(t,r),c=a(e,n),u=a(o,i);return[s,c,u]},ne=(t,r=180)=>{let e=t[0];return e+=r,(e>360||e<0)&&(e=Z(e,360)),[e,t[1],t[2]]},oe=(t,r=10)=>{let e=t[2];return e+=r,e>100&&(e=100),e<0&&(e+=100),[t[0],t[1],e]},ie=(t,r=10)=>{let e=t[1];return e+=r,e>100&&(e-=100),e<0&&(e+=100),[t[0],e,t[2]]},se=(t,r,e)=>{t/=360,r/=100,e/=100;let n,o,i;if(r===0)n=o=i=e;else{let c=(h,M,p)=>(p<0&&(p+=1),p>1&&(p-=1),p<.16666666666666666?h+(M-h)*6*p:p<.5?M:p<.6666666666666666?h+(M-h)*(.6666666666666666-p)*6:h),u=e<.5?e*(1+r):e+r-e*r,f=2*e-u;n=c(f,u,t+1/3),o=c(f,u,t),i=c(f,u,t-1/3)}let s=c=>{let u=Math.round(c*255).toString(16);return u.length===1?"0"+u:u};return`#${s(n)}${s(o)}${s(i)}`},P=(t,r,e,n=void 0,o=void 0)=>(n=n===void 0?Math.min(t,r,e):n,o=n===void 0?Math.max(t,r,e):o,(n+o)/2*100),ot=(t,r,e,n=void 0,o=void 0,i=void 0)=>(n=n===void 0?Math.min(t,r,e):n,o=n===void 0?Math.max(t,r,e):o,n===o?0:(i=i===void 0?P(t,r,e):i,(i<=50?(o-n)/(o+n):(o-n)/(2-o-n))*100)),T=t=>(t*=60,t<0&&(t+=360),t*100/360),it=(t,r,e,n=void 0,o=void 0)=>(n=n===void 0?Math.min(t,r,e):n,o=n===void 0?Math.max(t,r,e):o,n===o?0:o===t?T((r-e)/(o-n)):o===r?T(2+(e-t)/(o-n)):o===e?T(4+(t-r)/(o-n)):0),ce=(t,r,e)=>{t/=255,r/=255,e/=255;let n=Math.min(t,r,e),o=Math.max(t,r,e),i=P(t,r,e,n,o),s=ot(t,r,e,n,o,i),c=it(t,r,e,n,o);return[i,s,c]},H=(t,r,e)=>(e<0&&(e+=1),e>1&&(e-=1),e*6<1?r+(t-r)*6*e:e*2<1?t:e*3<2?r+(t-r)*(.666-e)*6:r),ue=(t,r,e)=>{if(t/=100,r/=100,e/=100,r===0){let M=e*255;return[M,M,M]}let n=e<.5?e*(1+r):e+r-e*r,o=2*e-n,i=t+.333,s=t,c=t-.333,u=H(n,o,i),f=H(n,o,s),h=H(n,o,c);return u*=255,f*=255,h*=255,[u,f,h]};export{nt as circleMovement,Or as circleMovementAfterMouse,_ as convertRange,ft as degreesToRadians,Lr as doRangesOverlap,kr as ellipseMovement,Br as equationSystem2,qr as equationSystem3,Gr as equationSystemN,it as getHue,P as getLuminance,a as getRandom,Ir as getRandomBoolean,re as getRandomGrayscaleHSLColor,Zr as getRandomHSLColor,_r as getRandomHSLColorWithHue,te as getRandomHSLColorWithLightness,Pr as getRandomHSLColorWithSaturation,ee as getRandomHSLColorWithinRanges,et as getRandomInt,Sr as getRandomItemFromArray,ot as getSaturation,ne as getShiftedHue,oe as getShiftedLightness,ie as getShiftedSaturation,V as getV2Angle,ht as getV2AngleBetween,Mt as getV3AngleBetween,E as getVNAngleBetween,se as hslToHex,ue as hslToRgb,Pt as identity2,tr as identity3,rr as identity4,er as identityN,Rr as isNumber,yr as isSingularMatrix,Kr as lissajousCurve,K as m2Adjugate,sr as m2AppendRow,W as m2DeepCopy,J as m2Determinant,tt as m2DivideScalar,X as m2Inverse,$t as m2MulScalar,xr as m2PrependRow,Kt as m2Reset,Ft as m2Sub,qt as m2Sum,kt as m2Transpose,Xt as m2x2,gr as m3Adjugate,cr as m3AppendRow,$ as m3DeepCopy,Vr as m3Determinant,Ot as m3DivideScalar,Y as m3Inverse,Qt as m3MulScalar,ar as m3PrependRow,Ut as m3Reset,Wt as m3Sub,Gt as m3Sum,Jt as m3Transpose,Yt as m3x3,Zt as m4x4,U as mAdjugate,nr as mAppendCol,ir as mAppendRow,m as mDeepCopy,fr as mDelFirstColumn,pr as mDelFirstRow,Q as mDelLastColumn,mr as mDelLastRow,w as mDeterminant,R as mDivideScalar,br as mEqual,Mr as mGetColumn,hr as mGetFirstColumn,O as mGetLastColumn,D as mInverse,k as mMinor,lr as mMul,G as mMulScalar,S as mMulVector,_t as mNxM,or as mPrependCol,ur as mPrependRow,F as mReset,q as mSub,B as mSum,I as mTranspose,Z as mod,pt as radiansToDegrees,ce as rgbToHsl,x as setDecimalPlaces,mt as setV2Angle,Jr as sineWaveMovement,Tr as stringToNumber,zt as v2,zr as v2CubicBezierCurve,St as v2DivideScalar,Ht as v2DotProduct,z as v2Length,vt as v2MulScalar,Dt as v2Normalize,Cr as v2QuadraticBezierCurve,Rt as v2SetLength,A as v2Sub,gt as v2Sum,At as v3,Et as v3CrossProduct,Ar as v3CubicBezierCurve,wt as v3DivideScalar,Ct as v3DotProduct,Lt as v3Length,It as v3MulScalar,Tt as v3Normalize,Er as v3QuadraticBezierCurve,dt as v3Sub,yt as v3Sum,jt as v4,v as vDivideScalar,l as vDotProduct,N as vEqual,L as vLength,d as vMulScalar,j as vN,b as vNormalize,y as vSub,g as vSum};
//# sourceMappingURL=tc-math.esm.js.map
