/* 
Tool Cool Math Helpers
Version: 1.0.10
Documentation: https://github.com/toolcool-org/toolcool-math
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
var g=Object.defineProperty;var J=Object.getOwnPropertyDescriptor;var K=Object.getOwnPropertyNames;var U=Object.prototype.hasOwnProperty;var B=Math.pow;var W=(t,r)=>{for(var e in r)g(t,e,{get:r[e],enumerable:!0})},_=(t,r,e,o)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of K(r))!U.call(t,n)&&n!==e&&g(t,n,{get:()=>r[n],enumerable:!(o=J(r,n))||o.enumerable});return t};var $=t=>_(g({},"__esModule",{value:!0}),t);var er={};W(er,{convertRange:()=>Kt,degreesToRadians:()=>tt,doRangesOverlap:()=>Ut,equationSystem2:()=>rr,getRandom:()=>Ot,getRandomBoolean:()=>kt,getRandomInt:()=>k,getRandomItemFromArray:()=>Gt,getV2Angle:()=>v,identity2:()=>qt,identity3:()=>dt,identityN:()=>jt,isNumber:()=>Wt,m2Adjugate:()=>O,m2Determinant:()=>j,m2DivideScalar:()=>L,m2Inverse:()=>R,m2MulScalar:()=>vt,m2Reset:()=>Dt,m2Rotation:()=>A,m2Scale:()=>Y,m2Sub:()=>lt,m2Sum:()=>Vt,m2Transpose:()=>wt,m2x2:()=>Tt,m3Determinant:()=>Ht,m3DivideScalar:()=>It,m3MulScalar:()=>yt,m3Reset:()=>Et,m3RotationX:()=>F,m3RotationY:()=>Q,m3RotationZ:()=>X,m3Scale:()=>Z,m3Sub:()=>gt,m3Sum:()=>bt,m3Transpose:()=>St,m3x3:()=>zt,mDeterminant:()=>d,mDivideScalar:()=>N,mEqual:()=>Bt,mMinor:()=>H,mMul:()=>Rt,mMulScalar:()=>z,mMulVector:()=>x,mNxM:()=>Nt,mReset:()=>q,mSub:()=>T,mSum:()=>E,mTranspose:()=>l,mod:()=>Jt,radiansToDegrees:()=>P,setDecimalPlaces:()=>c,setV2Angle:()=>C,stringToNumber:()=>_t,v2:()=>ht,v2CubicBezierCurve:()=>Pt,v2DivideScalar:()=>st,v2DotProduct:()=>mt,v2Length:()=>y,v2MulScalar:()=>it,v2Normalize:()=>w,v2QuadraticBezierCurve:()=>$t,v2Rotate:()=>Lt,v2Scale:()=>Xt,v2SetLength:()=>at,v2Sub:()=>ot,v2Sum:()=>rt,v3:()=>ft,v3CrossProduct:()=>Mt,v3CubicBezierCurve:()=>tr,v3DivideScalar:()=>ut,v3DotProduct:()=>pt,v3Length:()=>xt,v3MulScalar:()=>ct,v3Normalize:()=>V,v3QuadraticBezierCurve:()=>Ct,v3RotateX:()=>At,v3RotateY:()=>Ft,v3RotateZ:()=>Qt,v3Scale:()=>Yt,v3Sub:()=>nt,v3Sum:()=>et,vDivideScalar:()=>f,vDotProduct:()=>m,vEqual:()=>D,vLength:()=>b,vMulScalar:()=>h,vN:()=>S,vNormalize:()=>I,vSub:()=>M,vSum:()=>p});module.exports=$(er);var c=(t,r=1/0)=>{if(r===1/0)return t;r<0&&(r=0);let e=B(10,r);return Math.round(t*e)/e};var v=(t,r=1/0)=>{let e=Math.atan2(t[1],t[0]);return c(e,r)},C=(t,r,e=1/0)=>{let o=y(t);return[c(Math.cos(r)*o,e),c(Math.sin(r)*o,e)]},P=(t,r=1/0)=>{let e=t*(180/Math.PI);return c(e,r)},tt=(t,r=1/0)=>{let e=t*(Math.PI/180);return c(e,r)};var p=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(c(t[n]+r[n],e));return o},rt=(t,r,e=1/0)=>p(t,r,e),et=(t,r,e=1/0)=>p(t,r,e),M=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(c(t[n]-r[n],e));return o},ot=(t,r,e=1/0)=>M(t,r,e),nt=(t,r,e=1/0)=>M(t,r,e),h=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(c(t[n]*r,e));return o},it=(t,r,e=1/0)=>h(t,r,e),ct=(t,r,e=1/0)=>h(t,r,e),f=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n=0;n<t.length;n++)o.push(c(t[n]/r,e));return o},st=(t,r,e=1/0)=>f(t,r,e),ut=(t,r,e=1/0)=>f(t,r,e),b=(t,r=1/0)=>{let e=0;for(let o=0;o<t.length;o++)e+=t[o]*t[o];return c(Math.sqrt(e),r)},y=(t,r=1/0)=>b(t,r),xt=(t,r=1/0)=>b(t,r),at=(t,r,e=1/0)=>{let o=v(t);return[c(Math.cos(o)*r,e),c(Math.sin(o)*r,e)]},I=(t,r=1/0)=>{let e=b(t),o=[];for(let n=0;n<t.length;n++)o.push(e===0?0:c(t[n]/e,r));return o},w=(t,r=1/0)=>I(t,r),V=(t,r=1/0)=>I(t,r),m=(t,r,e=1/0)=>{let o=0;for(let n=0;n<t.length;n++)o+=t[n]*r[n];return c(o,e)},mt=(t,r,e=1/0)=>m(t,r,e),pt=(t,r,e=1/0)=>m(t,r,e),Mt=(t,r,e=1/0)=>[c(t[1]*r[2]-t[2]*r[1],e),c(t[2]*r[0]-t[0]*r[2],e),c(t[0]*r[1]-t[1]*r[0],e)],ht=(t=0)=>[t,t],ft=(t=0)=>[t,t,t],S=(t,r=0)=>{if(t<0)throw new Error("N must be a non-negative number.");let e=[];for(let o=0;o<t;o++)e.push(r);return e},D=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0};var E=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(p(t[n],r[n],e));return o},Vt=(t,r,e=1/0)=>E(t,r,e),bt=(t,r,e=1/0)=>E(t,r,e),T=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(M(t[n],r[n],e));return o},lt=(t,r,e=1/0)=>T(t,r,e),gt=(t,r,e=1/0)=>T(t,r,e),z=(t,r,e=1/0)=>{let o=[];for(let n of t)o.push(h(n,r,e));return o},vt=(t,r,e=1/0)=>z(t,r,e),yt=(t,r,e=1/0)=>z(t,r,e),N=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n of t)o.push(f(n,r,e));return o},L=(t,r,e=1/0)=>N(t,r,e),It=(t,r,e=1/0)=>N(t,r,e),l=t=>{let r=t.length;if(r<=0)return t;let e=t[0].length;if(e<=0)return t;let o=[];for(let n=0;n<e;n++)o.push([]);for(let n=0;n<r;n++)for(let i=0;i<e;i++)o[i].push(t[n][i]);return o},wt=t=>l(t),St=t=>l(t),q=(t,r=0)=>{if(t.length<=0)return[];let e=[];for(let o=0;o<t.length;o++){let n=t[o].length,i=[];for(let s=0;s<n;s++)i.push(r);e.push(i)}return e},Dt=(t,r=0)=>q(t,r),Et=(t,r=0)=>q(t,r),Tt=(t=0)=>[[t,t],[t,t]],zt=(t=0)=>[[t,t,t],[t,t,t],[t,t,t]],Nt=(t,r,e=0)=>{if(t<=0||r<=0)throw new Error("M and N must be positive numbers.");let o=[];for(let n=0;n<t;n++)o.push(S(r,e));return o},qt=()=>[[1,0],[0,1]],dt=()=>[[1,0,0],[0,1,0],[0,0,1]],jt=t=>{if(t<0)throw new Error("N must be a non-negative number.");if(t===0)return[];let r=[];for(let e=0;e<t;e++){let o=[];for(let n=0;n<t;n++)o.push(e===n?1:0);r.push(o)}return r},Rt=(t,r,e=1/0)=>{let o=[];for(let i=0;i<t.length;i++)o.push([]);let n=l(r);if(o.length!==n.length)throw new Error("The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.");for(let i=0;i<t.length;i++){let s=t[i];for(let u=0;u<n.length;u++){let a=n[u],G=m(s,a,e);o[i].push(G)}}return o},x=(t,r,e=1/0)=>{if(t.length<0)return[];if(t[0].length!==r.length)throw new Error("The number of columns in the matrix must be equal to the length of the vector.");let o=[];for(let n=0;n<t.length;n++)o[n]=m(t[n],r,e);return o},Bt=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(!D(t[e],r[e]))return!1;return!0},A=t=>[[Math.cos(t),-Math.sin(t)],[Math.sin(t),Math.cos(t)]],Lt=(t,r)=>{let e=w(r);return x(A(t),e)},F=t=>[[1,0,0],[0,Math.cos(t),-Math.sin(t)],[0,Math.sin(t),Math.cos(t)]],At=(t,r)=>{let e=V(r);return x(F(t),e)},Q=t=>[[Math.cos(t),0,Math.sin(t)],[0,1,0],[-Math.sin(t),0,Math.cos(t)]],Ft=(t,r)=>{let e=V(r);return x(Q(t),e)},X=t=>[[Math.cos(t),-Math.sin(t),0],[Math.sin(t),Math.cos(t),0],[0,0,1]],Qt=(t,r)=>{let e=V(r);return x(X(t),e)},Y=t=>[[t[0],0],[0,t[1]]],Xt=(t,r)=>x(Y(t),r),Z=t=>[[t[0],0,0],[0,t[1],0],[0,0,t[2]]],Yt=(t,r)=>x(Z(t),r),Zt=(t,r,e)=>{let o=t.length;if(o<=0)throw new Error("The matrix should not be empty.");if(o!==t[0].length)throw new Error("The matrix must be square.");let n=[];for(let i=0;i<o;i++){if(i===r)continue;let s=[];for(let u=0;u<o;u++)u!==e&&s.push(t[i][u]);n.push(s)}return n},H=(t,r,e)=>{let o=t.length;if(o<=0)throw new Error("The matrix should not be empty.");if(o!==t[0].length)throw new Error("The matrix must be square.");let n=Zt(t,r,e);return d(n)},d=t=>{let r=t.length;if(r===0)return 1;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t[0][0];if(r===2)return j(t);let e=0;for(let o=0;o<r;o++){let n=H(t,0,o),i=t[0][o];o%2!==0&&(i=-i),e+=n*i}return e},j=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return t[0][0]*t[1][1]-t[1][0]*t[0][1]},Ht=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return d(t)},O=t=>[[t[1][1],-t[0][1]],[-t[1][0],t[0][0]]],R=(t,r=1/0)=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");let e=j(t);if(e===0)return null;let o=O(t);return L(o,e,r)};var Ot=(t,r,e=1/0)=>c(Math.random()*(r-t)+t,e),k=(t,r)=>Math.floor(Math.random()*(r-t+1)+t),kt=()=>Math.random()<.5,Gt=t=>{let r=k(0,t.length-1);return t[r]};var Jt=(t,r)=>(t%r+r)%r,Kt=(t,r,e,o,n)=>(n-o)*(t-r)/(e-r)+o,Ut=(t,r,e,o)=>Math.max(t,e)<=Math.min(r,o),Wt=t=>!isNaN(parseFloat(t))&&isFinite(t);var _t=(t,r)=>{var o;if(t==null)return r;let e=(o=Number(t))!=null?o:r;return isNaN(e)?r:e};var $t=(t,r,e,o)=>{let n=Math.pow(1-t,2),i=(1-t)*2*t,s=t*t;return[n*r[0]+i*e[0]+s*o[0],n*r[1]+i*e[1]+s*o[1]]},Ct=(t,r,e,o)=>{let n=Math.pow(1-t,2),i=(1-t)*2*t,s=t*t;return[n*r[0]+i*e[0]+s*o[0],n*r[1]+i*e[1]+s*o[1],n*r[2]+i*e[2]+s*o[2]]},Pt=(t,r,e,o,n)=>{let i=Math.pow(1-t,3),s=Math.pow(1-t,2)*3*t,u=(1-t)*3*t*t,a=t*t*t;return[i*r[0]+s*e[0]+u*o[0]+a*n[0],i*r[1]+s*e[1]+u*o[1]+a*n[1]]},tr=(t,r,e,o,n)=>{let i=Math.pow(1-t,3),s=Math.pow(1-t,2)*3*t,u=(1-t)*3*t*t,a=t*t*t;return[i*r[0]+s*e[0]+u*o[0]+a*n[0],i*r[1]+s*e[1]+u*o[1]+a*n[1],i*r[2]+s*e[2]+u*o[2]+a*n[2]]};var rr=(t,r,e=1/0)=>{let o=[[t[0],t[1]],[r[0],r[1]]],n=R(o);if(n===null)return null;let i=[t[2],r[2]];return x(n,i,e)};0&&(module.exports={convertRange,degreesToRadians,doRangesOverlap,equationSystem2,getRandom,getRandomBoolean,getRandomInt,getRandomItemFromArray,getV2Angle,identity2,identity3,identityN,isNumber,m2Adjugate,m2Determinant,m2DivideScalar,m2Inverse,m2MulScalar,m2Reset,m2Rotation,m2Scale,m2Sub,m2Sum,m2Transpose,m2x2,m3Determinant,m3DivideScalar,m3MulScalar,m3Reset,m3RotationX,m3RotationY,m3RotationZ,m3Scale,m3Sub,m3Sum,m3Transpose,m3x3,mDeterminant,mDivideScalar,mEqual,mMinor,mMul,mMulScalar,mMulVector,mNxM,mReset,mSub,mSum,mTranspose,mod,radiansToDegrees,setDecimalPlaces,setV2Angle,stringToNumber,v2,v2CubicBezierCurve,v2DivideScalar,v2DotProduct,v2Length,v2MulScalar,v2Normalize,v2QuadraticBezierCurve,v2Rotate,v2Scale,v2SetLength,v2Sub,v2Sum,v3,v3CrossProduct,v3CubicBezierCurve,v3DivideScalar,v3DotProduct,v3Length,v3MulScalar,v3Normalize,v3QuadraticBezierCurve,v3RotateX,v3RotateY,v3RotateZ,v3Scale,v3Sub,v3Sum,vDivideScalar,vDotProduct,vEqual,vLength,vMulScalar,vN,vNormalize,vSub,vSum});
//# sourceMappingURL=tc-math.node.cjs.map
