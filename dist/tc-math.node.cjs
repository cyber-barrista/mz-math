/* 
Tool Cool Math Helpers
Version: 1.0.13
Documentation: https://github.com/toolcool-org/toolcool-math
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
var w=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var tt=Object.prototype.hasOwnProperty;var H=Math.pow;var rt=(t,r)=>{for(var e in r)w(t,e,{get:r[e],enumerable:!0})},et=(t,r,e,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of P(r))!tt.call(t,o)&&o!==e&&w(t,o,{get:()=>r[o],enumerable:!(n=C(r,o))||n.enumerable});return t};var nt=t=>et(w({},"__esModule",{value:!0}),t);var br={};rt(br,{convertRange:()=>sr,degreesToRadians:()=>ct,doRangesOverlap:()=>ur,equationSystem2:()=>fr,equationSystem3:()=>Vr,equationSystemN:()=>lr,getRandom:()=>nr,getRandomBoolean:()=>or,getRandomInt:()=>_,getRandomItemFromArray:()=>ir,getV2Angle:()=>S,identity2:()=>Lt,identity3:()=>Ft,identityN:()=>Qt,isNumber:()=>xr,m2Adjugate:()=>Q,m2AppendRow:()=>Zt,m2DeepCopy:()=>q,m2Determinant:()=>F,m2DivideScalar:()=>O,m2Inverse:()=>Y,m2MulScalar:()=>Et,m2PrependRow:()=>kt,m2Reset:()=>jt,m2Rotation:()=>k,m2Scale:()=>U,m2Sub:()=>St,m2Sum:()=>It,m2Transpose:()=>zt,m2x2:()=>At,m3Adjugate:()=>er,m3AppendRow:()=>Ht,m3DeepCopy:()=>B,m3Determinant:()=>rr,m3DivideScalar:()=>Tt,m3Inverse:()=>Z,m3MulScalar:()=>dt,m3PrependRow:()=>Gt,m3Reset:()=>Nt,m3RotationX:()=>G,m3RotationY:()=>J,m3RotationZ:()=>K,m3Scale:()=>W,m3Sub:()=>Dt,m3Sum:()=>wt,m3Transpose:()=>Rt,m3x3:()=>qt,mAdjugate:()=>X,mAppendCol:()=>Xt,mAppendRow:()=>Yt,mDeepCopy:()=>m,mDeterminant:()=>v,mDivideScalar:()=>y,mEqual:()=>Kt,mInverse:()=>I,mMinor:()=>L,mMul:()=>Jt,mMulScalar:()=>N,mMulVector:()=>a,mNxM:()=>Bt,mPrependRow:()=>Ot,mReset:()=>A,mSub:()=>j,mSum:()=>R,mTranspose:()=>b,mod:()=>cr,radiansToDegrees:()=>it,setDecimalPlaces:()=>u,setV2Angle:()=>ot,stringToNumber:()=>ar,v2:()=>yt,v2CubicBezierCurve:()=>Mr,v2DivideScalar:()=>Mt,v2DotProduct:()=>lt,v2Length:()=>D,v2MulScalar:()=>pt,v2Normalize:()=>d,v2QuadraticBezierCurve:()=>pr,v2Rotate:()=>Ut,v2Scale:()=>Ct,v2SetLength:()=>Vt,v2Sub:()=>xt,v2Sum:()=>st,v3:()=>vt,v3CrossProduct:()=>gt,v3CubicBezierCurve:()=>hr,v3DivideScalar:()=>ht,v3DotProduct:()=>bt,v3Length:()=>ft,v3MulScalar:()=>mt,v3Normalize:()=>l,v3QuadraticBezierCurve:()=>mr,v3RotateX:()=>Wt,v3RotateY:()=>_t,v3RotateZ:()=>$t,v3Scale:()=>Pt,v3Sub:()=>at,v3Sum:()=>ut,vDivideScalar:()=>V,vDotProduct:()=>p,vEqual:()=>z,vLength:()=>g,vMulScalar:()=>f,vN:()=>T,vNormalize:()=>E,vSub:()=>h,vSum:()=>M});module.exports=nt(br);var u=(t,r=1/0)=>{if(r===1/0)return t;r<0&&(r=0);let e=H(10,r);return Math.round(t*e)/e};var S=(t,r=1/0)=>{let e=Math.atan2(t[1],t[0]);return u(e,r)},ot=(t,r,e=1/0)=>{let n=D(t);return[u(Math.cos(r)*n,e),u(Math.sin(r)*n,e)]},it=(t,r=1/0)=>{let e=t*(180/Math.PI);return u(e,r)},ct=(t,r=1/0)=>{let e=t*(Math.PI/180);return u(e,r)};var M=(t,r,e=1/0)=>{let n=[];for(let o=0;o<t.length;o++)n.push(u(t[o]+r[o],e));return n},st=(t,r,e=1/0)=>M(t,r,e),ut=(t,r,e=1/0)=>M(t,r,e),h=(t,r,e=1/0)=>{let n=[];for(let o=0;o<t.length;o++)n.push(u(t[o]-r[o],e));return n},xt=(t,r,e=1/0)=>h(t,r,e),at=(t,r,e=1/0)=>h(t,r,e),f=(t,r,e=1/0)=>{let n=[];for(let o=0;o<t.length;o++)n.push(u(t[o]*r,e));return n},pt=(t,r,e=1/0)=>f(t,r,e),mt=(t,r,e=1/0)=>f(t,r,e),V=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let n=[];for(let o=0;o<t.length;o++)n.push(u(t[o]/r,e));return n},Mt=(t,r,e=1/0)=>V(t,r,e),ht=(t,r,e=1/0)=>V(t,r,e),g=(t,r=1/0)=>{let e=0;for(let n=0;n<t.length;n++)e+=t[n]*t[n];return u(Math.sqrt(e),r)},D=(t,r=1/0)=>g(t,r),ft=(t,r=1/0)=>g(t,r),Vt=(t,r,e=1/0)=>{let n=S(t);return[u(Math.cos(n)*r,e),u(Math.sin(n)*r,e)]},E=(t,r=1/0)=>{let e=g(t),n=[];for(let o=0;o<t.length;o++)n.push(e===0?0:u(t[o]/e,r));return n},d=(t,r=1/0)=>E(t,r),l=(t,r=1/0)=>E(t,r),p=(t,r,e=1/0)=>{let n=0;for(let o=0;o<t.length;o++)n+=t[o]*r[o];return u(n,e)},lt=(t,r,e=1/0)=>p(t,r,e),bt=(t,r,e=1/0)=>p(t,r,e),gt=(t,r,e=1/0)=>[u(t[1]*r[2]-t[2]*r[1],e),u(t[2]*r[0]-t[0]*r[2],e),u(t[0]*r[1]-t[1]*r[0],e)],yt=(t=0)=>[t,t],vt=(t=0)=>[t,t,t],T=(t,r=0)=>{if(t<0)throw new Error("N must be a non-negative number.");let e=[];for(let n=0;n<t;n++)e.push(r);return e},z=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0};var R=(t,r,e=1/0)=>{let n=[];for(let o=0;o<t.length;o++)n.push(M(t[o],r[o],e));return n},It=(t,r,e=1/0)=>R(t,r,e),wt=(t,r,e=1/0)=>R(t,r,e),j=(t,r,e=1/0)=>{let n=[];for(let o=0;o<t.length;o++)n.push(h(t[o],r[o],e));return n},St=(t,r,e=1/0)=>j(t,r,e),Dt=(t,r,e=1/0)=>j(t,r,e),N=(t,r,e=1/0)=>{let n=[];for(let o of t)n.push(f(o,r,e));return n},Et=(t,r,e=1/0)=>N(t,r,e),dt=(t,r,e=1/0)=>N(t,r,e),y=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let n=[];for(let o of t)n.push(V(o,r,e));return n},O=(t,r,e=1/0)=>y(t,r,e),Tt=(t,r,e=1/0)=>y(t,r,e),b=t=>{let r=t.length;if(r<=0)return t;let e=t[0].length;if(e<=0)return t;let n=[];for(let o=0;o<e;o++)n.push([]);for(let o=0;o<r;o++)for(let i=0;i<e;i++)n[i].push(t[o][i]);return n},zt=t=>b(t),Rt=t=>b(t),A=(t,r=0)=>{if(t.length<=0)return[];let e=[];for(let n=0;n<t.length;n++){let o=t[n].length,i=[];for(let c=0;c<o;c++)i.push(r);e.push(i)}return e},jt=(t,r=0)=>A(t,r),Nt=(t,r=0)=>A(t,r),At=(t=0)=>[[t,t],[t,t]],qt=(t=0)=>[[t,t,t],[t,t,t],[t,t,t]],Bt=(t,r,e=0)=>{if(t<=0||r<=0)throw new Error("M and N must be positive numbers.");let n=[];for(let o=0;o<t;o++)n.push(T(r,e));return n},Lt=()=>[[1,0],[0,1]],Ft=()=>[[1,0,0],[0,1,0],[0,0,1]],Qt=t=>{if(t<0)throw new Error("N must be a non-negative number.");if(t===0)return[];let r=[];for(let e=0;e<t;e++){let n=[];for(let o=0;o<t;o++)n.push(e===o?1:0);r.push(n)}return r},m=t=>{let r=[];for(let e=0;e<t.length;e++){let n=t[e],o=[];for(let i=0;i<n.length;i++)o.push(n[i]);r.push(o)}return r},q=t=>m(t),B=t=>m(t),Xt=(t,r)=>{if(t.length<=0)return[];let e=m(t);for(let n=0;n<e.length;n++)e[n].push(r[n]);return e},Yt=(t,r)=>{let e=m(t);return e.push(r),e},Zt=(t,r)=>{let e=q(t);return e.push(r),e},Ht=(t,r)=>{let e=B(t);return e.push(r),e},Ot=(t,r)=>{let e=m(t);return e.unshift(r),e},kt=(t,r)=>{let e=q(t);return e.unshift(r),e},Gt=(t,r)=>{let e=B(t);return e.unshift(r),e},Jt=(t,r,e=1/0)=>{let n=[];for(let i=0;i<t.length;i++)n.push([]);let o=b(r);if(n.length!==o.length)throw new Error("The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.");for(let i=0;i<t.length;i++){let c=t[i];for(let s=0;s<o.length;s++){let x=o[s],$=p(c,x,e);n[i].push($)}}return n},a=(t,r,e=1/0)=>{if(t.length<0)return[];if(t[0].length!==r.length)throw new Error("The number of columns in the matrix must be equal to the length of the vector.");let n=[];for(let o=0;o<t.length;o++)n[o]=p(t[o],r,e);return n},Kt=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(!z(t[e],r[e]))return!1;return!0},k=t=>[[Math.cos(t),-Math.sin(t)],[Math.sin(t),Math.cos(t)]],Ut=(t,r)=>{let e=d(r);return a(k(t),e)},G=t=>[[1,0,0],[0,Math.cos(t),-Math.sin(t)],[0,Math.sin(t),Math.cos(t)]],Wt=(t,r)=>{let e=l(r);return a(G(t),e)},J=t=>[[Math.cos(t),0,Math.sin(t)],[0,1,0],[-Math.sin(t),0,Math.cos(t)]],_t=(t,r)=>{let e=l(r);return a(J(t),e)},K=t=>[[Math.cos(t),-Math.sin(t),0],[Math.sin(t),Math.cos(t),0],[0,0,1]],$t=(t,r)=>{let e=l(r);return a(K(t),e)},U=t=>[[t[0],0],[0,t[1]]],Ct=(t,r)=>a(U(t),r),W=t=>[[t[0],0,0],[0,t[1],0],[0,0,t[2]]],Pt=(t,r)=>a(W(t),r),tr=(t,r,e)=>{let n=t.length;if(n<=0)throw new Error("The matrix should not be empty.");if(n!==t[0].length)throw new Error("The matrix must be square.");let o=[];for(let i=0;i<n;i++){if(i===r)continue;let c=[];for(let s=0;s<n;s++)s!==e&&c.push(t[i][s]);o.push(c)}return o},L=(t,r,e)=>{let n=t.length;if(n<=0)throw new Error("The matrix should not be empty.");if(n!==t[0].length)throw new Error("The matrix must be square.");let o=tr(t,r,e);return v(o)},v=t=>{let r=t.length;if(r===0)return 1;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t[0][0];if(r===2)return F(t);let e=0;for(let n=0;n<r;n++){let o=L(t,0,n),i=t[0][n];n%2!==0&&(i=-i),e+=o*i}return e},F=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return t[0][0]*t[1][1]-t[1][0]*t[0][1]},rr=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return v(t)},Q=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return[[t[1][1],-t[0][1]],[-t[1][0],t[0][0]]]},er=t=>X(t),X=t=>{let r=t.length;if(r<=0)return null;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t;if(r===2)return Q(t);let e=[];for(let n=0;n<r;n++){let o=[];for(let i=0;i<r;i++){let c=L(t,n,i),s=Math.pow(-1,n+i);o.push(s*c)}e.push(o)}return b(e)},Y=(t,r=1/0)=>{if(t.length<=0)return null;if(t.length!==t[0].length)throw new Error("The matrix must be square.");let e=F(t);if(e===0)return null;let n=Q(t);return n===null?null:O(n,e,r)},Z=(t,r=1/0)=>I(t,r),I=(t,r=1/0)=>{let e=t.length;if(e<=0)return null;if(e!==t[0].length)throw new Error("The matrix must be square.");let n=v(t),o=X(t);return o===null?null:y(o,n,r)};var nr=(t,r,e=1/0)=>u(Math.random()*(r-t)+t,e),_=(t,r)=>Math.floor(Math.random()*(r-t+1)+t),or=()=>Math.random()<.5,ir=t=>{let r=_(0,t.length-1);return t[r]};var cr=(t,r)=>(t%r+r)%r,sr=(t,r,e,n,o)=>(o-n)*(t-r)/(e-r)+n,ur=(t,r,e,n)=>Math.max(t,e)<=Math.min(r,n),xr=t=>!isNaN(parseFloat(t))&&isFinite(t);var ar=(t,r)=>{var n;if(t==null)return r;let e=(n=Number(t))!=null?n:r;return isNaN(e)?r:e};var pr=(t,r,e,n)=>{let o=Math.pow(1-t,2),i=(1-t)*2*t,c=t*t;return[o*r[0]+i*e[0]+c*n[0],o*r[1]+i*e[1]+c*n[1]]},mr=(t,r,e,n)=>{let o=Math.pow(1-t,2),i=(1-t)*2*t,c=t*t;return[o*r[0]+i*e[0]+c*n[0],o*r[1]+i*e[1]+c*n[1],o*r[2]+i*e[2]+c*n[2]]},Mr=(t,r,e,n,o)=>{let i=Math.pow(1-t,3),c=Math.pow(1-t,2)*3*t,s=(1-t)*3*t*t,x=t*t*t;return[i*r[0]+c*e[0]+s*n[0]+x*o[0],i*r[1]+c*e[1]+s*n[1]+x*o[1]]},hr=(t,r,e,n,o)=>{let i=Math.pow(1-t,3),c=Math.pow(1-t,2)*3*t,s=(1-t)*3*t*t,x=t*t*t;return[i*r[0]+c*e[0]+s*n[0]+x*o[0],i*r[1]+c*e[1]+s*n[1]+x*o[1],i*r[2]+c*e[2]+s*n[2]+x*o[2]]};var fr=(t,r,e=1/0)=>{let n=[[t[0],t[1]],[r[0],r[1]]],o=Y(n);if(o===null)return null;let i=[t[2],r[2]];return a(o,i,e)},Vr=(t,r,e,n=1/0)=>{let o=[[t[0],t[1],t[2]],[r[0],r[1],r[2]],[e[0],e[1],e[2]]],i=Z(o);if(i===null)return null;let c=[t[3],r[3],e[3]];return a(i,c,n)},lr=(t,r=1/0)=>{if(t.length<=0)return null;let e=[],n=t.length;for(let c=0;c<n;c++){let s=[];for(let x=0;x<n;x++)s.push(t[c][x]);e.push(s)}let o=I(e);if(o===null)return null;let i=[];for(let c=0;c<n;c++){let s=t[c];i.push(s[s.length-1])}return a(o,i,r)};0&&(module.exports={convertRange,degreesToRadians,doRangesOverlap,equationSystem2,equationSystem3,equationSystemN,getRandom,getRandomBoolean,getRandomInt,getRandomItemFromArray,getV2Angle,identity2,identity3,identityN,isNumber,m2Adjugate,m2AppendRow,m2DeepCopy,m2Determinant,m2DivideScalar,m2Inverse,m2MulScalar,m2PrependRow,m2Reset,m2Rotation,m2Scale,m2Sub,m2Sum,m2Transpose,m2x2,m3Adjugate,m3AppendRow,m3DeepCopy,m3Determinant,m3DivideScalar,m3Inverse,m3MulScalar,m3PrependRow,m3Reset,m3RotationX,m3RotationY,m3RotationZ,m3Scale,m3Sub,m3Sum,m3Transpose,m3x3,mAdjugate,mAppendCol,mAppendRow,mDeepCopy,mDeterminant,mDivideScalar,mEqual,mInverse,mMinor,mMul,mMulScalar,mMulVector,mNxM,mPrependRow,mReset,mSub,mSum,mTranspose,mod,radiansToDegrees,setDecimalPlaces,setV2Angle,stringToNumber,v2,v2CubicBezierCurve,v2DivideScalar,v2DotProduct,v2Length,v2MulScalar,v2Normalize,v2QuadraticBezierCurve,v2Rotate,v2Scale,v2SetLength,v2Sub,v2Sum,v3,v3CrossProduct,v3CubicBezierCurve,v3DivideScalar,v3DotProduct,v3Length,v3MulScalar,v3Normalize,v3QuadraticBezierCurve,v3RotateX,v3RotateY,v3RotateZ,v3Scale,v3Sub,v3Sum,vDivideScalar,vDotProduct,vEqual,vLength,vMulScalar,vN,vNormalize,vSub,vSum});
//# sourceMappingURL=tc-math.node.cjs.map
