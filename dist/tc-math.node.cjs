/* 
Tool Cool Math Helpers
Version: 1.0.8
Documentation: https://github.com/toolcool-org/toolcool-math
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
var g=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var G=Object.prototype.hasOwnProperty;var T=Math.pow;var H=(t,r)=>{for(var e in r)g(t,e,{get:r[e],enumerable:!0})},J=(t,r,e,o)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of k(r))!G.call(t,n)&&n!==e&&g(t,n,{get:()=>r[n],enumerable:!(o=O(r,n))||o.enumerable});return t};var K=t=>J(g({},"__esModule",{value:!0}),t);var Jt={};H(Jt,{convertRange:()=>Qt,degreesToRadians:()=>_,doRangesOverlap:()=>Xt,getRandom:()=>Lt,getRandomBoolean:()=>Rt,getRandomInt:()=>Y,getRandomItemFromArray:()=>At,getV2Angle:()=>I,identity2:()=>lt,identity3:()=>vt,identityN:()=>St,isNumber:()=>Yt,m2Adjugate:()=>X,m2Determinant:()=>Q,m2Inverse:()=>Bt,m2MulScalar:()=>q,m2Reset:()=>ft,m2Rotation:()=>j,m2Scale:()=>A,m2Sub:()=>pt,m2Sum:()=>xt,m2Transpose:()=>ht,m2x2:()=>gt,m3MulScalar:()=>Mt,m3Reset:()=>bt,m3RotationX:()=>B,m3RotationY:()=>L,m3RotationZ:()=>R,m3Scale:()=>F,m3Sub:()=>mt,m3Sum:()=>at,m3Transpose:()=>Vt,m3x3:()=>It,mEqual:()=>Nt,mMul:()=>wt,mMulScalar:()=>D,mMulVector:()=>a,mNxM:()=>yt,mReset:()=>E,mSub:()=>z,mSum:()=>N,mTranspose:()=>b,mod:()=>Ft,radiansToDegrees:()=>W,setDecimalPlaces:()=>i,setV2Angle:()=>U,stringToNumber:()=>Zt,v2:()=>st,v2CubicBezierCurve:()=>Gt,v2DotProduct:()=>nt,v2Length:()=>y,v2MulScalar:()=>tt,v2Normalize:()=>v,v2QuadraticBezierCurve:()=>Ot,v2Rotate:()=>zt,v2Scale:()=>qt,v2SetLength:()=>ot,v2Sub:()=>C,v2Sum:()=>$,v3:()=>ut,v3CrossProduct:()=>it,v3CubicBezierCurve:()=>Ht,v3DotProduct:()=>ct,v3Length:()=>et,v3MulScalar:()=>rt,v3Normalize:()=>V,v3QuadraticBezierCurve:()=>kt,v3RotateX:()=>Dt,v3RotateY:()=>Et,v3RotateZ:()=>Tt,v3Scale:()=>jt,v3Sub:()=>P,v3Sum:()=>d,vDotProduct:()=>p,vEqual:()=>w,vLength:()=>f,vMulScalar:()=>h,vN:()=>S,vNormalize:()=>l,vSub:()=>M,vSum:()=>m});module.exports=K(Jt);var i=(t,r=1/0)=>{if(r===1/0)return t;r<0&&(r=0);let e=T(10,r);return Math.round(t*e)/e};var I=(t,r=1/0)=>{let e=Math.atan2(t[1],t[0]);return i(e,r)},U=(t,r,e=1/0)=>{let o=y(t);return[i(Math.cos(r)*o,e),i(Math.sin(r)*o,e)]},W=(t,r=1/0)=>{let e=t*(180/Math.PI);return i(e,r)},_=(t,r=1/0)=>{let e=t*(Math.PI/180);return i(e,r)};var m=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(i(t[n]+r[n],e));return o},$=(t,r,e=1/0)=>m(t,r,e),d=(t,r,e=1/0)=>m(t,r,e),M=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(i(t[n]-r[n],e));return o},C=(t,r,e=1/0)=>M(t,r,e),P=(t,r,e=1/0)=>M(t,r,e),h=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(i(t[n]*r,e));return o},tt=(t,r,e=1/0)=>h(t,r,e),rt=(t,r,e=1/0)=>h(t,r,e),f=(t,r=1/0)=>{let e=0;for(let o=0;o<t.length;o++)e+=t[o]*t[o];return i(Math.sqrt(e),r)},y=(t,r=1/0)=>f(t,r),et=(t,r=1/0)=>f(t,r),ot=(t,r,e=1/0)=>{let o=I(t);return[i(Math.cos(o)*r,e),i(Math.sin(o)*r,e)]},l=(t,r=1/0)=>{let e=f(t),o=[];for(let n=0;n<t.length;n++)o.push(e===0?0:i(t[n]/e,r));return o},v=(t,r=1/0)=>l(t,r),V=(t,r=1/0)=>l(t,r),p=(t,r,e=1/0)=>{let o=0;for(let n=0;n<t.length;n++)o+=t[n]*r[n];return i(o,e)},nt=(t,r,e=1/0)=>p(t,r,e),ct=(t,r,e=1/0)=>p(t,r,e),it=(t,r,e=1/0)=>[i(t[1]*r[2]-t[2]*r[1],e),i(t[2]*r[0]-t[0]*r[2],e),i(t[0]*r[1]-t[1]*r[0],e)],st=(t=0)=>[t,t],ut=(t=0)=>[t,t,t],S=(t,r=0)=>{if(t<0)throw new Error("N must be a non-negative number.");let e=[];for(let o=0;o<t;o++)e.push(r);return e},w=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0};var N=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(m(t[n],r[n],e));return o},xt=(t,r,e=1/0)=>N(t,r,e),at=(t,r,e=1/0)=>N(t,r,e),z=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(M(t[n],r[n],e));return o},pt=(t,r,e=1/0)=>z(t,r,e),mt=(t,r,e=1/0)=>z(t,r,e),D=(t,r,e=1/0)=>{let o=[];for(let n of t)o.push(h(n,r,e));return o},q=(t,r,e=1/0)=>D(t,r,e),Mt=(t,r,e=1/0)=>D(t,r,e),b=t=>{let r=t.length;if(r<=0)return t;let e=t[0].length;if(e<=0)return t;let o=[];for(let n=0;n<e;n++)o.push([]);for(let n=0;n<r;n++)for(let c=0;c<e;c++)o[c].push(t[n][c]);return o},ht=t=>b(t),Vt=t=>b(t),E=(t,r=0)=>{if(t.length<=0)return[];let e=[];for(let o=0;o<t.length;o++){let n=t[o].length,c=[];for(let s=0;s<n;s++)c.push(r);e.push(c)}return e},ft=(t,r=0)=>E(t,r),bt=(t,r=0)=>E(t,r),gt=(t=0)=>[[t,t],[t,t]],It=(t=0)=>[[t,t,t],[t,t,t],[t,t,t]],yt=(t,r,e=0)=>{if(t<=0||r<=0)throw new Error("M and N must be positive numbers.");let o=[];for(let n=0;n<t;n++)o.push(S(r,e));return o},lt=()=>[[1,0],[0,1]],vt=()=>[[1,0,0],[0,1,0],[0,0,1]],St=t=>{if(t<0)throw new Error("N must be a non-negative number.");if(t===0)return[];let r=[];for(let e=0;e<t;e++){let o=[];for(let n=0;n<t;n++)o.push(e===n?1:0);r.push(o)}return r},wt=(t,r,e=1/0)=>{let o=[];for(let c=0;c<t.length;c++)o.push([]);let n=b(r);if(o.length!==n.length)throw new Error("The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.");for(let c=0;c<t.length;c++){let s=t[c];for(let u=0;u<n.length;u++){let x=n[u],Z=p(s,x,e);o[c].push(Z)}}return o},a=(t,r,e=1/0)=>{if(t.length<0)return[];if(t[0].length!==r.length)throw new Error("The number of columns in the matrix must be equal to the length of the vector.");let o=[];for(let n=0;n<t.length;n++)o[n]=p(t[n],r,e);return o},Nt=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(!w(t[e],r[e]))return!1;return!0},j=t=>[[Math.cos(t),-Math.sin(t)],[Math.sin(t),Math.cos(t)]],zt=(t,r)=>{let e=v(r);return a(j(t),e)},B=t=>[[1,0,0],[0,Math.cos(t),-Math.sin(t)],[0,Math.sin(t),Math.cos(t)]],Dt=(t,r)=>{let e=V(r);return a(B(t),e)},L=t=>[[Math.cos(t),0,Math.sin(t)],[0,1,0],[-Math.sin(t),0,Math.cos(t)]],Et=(t,r)=>{let e=V(r);return a(L(t),e)},R=t=>[[Math.cos(t),-Math.sin(t),0],[Math.sin(t),Math.cos(t),0],[0,0,1]],Tt=(t,r)=>{let e=V(r);return a(R(t),e)},A=t=>[[t[0],0],[0,t[1]]],qt=(t,r)=>a(A(t),r),F=t=>[[t[0],0,0],[0,t[1],0],[0,0,t[2]]],jt=(t,r)=>a(F(t),r),Q=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return t[0][0]*t[1][1]-t[1][0]*t[0][1]},X=t=>[[t[1][1],-t[0][1]],[-t[1][0],t[0][0]]],Bt=(t,r=1/0)=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");let e=Q(t);if(e===0)return null;let o=X(t);return q(o,1/e,r)};var Lt=(t,r,e=1/0)=>i(Math.random()*(r-t)+t,e),Y=(t,r)=>Math.floor(Math.random()*(r-t+1)+t),Rt=()=>Math.random()<.5,At=t=>{let r=Y(0,t.length-1);return t[r]};var Ft=(t,r)=>(t%r+r)%r,Qt=(t,r,e,o,n)=>(n-o)*(t-r)/(e-r)+o,Xt=(t,r,e,o)=>Math.max(t,e)<=Math.min(r,o),Yt=t=>!isNaN(parseFloat(t))&&isFinite(t);var Zt=(t,r)=>{var o;if(t==null)return r;let e=(o=Number(t))!=null?o:r;return isNaN(e)?r:e};var Ot=(t,r,e,o)=>{let n=Math.pow(1-t,2),c=(1-t)*2*t,s=t*t;return[n*r[0]+c*e[0]+s*o[0],n*r[1]+c*e[1]+s*o[1]]},kt=(t,r,e,o)=>{let n=Math.pow(1-t,2),c=(1-t)*2*t,s=t*t;return[n*r[0]+c*e[0]+s*o[0],n*r[1]+c*e[1]+s*o[1],n*r[2]+c*e[2]+s*o[2]]},Gt=(t,r,e,o,n)=>{let c=Math.pow(1-t,3),s=Math.pow(1-t,2)*3*t,u=(1-t)*3*t*t,x=t*t*t;return[c*r[0]+s*e[0]+u*o[0]+x*n[0],c*r[1]+s*e[1]+u*o[1]+x*n[1]]},Ht=(t,r,e,o,n)=>{let c=Math.pow(1-t,3),s=Math.pow(1-t,2)*3*t,u=(1-t)*3*t*t,x=t*t*t;return[c*r[0]+s*e[0]+u*o[0]+x*n[0],c*r[1]+s*e[1]+u*o[1]+x*n[1],c*r[2]+s*e[2]+u*o[2]+x*n[2]]};0&&(module.exports={convertRange,degreesToRadians,doRangesOverlap,getRandom,getRandomBoolean,getRandomInt,getRandomItemFromArray,getV2Angle,identity2,identity3,identityN,isNumber,m2Adjugate,m2Determinant,m2Inverse,m2MulScalar,m2Reset,m2Rotation,m2Scale,m2Sub,m2Sum,m2Transpose,m2x2,m3MulScalar,m3Reset,m3RotationX,m3RotationY,m3RotationZ,m3Scale,m3Sub,m3Sum,m3Transpose,m3x3,mEqual,mMul,mMulScalar,mMulVector,mNxM,mReset,mSub,mSum,mTranspose,mod,radiansToDegrees,setDecimalPlaces,setV2Angle,stringToNumber,v2,v2CubicBezierCurve,v2DotProduct,v2Length,v2MulScalar,v2Normalize,v2QuadraticBezierCurve,v2Rotate,v2Scale,v2SetLength,v2Sub,v2Sum,v3,v3CrossProduct,v3CubicBezierCurve,v3DotProduct,v3Length,v3MulScalar,v3Normalize,v3QuadraticBezierCurve,v3RotateX,v3RotateY,v3RotateZ,v3Scale,v3Sub,v3Sum,vDotProduct,vEqual,vLength,vMulScalar,vN,vNormalize,vSub,vSum});
//# sourceMappingURL=tc-math.node.cjs.map
