/* 
Tool Cool Math Helpers
Version: 1.0.9
Documentation: https://github.com/toolcool-org/toolcool-math
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
(()=>{var O=Math.pow;var a=(t,r=1/0)=>{if(r===1/0)return t;r<0&&(r=0);let e=O(10,r);return Math.round(t*e)/e};var S=(t,r=1/0)=>{let e=Math.atan2(t[1],t[0]);return a(e,r)},P=(t,r,e=1/0)=>{let o=b(t);return[a(Math.cos(r)*o,e),a(Math.sin(r)*o,e)]},H=(t,r=1/0)=>{let e=t*(180/Math.PI);return a(e,r)},W=(t,r=1/0)=>{let e=t*(Math.PI/180);return a(e,r)};var v=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(a(t[n]+r[n],e));return o},k=(t,r,e=1/0)=>v(t,r,e),G=(t,r,e=1/0)=>v(t,r,e),p=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(a(t[n]-r[n],e));return o},J=(t,r,e=1/0)=>p(t,r,e),K=(t,r,e=1/0)=>p(t,r,e),f=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(a(t[n]*r,e));return o},U=(t,r,e=1/0)=>f(t,r,e),_=(t,r,e=1/0)=>f(t,r,e),l=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n=0;n<t.length;n++)o.push(a(t[n]/r,e));return o},$=(t,r,e=1/0)=>l(t,r,e),tt=(t,r,e=1/0)=>l(t,r,e),h=(t,r=1/0)=>{let e=0;for(let o=0;o<t.length;o++)e+=t[o]*t[o];return a(Math.sqrt(e),r)},b=(t,r=1/0)=>h(t,r),rt=(t,r=1/0)=>h(t,r),et=(t,r,e=1/0)=>{let o=S(t);return[a(Math.cos(o)*r,e),a(Math.sin(o)*r,e)]},V=(t,r=1/0)=>{let e=h(t),o=[];for(let n=0;n<t.length;n++)o.push(e===0?0:a(t[n]/e,r));return o},g=(t,r=1/0)=>V(t,r),M=(t,r=1/0)=>V(t,r),x=(t,r,e=1/0)=>{let o=0;for(let n=0;n<t.length;n++)o+=t[n]*r[n];return a(o,e)},ot=(t,r,e=1/0)=>x(t,r,e),nt=(t,r,e=1/0)=>x(t,r,e),it=(t,r,e=1/0)=>[a(t[1]*r[2]-t[2]*r[1],e),a(t[2]*r[0]-t[0]*r[2],e),a(t[0]*r[1]-t[1]*r[0],e)],at=(t=0)=>[t,t],mt=(t=0)=>[t,t,t],d=(t,r=0)=>{if(t<0)throw new Error("N must be a non-negative number.");let e=[];for(let o=0;o<t;o++)e.push(r);return e},R=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0};var D=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(v(t[n],r[n],e));return o},ct=(t,r,e=1/0)=>D(t,r,e),ut=(t,r,e=1/0)=>D(t,r,e),I=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(p(t[n],r[n],e));return o},st=(t,r,e=1/0)=>I(t,r,e),xt=(t,r,e=1/0)=>I(t,r,e),z=(t,r,e=1/0)=>{let o=[];for(let n of t)o.push(f(n,r,e));return o},vt=(t,r,e=1/0)=>z(t,r,e),pt=(t,r,e=1/0)=>z(t,r,e),N=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n of t)o.push(l(n,r,e));return o},E=(t,r,e=1/0)=>N(t,r,e),ft=(t,r,e=1/0)=>N(t,r,e),y=t=>{let r=t.length;if(r<=0)return t;let e=t[0].length;if(e<=0)return t;let o=[];for(let n=0;n<e;n++)o.push([]);for(let n=0;n<r;n++)for(let i=0;i<e;i++)o[i].push(t[n][i]);return o},lt=t=>y(t),Mt=t=>y(t),T=(t,r=0)=>{if(t.length<=0)return[];let e=[];for(let o=0;o<t.length;o++){let n=t[o].length,i=[];for(let m=0;m<n;m++)i.push(r);e.push(i)}return e},ht=(t,r=0)=>T(t,r),yt=(t,r=0)=>T(t,r),St=(t=0)=>[[t,t],[t,t]],bt=(t=0)=>[[t,t,t],[t,t,t],[t,t,t]],Vt=(t,r,e=0)=>{if(t<=0||r<=0)throw new Error("M and N must be positive numbers.");let o=[];for(let n=0;n<t;n++)o.push(d(r,e));return o},gt=()=>[[1,0],[0,1]],dt=()=>[[1,0,0],[0,1,0],[0,0,1]],Rt=t=>{if(t<0)throw new Error("N must be a non-negative number.");if(t===0)return[];let r=[];for(let e=0;e<t;e++){let o=[];for(let n=0;n<t;n++)o.push(e===n?1:0);r.push(o)}return r},Dt=(t,r,e=1/0)=>{let o=[];for(let i=0;i<t.length;i++)o.push([]);let n=y(r);if(o.length!==n.length)throw new Error("The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.");for(let i=0;i<t.length;i++){let m=t[i];for(let c=0;c<n.length;c++){let s=n[c],kt=x(m,s,e);o[i].push(kt)}}return o},u=(t,r,e=1/0)=>{if(t.length<0)return[];if(t[0].length!==r.length)throw new Error("The number of columns in the matrix must be equal to the length of the vector.");let o=[];for(let n=0;n<t.length;n++)o[n]=x(t[n],r,e);return o},It=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(!R(t[e],r[e]))return!1;return!0},B=t=>[[Math.cos(t),-Math.sin(t)],[Math.sin(t),Math.cos(t)]],zt=(t,r)=>{let e=g(r);return u(B(t),e)},L=t=>[[1,0,0],[0,Math.cos(t),-Math.sin(t)],[0,Math.sin(t),Math.cos(t)]],Nt=(t,r)=>{let e=M(r);return u(L(t),e)},A=t=>[[Math.cos(t),0,Math.sin(t)],[0,1,0],[-Math.sin(t),0,Math.cos(t)]],Tt=(t,r)=>{let e=M(r);return u(A(t),e)},j=t=>[[Math.cos(t),-Math.sin(t),0],[Math.sin(t),Math.cos(t),0],[0,0,1]],wt=(t,r)=>{let e=M(r);return u(j(t),e)},Q=t=>[[t[0],0],[0,t[1]]],Ct=(t,r)=>u(Q(t),r),X=t=>[[t[0],0,0],[0,t[1],0],[0,0,t[2]]],qt=(t,r)=>u(X(t),r),Ut=(t,r,e)=>{let o=t.length;if(o<=0)throw new Error("The matrix should not be empty.");if(o!==t[0].length)throw new Error("The matrix must be square.");let n=[];for(let i=0;i<o;i++){if(i===r)continue;let m=[];for(let c=0;c<o;c++)c!==e&&m.push(t[i][c]);n.push(m)}return n},Y=(t,r,e)=>{let o=t.length;if(o<=0)throw new Error("The matrix should not be empty.");if(o!==t[0].length)throw new Error("The matrix must be square.");let n=Ut(t,r,e);return w(n)},w=t=>{let r=t.length;if(r===0)return 1;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t[0][0];if(r===2)return C(t);let e=0;for(let o=0;o<r;o++){let n=Y(t,0,o),i=t[0][o];o%2!==0&&(i=-i),e+=n*i}return e},C=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return t[0][0]*t[1][1]-t[1][0]*t[0][1]},Et=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return w(t)},Z=t=>[[t[1][1],-t[0][1]],[-t[1][0],t[0][0]]],q=(t,r=1/0)=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");let e=C(t);if(e===0)return null;let o=Z(t);return E(o,e,r)};var Bt=(t,r,e=1/0)=>a(Math.random()*(r-t)+t,e),F=(t,r)=>Math.floor(Math.random()*(r-t+1)+t),Lt=()=>Math.random()<.5,At=t=>{let r=F(0,t.length-1);return t[r]};var jt=(t,r)=>(t%r+r)%r,Qt=(t,r,e,o,n)=>(n-o)*(t-r)/(e-r)+o,Xt=(t,r,e,o)=>Math.max(t,e)<=Math.min(r,o),Yt=t=>!isNaN(parseFloat(t))&&isFinite(t);var Zt=(t,r)=>{var o;if(t==null)return r;let e=(o=Number(t))!=null?o:r;return isNaN(e)?r:e};var Ft=(t,r,e,o)=>{let n=Math.pow(1-t,2),i=(1-t)*2*t,m=t*t;return[n*r[0]+i*e[0]+m*o[0],n*r[1]+i*e[1]+m*o[1]]},Ot=(t,r,e,o)=>{let n=Math.pow(1-t,2),i=(1-t)*2*t,m=t*t;return[n*r[0]+i*e[0]+m*o[0],n*r[1]+i*e[1]+m*o[1],n*r[2]+i*e[2]+m*o[2]]},Pt=(t,r,e,o,n)=>{let i=Math.pow(1-t,3),m=Math.pow(1-t,2)*3*t,c=(1-t)*3*t*t,s=t*t*t;return[i*r[0]+m*e[0]+c*o[0]+s*n[0],i*r[1]+m*e[1]+c*o[1]+s*n[1]]},Ht=(t,r,e,o,n)=>{let i=Math.pow(1-t,3),m=Math.pow(1-t,2)*3*t,c=(1-t)*3*t*t,s=t*t*t;return[i*r[0]+m*e[0]+c*o[0]+s*n[0],i*r[1]+m*e[1]+c*o[1]+s*n[1],i*r[2]+m*e[2]+c*o[2]+s*n[2]]};var Wt=(t,r,e=1/0)=>{let o=[[t[0],t[1]],[r[0],r[1]]],n=q(o);if(n===null)return null;let i=[t[2],r[2]];return u(n,i,e)};var nr={v2:at,v3:mt,vN:d,m2x2:St,m3x3:bt,mNxM:Vt,identity2:gt,identity3:dt,identityN:Rt,vEqual:R,mEqual:It,vSum:v,v2Sum:k,v3Sum:G,vSub:p,v2Sub:J,v3Sub:K,vMulScalar:f,v2MulScalar:U,v3MulScalar:_,vDivideScalar:l,v2DivideScalar:$,v3DivideScalar:tt,vLength:h,v2Length:b,v3Length:rt,v2SetLength:et,vNormalize:V,v2Normalize:g,v3Normalize:M,vDotProduct:x,v2DotProduct:ot,v3DotProduct:nt,v3CrossProduct:it,mSum:D,m2Sum:ct,m3Sum:ut,mSub:I,m2Sub:st,m3Sub:xt,mMulScalar:z,m2MulScalar:vt,m3MulScalar:pt,mDivideScalar:N,m2DivideScalar:E,m3DivideScalar:ft,mTranspose:y,m2Transpose:lt,m3Transpose:Mt,mMul:Dt,mMulVector:u,mReset:T,m2Reset:ht,m3Reset:yt,m2Rotation:B,v2Rotate:zt,m3RotationX:L,v3RotateX:Nt,m3RotationY:A,v3RotateY:Tt,m3RotationZ:j,v3RotateZ:wt,m2Scale:Q,v2Scale:Ct,m3Scale:X,v3Scale:qt,m2Determinant:C,m3Determinant:Et,mDeterminant:w,m2Inverse:q,m2Adjugate:Z,mMinor:Y,getV2Angle:S,setV2Angle:P,radiansToDegrees:H,degreesToRadians:W,setDecimalPlaces:a,getRandom:Bt,getRandomInt:F,getRandomBoolean:Lt,getRandomItemFromArray:At,mod:jt,convertRange:Qt,doRangesOverlap:Xt,isNumber:Yt,stringToNumber:Zt,v2QuadraticBezierCurve:Ft,v3QuadraticBezierCurve:Ot,v2CubicBezierCurve:Pt,v3CubicBezierCurve:Ht,equationSystem2:Wt};window.TCMath=window.TCMath||nr;})();
//# sourceMappingURL=tc-math.min.js.map
