/* 
Tool Cool Math Helpers
Version: 1.0.0
Documentation: https://github.com/toolcool-org/toolcool-math
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
(()=>{var W=Math.pow;var m=(t,r=1/0)=>{if(r===1/0)return t;r<0&&(r=0);let e=W(10,r);return Math.round(t*e)/e};var b=(t,r=1/0)=>{let e=Math.atan2(t[1],t[0]);return m(e,r)},k=(t,r,e=1/0)=>{let o=d(t);return[m(Math.cos(r)*o,e),m(Math.sin(r)*o,e)]},G=(t,r=1/0)=>{let e=t*(180/Math.PI);return m(e,r)},J=(t,r=1/0)=>{let e=t*(Math.PI/180);return m(e,r)};var v=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(m(t[n]+r[n],e));return o},K=(t,r,e=1/0)=>v(t,r,e),U=(t,r,e=1/0)=>v(t,r,e),p=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(m(t[n]-r[n],e));return o},_=(t,r,e=1/0)=>p(t,r,e),$=(t,r,e=1/0)=>p(t,r,e),l=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(m(t[n]*r,e));return o},tt=(t,r,e=1/0)=>l(t,r,e),rt=(t,r,e=1/0)=>l(t,r,e),f=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n=0;n<t.length;n++)o.push(m(t[n]/r,e));return o},et=(t,r,e=1/0)=>f(t,r,e),ot=(t,r,e=1/0)=>f(t,r,e),y=(t,r=1/0)=>{let e=0;for(let o=0;o<t.length;o++)e+=t[o]*t[o];return m(Math.sqrt(e),r)},d=(t,r=1/0)=>y(t,r),nt=(t,r=1/0)=>y(t,r),it=(t,r,e=1/0)=>{let o=b(t);return[m(Math.cos(o)*r,e),m(Math.sin(o)*r,e)]},I=(t,r=1/0)=>{let e=y(t),o=[];for(let n=0;n<t.length;n++)o.push(e===0?0:m(t[n]/e,r));return o},R=(t,r=1/0)=>I(t,r),M=(t,r=1/0)=>I(t,r),x=(t,r,e=1/0)=>{let o=0;for(let n=0;n<t.length;n++)o+=t[n]*r[n];return m(o,e)},at=(t,r,e=1/0)=>x(t,r,e),mt=(t,r,e=1/0)=>x(t,r,e),ct=(t,r,e=1/0)=>[m(t[1]*r[2]-t[2]*r[1],e),m(t[2]*r[0]-t[0]*r[2],e),m(t[0]*r[1]-t[1]*r[0],e)],ut=(t=0)=>[t,t],st=(t=0)=>[t,t,t],D=(t,r=0)=>{if(t<0)throw new Error("N must be a non-negative number.");let e=[];for(let o=0;o<t;o++)e.push(r);return e},z=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0};var w=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(v(t[n],r[n],e));return o},xt=(t,r,e=1/0)=>w(t,r,e),vt=(t,r,e=1/0)=>w(t,r,e),T=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(p(t[n],r[n],e));return o},pt=(t,r,e=1/0)=>T(t,r,e),lt=(t,r,e=1/0)=>T(t,r,e),N=(t,r,e=1/0)=>{let o=[];for(let n of t)o.push(l(n,r,e));return o},ft=(t,r,e=1/0)=>N(t,r,e),Mt=(t,r,e=1/0)=>N(t,r,e),g=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n of t)o.push(f(n,r,e));return o},Q=(t,r,e=1/0)=>g(t,r,e),ht=(t,r,e=1/0)=>g(t,r,e),h=t=>{let r=t.length;if(r<=0)return t;let e=t[0].length;if(e<=0)return t;let o=[];for(let n=0;n<e;n++)o.push([]);for(let n=0;n<r;n++)for(let i=0;i<e;i++)o[i].push(t[n][i]);return o},yt=t=>h(t),gt=t=>h(t),A=(t,r=0)=>{if(t.length<=0)return[];let e=[];for(let o=0;o<t.length;o++){let n=t[o].length,i=[];for(let a=0;a<n;a++)i.push(r);e.push(i)}return e},Vt=(t,r=0)=>A(t,r),St=(t,r=0)=>A(t,r),bt=(t=0)=>[[t,t],[t,t]],dt=(t=0)=>[[t,t,t],[t,t,t],[t,t,t]],It=(t,r,e=0)=>{if(t<=0||r<=0)throw new Error("M and N must be positive numbers.");let o=[];for(let n=0;n<t;n++)o.push(D(r,e));return o},Rt=()=>[[1,0],[0,1]],Dt=()=>[[1,0,0],[0,1,0],[0,0,1]],zt=t=>{if(t<0)throw new Error("N must be a non-negative number.");if(t===0)return[];let r=[];for(let e=0;e<t;e++){let o=[];for(let n=0;n<t;n++)o.push(e===n?1:0);r.push(o)}return r},wt=(t,r,e=1/0)=>{let o=[];for(let i=0;i<t.length;i++)o.push([]);let n=h(r);if(o.length!==n.length)throw new Error("The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.");for(let i=0;i<t.length;i++){let a=t[i];for(let c=0;c<n.length;c++){let s=n[c],Ut=x(a,s,e);o[i].push(Ut)}}return o},u=(t,r,e=1/0)=>{if(t.length<0)return[];if(t[0].length!==r.length)throw new Error("The number of columns in the matrix must be equal to the length of the vector.");let o=[];for(let n=0;n<t.length;n++)o[n]=x(t[n],r,e);return o},Tt=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(!z(t[e],r[e]))return!1;return!0},X=t=>[[Math.cos(t),-Math.sin(t)],[Math.sin(t),Math.cos(t)]],Nt=(t,r)=>{let e=R(r);return u(X(t),e)},Y=t=>[[1,0,0],[0,Math.cos(t),-Math.sin(t)],[0,Math.sin(t),Math.cos(t)]],At=(t,r)=>{let e=M(r);return u(Y(t),e)},Z=t=>[[Math.cos(t),0,Math.sin(t)],[0,1,0],[-Math.sin(t),0,Math.cos(t)]],Et=(t,r)=>{let e=M(r);return u(Z(t),e)},F=t=>[[Math.cos(t),-Math.sin(t),0],[Math.sin(t),Math.cos(t),0],[0,0,1]],Ct=(t,r)=>{let e=M(r);return u(F(t),e)},P=t=>[[t[0],0],[0,t[1]]],Bt=(t,r)=>u(P(t),r),O=t=>[[t[0],0,0],[0,t[1],0],[0,0,t[2]]],jt=(t,r)=>u(O(t),r),rr=(t,r,e)=>{let o=t.length;if(o<=0)throw new Error("The matrix should not be empty.");if(o!==t[0].length)throw new Error("The matrix must be square.");let n=[];for(let i=0;i<o;i++){if(i===r)continue;let a=[];for(let c=0;c<o;c++)c!==e&&a.push(t[i][c]);n.push(a)}return n},E=(t,r,e)=>{let o=t.length;if(o<=0)throw new Error("The matrix should not be empty.");if(o!==t[0].length)throw new Error("The matrix must be square.");let n=rr(t,r,e);return V(n)},V=t=>{let r=t.length;if(r===0)return 1;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t[0][0];if(r===2)return C(t);let e=0;for(let o=0;o<r;o++){let n=E(t,0,o),i=t[0][o];o%2!==0&&(i=-i),e+=n*i}return e},C=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return t[0][0]*t[1][1]-t[1][0]*t[0][1]},qt=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return V(t)},B=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return[[t[1][1],-t[0][1]],[-t[1][0],t[0][0]]]},Lt=t=>j(t),j=t=>{let r=t.length;if(r<=0)return null;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t;if(r===2)return B(t);let e=[];for(let o=0;o<r;o++){let n=[];for(let i=0;i<r;i++){let a=E(t,o,i),c=Math.pow(-1,o+i);n.push(c*a)}e.push(n)}return h(e)},q=(t,r=1/0)=>{if(t.length<=0)return null;if(t.length!==t[0].length)throw new Error("The matrix must be square.");let e=C(t);if(e===0)return null;let o=B(t);return o===null?null:Q(o,e,r)},L=(t,r=1/0)=>S(t,r),S=(t,r=1/0)=>{let e=t.length;if(e<=0)return null;if(e!==t[0].length)throw new Error("The matrix must be square.");let o=V(t),n=j(t);return n===null?null:g(n,o,r)};var Qt=(t,r,e=1/0)=>m(Math.random()*(r-t)+t,e),H=(t,r)=>Math.floor(Math.random()*(r-t+1)+t),Xt=()=>Math.random()<.5,Yt=t=>{let r=H(0,t.length-1);return t[r]};var Zt=(t,r)=>(t%r+r)%r,Ft=(t,r,e,o,n)=>(n-o)*(t-r)/(e-r)+o,Pt=(t,r,e,o)=>Math.max(t,e)<=Math.min(r,o),Ot=t=>!isNaN(parseFloat(t))&&isFinite(t);var Ht=(t,r)=>{var o;if(t==null)return r;let e=(o=Number(t))!=null?o:r;return isNaN(e)?r:e};var Wt=(t,r,e,o)=>{let n=Math.pow(1-t,2),i=(1-t)*2*t,a=t*t;return[n*r[0]+i*e[0]+a*o[0],n*r[1]+i*e[1]+a*o[1]]},kt=(t,r,e,o)=>{let n=Math.pow(1-t,2),i=(1-t)*2*t,a=t*t;return[n*r[0]+i*e[0]+a*o[0],n*r[1]+i*e[1]+a*o[1],n*r[2]+i*e[2]+a*o[2]]},Gt=(t,r,e,o,n)=>{let i=Math.pow(1-t,3),a=Math.pow(1-t,2)*3*t,c=(1-t)*3*t*t,s=t*t*t;return[i*r[0]+a*e[0]+c*o[0]+s*n[0],i*r[1]+a*e[1]+c*o[1]+s*n[1]]},Jt=(t,r,e,o,n)=>{let i=Math.pow(1-t,3),a=Math.pow(1-t,2)*3*t,c=(1-t)*3*t*t,s=t*t*t;return[i*r[0]+a*e[0]+c*o[0]+s*n[0],i*r[1]+a*e[1]+c*o[1]+s*n[1],i*r[2]+a*e[2]+c*o[2]+s*n[2]]};var Kt=(t,r,e=1/0)=>{let o=[[t[0],t[1]],[r[0],r[1]]],n=q(o);if(n===null)return null;let i=[t[2],r[2]];return u(n,i,e)},yr=(t,r,e,o=1/0)=>{let n=[[t[0],t[1],t[2]],[r[0],r[1],r[2]],[e[0],e[1],e[2]]],i=L(n);if(i===null)return null;let a=[t[2],r[2],e[2]];return u(i,a,o)},gr=(t,r=1/0)=>{if(t.length<=0)return null;let e=[];for(let i=0;i<t.length;i++){let a=[];for(let c=0;c<t[i].length-1;i++)a.push(t[i][c]);e.push(a)}let o=S(e);if(o===null)return null;let n=[];for(let i=0;i<t.length;i++){let a=t[i];n.push(a[a.length-1])}return u(o,n,r)};var cr={v2:ut,v3:st,vN:D,m2x2:bt,m3x3:dt,mNxM:It,identity2:Rt,identity3:Dt,identityN:zt,vEqual:z,mEqual:Tt,vSum:v,v2Sum:K,v3Sum:U,vSub:p,v2Sub:_,v3Sub:$,vMulScalar:l,v2MulScalar:tt,v3MulScalar:rt,vDivideScalar:f,v2DivideScalar:et,v3DivideScalar:ot,vLength:y,v2Length:d,v3Length:nt,v2SetLength:it,vNormalize:I,v2Normalize:R,v3Normalize:M,vDotProduct:x,v2DotProduct:at,v3DotProduct:mt,v3CrossProduct:ct,mSum:w,m2Sum:xt,m3Sum:vt,mSub:T,m2Sub:pt,m3Sub:lt,mMulScalar:N,m2MulScalar:ft,m3MulScalar:Mt,mDivideScalar:g,m2DivideScalar:Q,m3DivideScalar:ht,mTranspose:h,m2Transpose:yt,m3Transpose:gt,mMul:wt,mMulVector:u,mReset:A,m2Reset:Vt,m3Reset:St,m2Rotation:X,v2Rotate:Nt,m3RotationX:Y,v3RotateX:At,m3RotationY:Z,v3RotateY:Et,m3RotationZ:F,v3RotateZ:Ct,m2Scale:P,v2Scale:Bt,m3Scale:O,v3Scale:jt,m2Determinant:C,m3Determinant:qt,mDeterminant:V,m2Inverse:q,m3Inverse:L,mInverse:S,m2Adjugate:B,m3Adjugate:Lt,mAdjugate:j,mMinor:E,getV2Angle:b,setV2Angle:k,radiansToDegrees:G,degreesToRadians:J,setDecimalPlaces:m,getRandom:Qt,getRandomInt:H,getRandomBoolean:Xt,getRandomItemFromArray:Yt,mod:Zt,convertRange:Ft,doRangesOverlap:Pt,isNumber:Ot,stringToNumber:Ht,v2QuadraticBezierCurve:Wt,v3QuadraticBezierCurve:kt,v2CubicBezierCurve:Gt,v3CubicBezierCurve:Jt,equationSystem2:Kt};window.TCMath=window.TCMath||cr;})();
//# sourceMappingURL=tc-math.min.js.map
