/* 
Tool Cool Math Helpers
Version: 1.0.14
Documentation: https://github.com/toolcool-org/toolcool-math
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
(()=>{var et=Object.defineProperty;var tt=Object.getOwnPropertySymbols;var Mt=Object.prototype.hasOwnProperty,ht=Object.prototype.propertyIsEnumerable;var ot=Math.pow,rt=(t,r,e)=>r in t?et(t,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[r]=e,p=(t,r)=>{for(var e in r||(r={}))Mt.call(r,e)&&rt(t,e,r[e]);if(tt)for(var e of tt(r))ht.call(r,e)&&rt(t,e,r[e]);return t};var m=(t,r)=>{for(var e in r)et(t,e,{get:r[e],enumerable:!0})};var q={};m(q,{v2:()=>Nt,v2DivideScalar:()=>St,v2DotProduct:()=>Et,v2Length:()=>E,v2MulScalar:()=>It,v2Normalize:()=>R,v2SetLength:()=>Tt,v2Sub:()=>yt,v2Sum:()=>bt,v3:()=>jt,v3CrossProduct:()=>Rt,v3DivideScalar:()=>Dt,v3DotProduct:()=>zt,v3Length:()=>dt,v3MulScalar:()=>wt,v3Normalize:()=>g,v3Sub:()=>vt,v3Sum:()=>gt,vDivideScalar:()=>b,vDotProduct:()=>h,vEqual:()=>j,vLength:()=>v,vMulScalar:()=>V,vN:()=>N,vNormalize:()=>z,vSub:()=>l,vSum:()=>f});var D={};m(D,{setDecimalPlaces:()=>s});var s=(t,r=1/0)=>{if(r===1/0)return t;r<0&&(r=0);let e=ot(10,r);return Math.round(t*e)/e};var T={};m(T,{degreesToRadians:()=>Vt,getV2Angle:()=>d,radiansToDegrees:()=>lt,setV2Angle:()=>ft});var d=(t,r=1/0)=>{let e=Math.atan2(t[1],t[0]);return s(e,r)},ft=(t,r,e=1/0)=>{let o=E(t);return[s(Math.cos(r)*o,e),s(Math.sin(r)*o,e)]},lt=(t,r=1/0)=>{let e=t*(180/Math.PI);return s(e,r)},Vt=(t,r=1/0)=>{let e=t*(Math.PI/180);return s(e,r)};var f=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(s(t[n]+r[n],e));return o},bt=(t,r,e=1/0)=>f(t,r,e),gt=(t,r,e=1/0)=>f(t,r,e),l=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(s(t[n]-r[n],e));return o},yt=(t,r,e=1/0)=>l(t,r,e),vt=(t,r,e=1/0)=>l(t,r,e),V=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(s(t[n]*r,e));return o},It=(t,r,e=1/0)=>V(t,r,e),wt=(t,r,e=1/0)=>V(t,r,e),b=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n=0;n<t.length;n++)o.push(s(t[n]/r,e));return o},St=(t,r,e=1/0)=>b(t,r,e),Dt=(t,r,e=1/0)=>b(t,r,e),v=(t,r=1/0)=>{let e=0;for(let o=0;o<t.length;o++)e+=t[o]*t[o];return s(Math.sqrt(e),r)},E=(t,r=1/0)=>v(t,r),dt=(t,r=1/0)=>v(t,r),Tt=(t,r,e=1/0)=>{let o=d(t);return[s(Math.cos(o)*r,e),s(Math.sin(o)*r,e)]},z=(t,r=1/0)=>{let e=v(t),o=[];for(let n=0;n<t.length;n++)o.push(e===0?0:s(t[n]/e,r));return o},R=(t,r=1/0)=>z(t,r),g=(t,r=1/0)=>z(t,r),h=(t,r,e=1/0)=>{let o=0;for(let n=0;n<t.length;n++)o+=t[n]*r[n];return s(o,e)},Et=(t,r,e=1/0)=>h(t,r,e),zt=(t,r,e=1/0)=>h(t,r,e),Rt=(t,r,e=1/0)=>[s(t[1]*r[2]-t[2]*r[1],e),s(t[2]*r[0]-t[0]*r[2],e),s(t[0]*r[1]-t[1]*r[0],e)],Nt=(t=0)=>[t,t],jt=(t=0)=>[t,t,t],N=(t,r=0)=>{if(t<0)throw new Error("N must be a non-negative number.");let e=[];for(let o=0;o<t;o++)e.push(r);return e},j=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0};var J={};m(J,{identity2:()=>kt,identity3:()=>Jt,identityN:()=>Kt,m2Adjugate:()=>H,m2AppendRow:()=>Pt,m2DeepCopy:()=>G,m2Determinant:()=>Z,m2DivideScalar:()=>nt,m2Inverse:()=>W,m2MulScalar:()=>Bt,m2PrependRow:()=>er,m2Reset:()=>Yt,m2Rotation:()=>it,m2Scale:()=>at,m2Sub:()=>Lt,m2Sum:()=>qt,m2Transpose:()=>Qt,m2x2:()=>Ht,m3Adjugate:()=>gr,m3AppendRow:()=>tr,m3DeepCopy:()=>C,m3Determinant:()=>br,m3DivideScalar:()=>Ct,m3Inverse:()=>k,m3MulScalar:()=>Gt,m3PrependRow:()=>or,m3Reset:()=>Zt,m3RotationX:()=>ct,m3RotationY:()=>st,m3RotationZ:()=>ut,m3Scale:()=>xt,m3Sub:()=>Ft,m3Sum:()=>At,m3Transpose:()=>Xt,m3x3:()=>Ot,mAdjugate:()=>O,mAppendCol:()=>Ut,mAppendRow:()=>$t,mDeepCopy:()=>a,mDelFirstColumn:()=>cr,mDelFirstRow:()=>ir,mDelLastColumn:()=>Q,mDelLastRow:()=>nr,mDeterminant:()=>w,mDivideScalar:()=>I,mEqual:()=>xr,mGetColumn:()=>ur,mGetFirstColumn:()=>sr,mGetLastColumn:()=>X,mInverse:()=>S,mMinor:()=>Y,mMul:()=>ar,mMulScalar:()=>F,mMulVector:()=>x,mNxM:()=>Wt,mPrependCol:()=>_t,mPrependRow:()=>rr,mReset:()=>B,mSub:()=>L,mSum:()=>A,mTranspose:()=>y,v2Rotate:()=>pr,v2Scale:()=>fr,v3RotateX:()=>mr,v3RotateY:()=>Mr,v3RotateZ:()=>hr,v3Scale:()=>lr});var A=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(f(t[n],r[n],e));return o},qt=(t,r,e=1/0)=>A(t,r,e),At=(t,r,e=1/0)=>A(t,r,e),L=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(l(t[n],r[n],e));return o},Lt=(t,r,e=1/0)=>L(t,r,e),Ft=(t,r,e=1/0)=>L(t,r,e),F=(t,r,e=1/0)=>{let o=[];for(let n of t)o.push(V(n,r,e));return o},Bt=(t,r,e=1/0)=>F(t,r,e),Gt=(t,r,e=1/0)=>F(t,r,e),I=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n of t)o.push(b(n,r,e));return o},nt=(t,r,e=1/0)=>I(t,r,e),Ct=(t,r,e=1/0)=>I(t,r,e),y=t=>{let r=t.length;if(r<=0)return t;let e=t[0].length;if(e<=0)return t;let o=[];for(let n=0;n<e;n++)o.push([]);for(let n=0;n<r;n++)for(let i=0;i<e;i++)o[i].push(t[n][i]);return o},Qt=t=>y(t),Xt=t=>y(t),B=(t,r=0)=>{if(t.length<=0)return[];let e=[];for(let o=0;o<t.length;o++){let n=t[o].length,i=[];for(let c=0;c<n;c++)i.push(r);e.push(i)}return e},Yt=(t,r=0)=>B(t,r),Zt=(t,r=0)=>B(t,r),Ht=(t=0)=>[[t,t],[t,t]],Ot=(t=0)=>[[t,t,t],[t,t,t],[t,t,t]],Wt=(t,r,e=0)=>{if(t<=0||r<=0)throw new Error("M and N must be positive numbers.");let o=[];for(let n=0;n<t;n++)o.push(N(r,e));return o},kt=()=>[[1,0],[0,1]],Jt=()=>[[1,0,0],[0,1,0],[0,0,1]],Kt=t=>{if(t<0)throw new Error("N must be a non-negative number.");if(t===0)return[];let r=[];for(let e=0;e<t;e++){let o=[];for(let n=0;n<t;n++)o.push(e===n?1:0);r.push(o)}return r},a=t=>{let r=[];for(let e=0;e<t.length;e++){let o=t[e],n=[];for(let i=0;i<o.length;i++)n.push(o[i]);r.push(n)}return r},G=t=>a(t),C=t=>a(t),Ut=(t,r)=>{if(t.length<=0)return[];let e=a(t);for(let o=0;o<e.length;o++)e[o].push(r[o]);return e},_t=(t,r)=>{if(t.length<=0)return[];let e=a(t);for(let o=0;o<e.length;o++)e[o].unshift(r[o]);return e},$t=(t,r)=>{let e=a(t);return e.push(r),e},Pt=(t,r)=>{let e=G(t);return e.push(r),e},tr=(t,r)=>{let e=C(t);return e.push(r),e},rr=(t,r)=>{let e=a(t);return e.unshift(r),e},er=(t,r)=>{let e=G(t);return e.unshift(r),e},or=(t,r)=>{let e=C(t);return e.unshift(r),e},nr=t=>{if(t.length<=0)return[];let r=a(t);return r.pop(),r},ir=t=>{if(t.length<=0)return[];let r=a(t);return r.shift(),r},Q=t=>{if(t.length<=0)return[];let r=a(t);for(let e=0;e<r.length;e++)r[e].pop();return r},cr=t=>{if(t.length<=0)return[];let r=a(t);for(let e=0;e<r.length;e++)r[e].shift();return r},sr=t=>{if(t.length<=0)return[];let r=[];for(let e=0;e<t.length;e++)r.push(t[e][0]);return r},X=t=>{if(t.length<=0)return[];let r=t[0].length,e=[];for(let o=0;o<t.length;o++)e.push(t[o][r-1]);return e},ur=(t,r)=>{if(t.length<=0)return[];let e=[];for(let o=0;o<t.length;o++)e.push(t[o][r]);return e},ar=(t,r,e=1/0)=>{let o=[];for(let i=0;i<t.length;i++)o.push([]);let n=y(r);if(o.length!==n.length)throw new Error("The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.");for(let i=0;i<t.length;i++){let c=t[i];for(let u=0;u<n.length;u++){let M=n[u],mt=h(c,M,e);o[i].push(mt)}}return o},x=(t,r,e=1/0)=>{if(t.length<0)return[];if(t[0].length!==r.length)throw new Error("The number of columns in the matrix must be equal to the length of the vector.");let o=[];for(let n=0;n<t.length;n++)o[n]=h(t[n],r,e);return o},xr=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(!j(t[e],r[e]))return!1;return!0},it=t=>[[Math.cos(t),-Math.sin(t)],[Math.sin(t),Math.cos(t)]],pr=(t,r)=>{let e=R(r);return x(it(t),e)},ct=t=>[[1,0,0],[0,Math.cos(t),-Math.sin(t)],[0,Math.sin(t),Math.cos(t)]],mr=(t,r)=>{let e=g(r);return x(ct(t),e)},st=t=>[[Math.cos(t),0,Math.sin(t)],[0,1,0],[-Math.sin(t),0,Math.cos(t)]],Mr=(t,r)=>{let e=g(r);return x(st(t),e)},ut=t=>[[Math.cos(t),-Math.sin(t),0],[Math.sin(t),Math.cos(t),0],[0,0,1]],hr=(t,r)=>{let e=g(r);return x(ut(t),e)},at=t=>[[t[0],0],[0,t[1]]],fr=(t,r)=>x(at(t),r),xt=t=>[[t[0],0,0],[0,t[1],0],[0,0,t[2]]],lr=(t,r)=>x(xt(t),r),Vr=(t,r,e)=>{let o=t.length;if(o<=0)throw new Error("The matrix should not be empty.");if(o!==t[0].length)throw new Error("The matrix must be square.");let n=[];for(let i=0;i<o;i++){if(i===r)continue;let c=[];for(let u=0;u<o;u++)u!==e&&c.push(t[i][u]);n.push(c)}return n},Y=(t,r,e)=>{let o=t.length;if(o<=0)throw new Error("The matrix should not be empty.");if(o!==t[0].length)throw new Error("The matrix must be square.");let n=Vr(t,r,e);return w(n)},w=t=>{let r=t.length;if(r===0)return 1;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t[0][0];if(r===2)return Z(t);let e=0;for(let o=0;o<r;o++){let n=Y(t,0,o),i=t[0][o];o%2!==0&&(i=-i),e+=n*i}return e},Z=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return t[0][0]*t[1][1]-t[1][0]*t[0][1]},br=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return w(t)},H=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return[[t[1][1],-t[0][1]],[-t[1][0],t[0][0]]]},gr=t=>O(t),O=t=>{let r=t.length;if(r<=0)return null;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t;if(r===2)return H(t);let e=[];for(let o=0;o<r;o++){let n=[];for(let i=0;i<r;i++){let c=Y(t,o,i),u=Math.pow(-1,o+i);n.push(u*c)}e.push(n)}return y(e)},W=(t,r=1/0)=>{if(t.length<=0)return null;if(t.length!==t[0].length)throw new Error("The matrix must be square.");let e=Z(t);if(e===0)return null;let o=H(t);return o===null?null:nt(o,e,r)},k=(t,r=1/0)=>S(t,r),S=(t,r=1/0)=>{let e=t.length;if(e<=0)return null;if(e!==t[0].length)throw new Error("The matrix must be square.");let o=w(t),n=O(t);return n===null?null:I(n,o,r)};var K={};m(K,{getRandom:()=>yr,getRandomBoolean:()=>vr,getRandomInt:()=>pt,getRandomItemFromArray:()=>Ir});var yr=(t,r,e=1/0)=>s(Math.random()*(r-t)+t,e),pt=(t,r)=>Math.floor(Math.random()*(r-t+1)+t),vr=()=>Math.random()<.5,Ir=t=>{let r=pt(0,t.length-1);return t[r]};var U={};m(U,{convertRange:()=>Sr,doRangesOverlap:()=>Dr,isNumber:()=>dr,mod:()=>wr});var wr=(t,r)=>(t%r+r)%r,Sr=(t,r,e,o,n)=>(n-o)*(t-r)/(e-r)+o,Dr=(t,r,e,o)=>Math.max(t,e)<=Math.min(r,o),dr=t=>!isNaN(parseFloat(t))&&isFinite(t);var _={};m(_,{stringToNumber:()=>Tr});var Tr=(t,r)=>{var o;if(t==null)return r;let e=(o=Number(t))!=null?o:r;return isNaN(e)?r:e};var $={};m($,{v2CubicBezierCurve:()=>Rr,v2QuadraticBezierCurve:()=>Er,v3CubicBezierCurve:()=>Nr,v3QuadraticBezierCurve:()=>zr});var Er=(t,r,e,o)=>{let n=Math.pow(1-t,2),i=(1-t)*2*t,c=t*t;return[n*r[0]+i*e[0]+c*o[0],n*r[1]+i*e[1]+c*o[1]]},zr=(t,r,e,o)=>{let n=Math.pow(1-t,2),i=(1-t)*2*t,c=t*t;return[n*r[0]+i*e[0]+c*o[0],n*r[1]+i*e[1]+c*o[1],n*r[2]+i*e[2]+c*o[2]]},Rr=(t,r,e,o,n)=>{let i=Math.pow(1-t,3),c=Math.pow(1-t,2)*3*t,u=(1-t)*3*t*t,M=t*t*t;return[i*r[0]+c*e[0]+u*o[0]+M*n[0],i*r[1]+c*e[1]+u*o[1]+M*n[1]]},Nr=(t,r,e,o,n)=>{let i=Math.pow(1-t,3),c=Math.pow(1-t,2)*3*t,u=(1-t)*3*t*t,M=t*t*t;return[i*r[0]+c*e[0]+u*o[0]+M*n[0],i*r[1]+c*e[1]+u*o[1]+M*n[1],i*r[2]+c*e[2]+u*o[2]+M*n[2]]};var P={};m(P,{equationSystem2:()=>jr,equationSystem3:()=>qr,equationSystemN:()=>Ar});var jr=(t,r,e=1/0)=>{let o=[[t[0],t[1]],[r[0],r[1]]],n=W(o);if(n===null)return null;let i=[t[2],r[2]];return x(n,i,e)},qr=(t,r,e,o=1/0)=>{let n=[[t[0],t[1],t[2]],[r[0],r[1],r[2]],[e[0],e[1],e[2]]],i=k(n);if(i===null)return null;let c=[t[3],r[3],e[3]];return x(i,c,o)},Ar=(t,r=1/0)=>{if(t.length<=0)return null;let e=Q(t),o=S(e);if(o===null)return null;let n=X(t);return x(o,n,r)};var Lr=p(p(p(p(p(p(p(p(p({},q),J),D),T),K),U),_),$),P);window.TCMath=window.TCMath||Lr;})();
//# sourceMappingURL=tc-math.min.js.map
