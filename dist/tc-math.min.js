/* 
Tool Cool Math Helpers
Version: 1.0.13
Documentation: https://github.com/toolcool-org/toolcool-math
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
(()=>{var K=Math.pow;var s=(t,r=1/0)=>{if(r===1/0)return t;r<0&&(r=0);let e=K(10,r);return Math.round(t*e)/e};var d=(t,r=1/0)=>{let e=Math.atan2(t[1],t[0]);return s(e,r)},U=(t,r,e=1/0)=>{let o=I(t);return[s(Math.cos(r)*o,e),s(Math.sin(r)*o,e)]},_=(t,r=1/0)=>{let e=t*(180/Math.PI);return s(e,r)},$=(t,r=1/0)=>{let e=t*(Math.PI/180);return s(e,r)};var p=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(s(t[n]+r[n],e));return o},P=(t,r,e=1/0)=>p(t,r,e),tt=(t,r,e=1/0)=>p(t,r,e),l=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(s(t[n]-r[n],e));return o},rt=(t,r,e=1/0)=>l(t,r,e),et=(t,r,e=1/0)=>l(t,r,e),v=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(s(t[n]*r,e));return o},ot=(t,r,e=1/0)=>v(t,r,e),nt=(t,r,e=1/0)=>v(t,r,e),M=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n=0;n<t.length;n++)o.push(s(t[n]/r,e));return o},it=(t,r,e=1/0)=>M(t,r,e),at=(t,r,e=1/0)=>M(t,r,e),V=(t,r=1/0)=>{let e=0;for(let o=0;o<t.length;o++)e+=t[o]*t[o];return s(Math.sqrt(e),r)},I=(t,r=1/0)=>V(t,r),ct=(t,r=1/0)=>V(t,r),st=(t,r,e=1/0)=>{let o=d(t);return[s(Math.cos(o)*r,e),s(Math.sin(o)*r,e)]},D=(t,r=1/0)=>{let e=V(t),o=[];for(let n=0;n<t.length;n++)o.push(e===0?0:s(t[n]/e,r));return o},w=(t,r=1/0)=>D(t,r),h=(t,r=1/0)=>D(t,r),x=(t,r,e=1/0)=>{let o=0;for(let n=0;n<t.length;n++)o+=t[n]*r[n];return s(o,e)},mt=(t,r,e=1/0)=>x(t,r,e),ut=(t,r,e=1/0)=>x(t,r,e),xt=(t,r,e=1/0)=>[s(t[1]*r[2]-t[2]*r[1],e),s(t[2]*r[0]-t[0]*r[2],e),s(t[0]*r[1]-t[1]*r[0],e)],pt=(t=0)=>[t,t],lt=(t=0)=>[t,t,t],R=(t,r=0)=>{if(t<0)throw new Error("N must be a non-negative number.");let e=[];for(let o=0;o<t;o++)e.push(r);return e},z=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0};var T=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(p(t[n],r[n],e));return o},vt=(t,r,e=1/0)=>T(t,r,e),Mt=(t,r,e=1/0)=>T(t,r,e),N=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(l(t[n],r[n],e));return o},ht=(t,r,e=1/0)=>N(t,r,e),ft=(t,r,e=1/0)=>N(t,r,e),E=(t,r,e=1/0)=>{let o=[];for(let n of t)o.push(v(n,r,e));return o},Vt=(t,r,e=1/0)=>E(t,r,e),bt=(t,r,e=1/0)=>E(t,r,e),b=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n of t)o.push(M(n,r,e));return o},X=(t,r,e=1/0)=>b(t,r,e),gt=(t,r,e=1/0)=>b(t,r,e),f=t=>{let r=t.length;if(r<=0)return t;let e=t[0].length;if(e<=0)return t;let o=[];for(let n=0;n<e;n++)o.push([]);for(let n=0;n<r;n++)for(let i=0;i<e;i++)o[i].push(t[n][i]);return o},St=t=>f(t),yt=t=>f(t),q=(t,r=0)=>{if(t.length<=0)return[];let e=[];for(let o=0;o<t.length;o++){let n=t[o].length,i=[];for(let a=0;a<n;a++)i.push(r);e.push(i)}return e},dt=(t,r=0)=>q(t,r),It=(t,r=0)=>q(t,r),Dt=(t=0)=>[[t,t],[t,t]],wt=(t=0)=>[[t,t,t],[t,t,t],[t,t,t]],Rt=(t,r,e=0)=>{if(t<=0||r<=0)throw new Error("M and N must be positive numbers.");let o=[];for(let n=0;n<t;n++)o.push(R(r,e));return o},zt=()=>[[1,0],[0,1]],Tt=()=>[[1,0,0],[0,1,0],[0,0,1]],Nt=t=>{if(t<0)throw new Error("N must be a non-negative number.");if(t===0)return[];let r=[];for(let e=0;e<t;e++){let o=[];for(let n=0;n<t;n++)o.push(e===n?1:0);r.push(o)}return r},g=t=>{let r=[];for(let e=0;e<t.length;e++){let o=t[e],n=[];for(let i=0;i<o.length;i++)n.push(o[i]);r.push(n)}return r},Y=t=>g(t),Z=t=>g(t),Sr=(t,r)=>{let e=g(t);return e.push(r),e},yr=(t,r)=>{let e=Y(t);return e.push(r),e},dr=(t,r)=>{let e=Z(t);return e.push(r),e},Et=(t,r,e=1/0)=>{let o=[];for(let i=0;i<t.length;i++)o.push([]);let n=f(r);if(o.length!==n.length)throw new Error("The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.");for(let i=0;i<t.length;i++){let a=t[i];for(let c=0;c<n.length;c++){let m=n[c],er=x(a,m,e);o[i].push(er)}}return o},u=(t,r,e=1/0)=>{if(t.length<0)return[];if(t[0].length!==r.length)throw new Error("The number of columns in the matrix must be equal to the length of the vector.");let o=[];for(let n=0;n<t.length;n++)o[n]=x(t[n],r,e);return o},qt=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(!z(t[e],r[e]))return!1;return!0},F=t=>[[Math.cos(t),-Math.sin(t)],[Math.sin(t),Math.cos(t)]],At=(t,r)=>{let e=w(r);return u(F(t),e)},O=t=>[[1,0,0],[0,Math.cos(t),-Math.sin(t)],[0,Math.sin(t),Math.cos(t)]],jt=(t,r)=>{let e=h(r);return u(O(t),e)},H=t=>[[Math.cos(t),0,Math.sin(t)],[0,1,0],[-Math.sin(t),0,Math.cos(t)]],Ct=(t,r)=>{let e=h(r);return u(H(t),e)},W=t=>[[Math.cos(t),-Math.sin(t),0],[Math.sin(t),Math.cos(t),0],[0,0,1]],Bt=(t,r)=>{let e=h(r);return u(W(t),e)},k=t=>[[t[0],0],[0,t[1]]],Lt=(t,r)=>u(k(t),r),G=t=>[[t[0],0,0],[0,t[1],0],[0,0,t[2]]],Qt=(t,r)=>u(G(t),r),ar=(t,r,e)=>{let o=t.length;if(o<=0)throw new Error("The matrix should not be empty.");if(o!==t[0].length)throw new Error("The matrix must be square.");let n=[];for(let i=0;i<o;i++){if(i===r)continue;let a=[];for(let c=0;c<o;c++)c!==e&&a.push(t[i][c]);n.push(a)}return n},A=(t,r,e)=>{let o=t.length;if(o<=0)throw new Error("The matrix should not be empty.");if(o!==t[0].length)throw new Error("The matrix must be square.");let n=ar(t,r,e);return S(n)},S=t=>{let r=t.length;if(r===0)return 1;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t[0][0];if(r===2)return j(t);let e=0;for(let o=0;o<r;o++){let n=A(t,0,o),i=t[0][o];o%2!==0&&(i=-i),e+=n*i}return e},j=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return t[0][0]*t[1][1]-t[1][0]*t[0][1]},Xt=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return S(t)},C=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return[[t[1][1],-t[0][1]],[-t[1][0],t[0][0]]]},Yt=t=>B(t),B=t=>{let r=t.length;if(r<=0)return null;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t;if(r===2)return C(t);let e=[];for(let o=0;o<r;o++){let n=[];for(let i=0;i<r;i++){let a=A(t,o,i),c=Math.pow(-1,o+i);n.push(c*a)}e.push(n)}return f(e)},L=(t,r=1/0)=>{if(t.length<=0)return null;if(t.length!==t[0].length)throw new Error("The matrix must be square.");let e=j(t);if(e===0)return null;let o=C(t);return o===null?null:X(o,e,r)},Q=(t,r=1/0)=>y(t,r),y=(t,r=1/0)=>{let e=t.length;if(e<=0)return null;if(e!==t[0].length)throw new Error("The matrix must be square.");let o=S(t),n=B(t);return n===null?null:b(n,o,r)};var Zt=(t,r,e=1/0)=>s(Math.random()*(r-t)+t,e),J=(t,r)=>Math.floor(Math.random()*(r-t+1)+t),Ft=()=>Math.random()<.5,Ot=t=>{let r=J(0,t.length-1);return t[r]};var Ht=(t,r)=>(t%r+r)%r,Wt=(t,r,e,o,n)=>(n-o)*(t-r)/(e-r)+o,kt=(t,r,e,o)=>Math.max(t,e)<=Math.min(r,o),Gt=t=>!isNaN(parseFloat(t))&&isFinite(t);var Jt=(t,r)=>{var o;if(t==null)return r;let e=(o=Number(t))!=null?o:r;return isNaN(e)?r:e};var Kt=(t,r,e,o)=>{let n=Math.pow(1-t,2),i=(1-t)*2*t,a=t*t;return[n*r[0]+i*e[0]+a*o[0],n*r[1]+i*e[1]+a*o[1]]},Ut=(t,r,e,o)=>{let n=Math.pow(1-t,2),i=(1-t)*2*t,a=t*t;return[n*r[0]+i*e[0]+a*o[0],n*r[1]+i*e[1]+a*o[1],n*r[2]+i*e[2]+a*o[2]]},_t=(t,r,e,o,n)=>{let i=Math.pow(1-t,3),a=Math.pow(1-t,2)*3*t,c=(1-t)*3*t*t,m=t*t*t;return[i*r[0]+a*e[0]+c*o[0]+m*n[0],i*r[1]+a*e[1]+c*o[1]+m*n[1]]},$t=(t,r,e,o,n)=>{let i=Math.pow(1-t,3),a=Math.pow(1-t,2)*3*t,c=(1-t)*3*t*t,m=t*t*t;return[i*r[0]+a*e[0]+c*o[0]+m*n[0],i*r[1]+a*e[1]+c*o[1]+m*n[1],i*r[2]+a*e[2]+c*o[2]+m*n[2]]};var Pt=(t,r,e=1/0)=>{let o=[[t[0],t[1]],[r[0],r[1]]],n=L(o);if(n===null)return null;let i=[t[2],r[2]];return u(n,i,e)},tr=(t,r,e,o=1/0)=>{let n=[[t[0],t[1],t[2]],[r[0],r[1],r[2]],[e[0],e[1],e[2]]],i=Q(n);if(i===null)return null;let a=[t[3],r[3],e[3]];return u(i,a,o)},rr=(t,r=1/0)=>{if(t.length<=0)return null;let e=[],o=t.length;for(let a=0;a<o;a++){let c=[];for(let m=0;m<o;m++)c.push(t[a][m]);e.push(c)}let n=y(e);if(n===null)return null;let i=[];for(let a=0;a<o;a++){let c=t[a];i.push(c[c.length-1])}return u(n,i,r)};var lr={v2:pt,v3:lt,vN:R,m2x2:Dt,m3x3:wt,mNxM:Rt,identity2:zt,identity3:Tt,identityN:Nt,vEqual:z,mEqual:qt,mDeepCopy:g,m2DeepCopy:Y,m3DeepCopy:Z,vSum:p,v2Sum:P,v3Sum:tt,vSub:l,v2Sub:rt,v3Sub:et,vMulScalar:v,v2MulScalar:ot,v3MulScalar:nt,vDivideScalar:M,v2DivideScalar:it,v3DivideScalar:at,vLength:V,v2Length:I,v3Length:ct,v2SetLength:st,vNormalize:D,v2Normalize:w,v3Normalize:h,vDotProduct:x,v2DotProduct:mt,v3DotProduct:ut,v3CrossProduct:xt,mSum:T,m2Sum:vt,m3Sum:Mt,mSub:N,m2Sub:ht,m3Sub:ft,mMulScalar:E,m2MulScalar:Vt,m3MulScalar:bt,mDivideScalar:b,m2DivideScalar:X,m3DivideScalar:gt,mTranspose:f,m2Transpose:St,m3Transpose:yt,mMul:Et,mMulVector:u,mReset:q,m2Reset:dt,m3Reset:It,m2Rotation:F,v2Rotate:At,m3RotationX:O,v3RotateX:jt,m3RotationY:H,v3RotateY:Ct,m3RotationZ:W,v3RotateZ:Bt,m2Scale:k,v2Scale:Lt,m3Scale:G,v3Scale:Qt,m2Determinant:j,m3Determinant:Xt,mDeterminant:S,m2Inverse:L,m3Inverse:Q,mInverse:y,m2Adjugate:C,m3Adjugate:Yt,mAdjugate:B,mMinor:A,getV2Angle:d,setV2Angle:U,radiansToDegrees:_,degreesToRadians:$,setDecimalPlaces:s,getRandom:Zt,getRandomInt:J,getRandomBoolean:Ft,getRandomItemFromArray:Ot,mod:Ht,convertRange:Wt,doRangesOverlap:kt,isNumber:Gt,stringToNumber:Jt,v2QuadraticBezierCurve:Kt,v3QuadraticBezierCurve:Ut,v2CubicBezierCurve:_t,v3CubicBezierCurve:$t,equationSystem2:Pt,equationSystem3:tr,equationSystemN:rr};window.TCMath=window.TCMath||lr;})();
//# sourceMappingURL=tc-math.min.js.map
