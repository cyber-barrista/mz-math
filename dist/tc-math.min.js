/* 
Tool Cool Math Helpers
Version: 1.0.0
Documentation: https://github.com/toolcool-org/toolcool-math
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
(()=>{var I=Math.pow;var m=(t,e=1/0)=>{if(e===1/0)return t;e<0&&(e=0);let r=I(10,e);return Math.round(t*r)/r};var M=(t,e=1/0)=>{let r=Math.atan2(t[1],t[0]);return m(r,e)},R=(t,e,r=1/0)=>{let o=g(t);return[m(Math.cos(e)*o,r),m(Math.sin(e)*o,r)]},z=(t,e=1/0)=>{let r=t*(180/Math.PI);return m(r,e)},T=(t,e=1/0)=>{let r=t*(Math.PI/180);return m(r,e)};var v=(t,e,r=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(m(t[n]+e[n],r));return o},D=(t,e,r=1/0)=>v(t,e,r),N=(t,e,r=1/0)=>v(t,e,r),p=(t,e,r=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(m(t[n]-e[n],r));return o},C=(t,e,r=1/0)=>p(t,e,r),B=(t,e,r=1/0)=>p(t,e,r),l=(t,e,r=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(m(t[n]*e,r));return o},L=(t,e,r=1/0)=>l(t,e,r),A=(t,e,r=1/0)=>l(t,e,r),f=(t,e=1/0)=>{let r=0;for(let o=0;o<t.length;o++)r+=t[o]*t[o];return m(Math.sqrt(r),e)},g=(t,e=1/0)=>f(t,e),w=(t,e=1/0)=>f(t,e),Q=(t,e,r=1/0)=>{let o=M(t);return[m(Math.cos(o)*e,r),m(Math.sin(o)*e,r)]},V=(t,e=1/0)=>{let r=f(t),o=[];for(let n=0;n<t.length;n++)o.push(r===0?0:m(t[n]/r,e));return o},F=(t,e=1/0)=>V(t,e),O=(t,e=1/0)=>V(t,e),s=(t,e,r=1/0)=>{let o=0;for(let n=0;n<t.length;n++)o+=t[n]*e[n];return m(o,r)},j=(t,e,r=1/0)=>s(t,e,r),q=(t,e,r=1/0)=>s(t,e,r),P=(t,e,r=1/0)=>[m(t[1]*e[2]-t[2]*e[1],r),m(t[2]*e[0]-t[0]*e[2],r),m(t[0]*e[1]-t[1]*e[0],r)];var h=(t,e,r=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(v(t[n],e[n],r));return o},W=(t,e,r=1/0)=>h(t,e,r),k=(t,e,r=1/0)=>h(t,e,r),b=(t,e,r=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(p(t[n],e[n],r));return o},E=(t,e,r=1/0)=>b(t,e,r),G=(t,e,r=1/0)=>b(t,e,r),y=(t,e,r=1/0)=>{let o=[];for(let n of t)o.push(l(n,e,r));return o},H=(t,e,r=1/0)=>y(t,e,r),J=(t,e,r=1/0)=>y(t,e,r),x=t=>{let e=t.length;if(e<=0)return t;let r=t[0].length;if(r<=0)return t;let o=[];for(let n=0;n<r;n++)o.push([]);for(let n=0;n<e;n++)for(let a=0;a<r;a++)o[a].push(t[n][a]);return o},K=t=>x(t),U=t=>x(t),S=(t,e=0)=>{if(t.length<=0)return[];let r=[];for(let o=0;o<t.length;o++){let n=t[o].length,a=[];for(let c=0;c<n;c++)a.push(e);r.push(a)}return r},X=(t,e=0)=>S(t,e),Y=(t,e=0)=>S(t,e),Z=(t,e,r=1/0)=>{let o=[];for(let a=0;a<t.length;a++)o.push([]);let n=x(e);if(o.length!==n.length)throw"The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.";for(let a=0;a<t.length;a++){let c=t[a];for(let u=0;u<n.length;u++){let i=n[u],vt=s(c,i,r);o[a].push(vt)}}return o},_=(t,e,r=1/0)=>{if(t.length<0)return[];if(t[0].length!==e.length)throw"The number of columns in the matrix must be equal to the length of the vector.";let o=[];for(let n=0;n<t.length;n++)o[n]=s(t[n],e,r);return o};var $=(t,e,r=1/0)=>m(Math.random()*(e-t)+t,r),d=(t,e)=>Math.floor(Math.random()*(e-t+1)+t),tt=()=>Math.random()<.5,et=t=>{let e=d(0,t.length-1);return t[e]};var rt=(t,e)=>(t%e+e)%e,ot=(t,e,r,o,n)=>(n-o)*(t-e)/(r-e)+o,nt=(t,e,r,o)=>Math.max(t,r)<=Math.min(e,o),at=t=>!isNaN(parseFloat(t))&&isFinite(t);var mt=(t,e)=>{var o;if(t==null)return e;let r=(o=Number(t))!=null?o:e;return isNaN(r)?e:r};var ct=(t,e,r,o)=>{let n=Math.pow(1-t,2),a=(1-t)*2*t,c=t*t;return[n*e[0]+a*r[0]+c*o[0],n*e[1]+a*r[1]+c*o[1]]},ut=(t,e,r,o)=>{let n=Math.pow(1-t,2),a=(1-t)*2*t,c=t*t;return[n*e[0]+a*r[0]+c*o[0],n*e[1]+a*r[1]+c*o[1],n*e[2]+a*r[2]+c*o[2]]},it=(t,e,r,o,n)=>{let a=Math.pow(1-t,3),c=Math.pow(1-t,2)*3*t,u=(1-t)*3*t*t,i=t*t*t;return[a*e[0]+c*r[0]+u*o[0]+i*n[0],a*e[1]+c*r[1]+u*o[1]+i*n[1]]},st=(t,e,r,o,n)=>{let a=Math.pow(1-t,3),c=Math.pow(1-t,2)*3*t,u=(1-t)*3*t*t,i=t*t*t;return[a*e[0]+c*r[0]+u*o[0]+i*n[0],a*e[1]+c*r[1]+u*o[1]+i*n[1],a*e[2]+c*r[2]+u*o[2]+i*n[2]]};window.TCMath=window.TCMath||{vSum:v,v2Sum:D,v3Sum:N,vSub:p,v2Sub:C,v3Sub:B,vMulScalar:l,v2MulScalar:L,v3MulScalar:A,vLength:f,v2Length:g,v3Length:w,v2SetLength:Q,vNormalize:V,v2Normalize:F,v3Normalize:O,vDotProduct:s,v2DotProduct:j,v3DotProduct:q,v3CrossProduct:P,mSum:h,m2Sum:W,m3Sum:k,mSub:b,m2Sub:E,m3Sub:G,mMulScalar:y,m2MulScalar:H,m3MulScalar:J,mTranspose:x,m2Transpose:K,m3Transpose:U,mMul:Z,mMulVector:_,mReset:S,m2Reset:X,m3Reset:Y,getV2Angle:M,setV2Angle:R,radiansToDegrees:z,degreesToRadians:T,setDecimalPlaces:m,getRandom:$,getRandomInt:d,getRandomBoolean:tt,getRandomItemFromArray:et,mod:rt,convertRange:ot,doRangesOverlap:nt,isNumber:at,stringToNumber:mt,v2QuadraticBezierCurve:ct,v3QuadraticBezierCurve:ut,v2CubicBezierCurve:it,v3CubicBezierCurve:st};})();
//# sourceMappingURL=tc-math.min.js.map
