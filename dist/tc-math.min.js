/* 
Tool Cool Math Helpers
Version: 1.0.0
Documentation: https://github.com/toolcool-org/toolcool-math
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
(()=>{var d=Math.pow;var c=(r,t=1/0)=>{if(t===1/0)return r;t<0&&(t=0);let e=d(10,t);return Math.round(r*e)/e};var g=(r,t=1/0)=>{let e=Math.atan2(r[1],r[0]);return c(e,t)},I=(r,t,e=1/0)=>{let o=M(r);return[c(Math.cos(t)*o,e),c(Math.sin(t)*o,e)]},z=(r,t=1/0)=>{let e=r*(180/Math.PI);return c(e,t)},T=(r,t=1/0)=>{let e=r*(Math.PI/180);return c(e,t)};var v=(r,t,e=1/0)=>{let o=[];for(let n=0;n<r.length;n++)o.push(c(r[n]+t[n],e));return o},R=(r,t,e=1/0)=>v(r,t,e),D=(r,t,e=1/0)=>v(r,t,e),p=(r,t,e=1/0)=>{let o=[];for(let n=0;n<r.length;n++)o.push(c(r[n]-t[n],e));return o},N=(r,t,e=1/0)=>p(r,t,e),C=(r,t,e=1/0)=>p(r,t,e),l=(r,t,e=1/0)=>{let o=[];for(let n=0;n<r.length;n++)o.push(c(r[n]*t,e));return o},B=(r,t,e=1/0)=>l(r,t,e),L=(r,t,e=1/0)=>l(r,t,e),f=(r,t=1/0)=>{let e=0;for(let o=0;o<r.length;o++)e+=r[o]*r[o];return c(Math.sqrt(e),t)},M=(r,t=1/0)=>f(r,t),A=(r,t=1/0)=>f(r,t),w=(r,t,e=1/0)=>{let o=g(r);return[c(Math.cos(o)*t,e),c(Math.sin(o)*t,e)]},V=(r,t=1/0)=>{let e=f(r),o=[];for(let n=0;n<r.length;n++)o.push(e===0?0:c(r[n]/e,t));return o},Q=(r,t=1/0)=>V(r,t),F=(r,t=1/0)=>V(r,t),s=(r,t,e=1/0)=>{let o=0;for(let n=0;n<r.length;n++)o+=r[n]*t[n];return c(o,e)},O=(r,t,e=1/0)=>s(r,t,e),q=(r,t,e=1/0)=>s(r,t,e),P=(r,t,e=1/0)=>[c(r[1]*t[2]-r[2]*t[1],e),c(r[2]*t[0]-r[0]*t[2],e),c(r[0]*t[1]-r[1]*t[0],e)];var b=(r,t,e=1/0)=>{let o=[];for(let n=0;n<r.length;n++)o.push(v(r[n],t[n],e));return o},j=(r,t,e=1/0)=>b(r,t,e),W=(r,t,e=1/0)=>b(r,t,e),h=(r,t,e=1/0)=>{let o=[];for(let n=0;n<r.length;n++)o.push(p(r[n],t[n],e));return o},k=(r,t,e=1/0)=>h(r,t,e),E=(r,t,e=1/0)=>h(r,t,e),S=(r,t,e=1/0)=>{let o=[];for(let n of r)o.push(l(n,t,e));return o},G=(r,t,e=1/0)=>S(r,t,e),H=(r,t,e=1/0)=>S(r,t,e),x=r=>{let t=r.length;if(t<=0)return r;let e=r[0].length;if(e<=0)return r;let o=[];for(let n=0;n<e;n++)o.push([]);for(let n=0;n<t;n++)for(let a=0;a<e;a++)o[a].push(r[n][a]);return o},J=r=>x(r),K=r=>x(r),U=(r,t,e=1/0)=>{let o=[];for(let a=0;a<r.length;a++)o.push([]);let n=x(t);if(o.length!==n.length)throw"The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.";for(let a=0;a<r.length;a++){let u=r[a];for(let m=0;m<n.length;m++){let i=n[m],mr=s(u,i,e);o[a].push(mr)}}return o},X=(r,t,e=1/0)=>{if(r.length<0)return[];if(r[0].length!==t.length)throw"The number of columns in the matrix must be equal to the length of the vector.";let o=[];for(let n=0;n<r.length;n++)o[n]=s(r[n],t,e);return o};var Y=(r,t,e=1/0)=>c(Math.random()*(t-r)+r,e),y=(r,t)=>Math.floor(Math.random()*(t-r+1)+r),Z=()=>Math.random()<.5,_=r=>{let t=y(0,r.length-1);return r[t]};var $=(r,t)=>(r%t+t)%t,rr=(r,t,e,o,n)=>(n-o)*(r-t)/(e-t)+o,tr=(r,t,e,o)=>Math.max(r,e)<=Math.min(t,o),er=r=>!isNaN(parseFloat(r))&&isFinite(r);var or=(r,t)=>{var o;if(r==null)return t;let e=(o=Number(r))!=null?o:t;return isNaN(e)?t:e};var nr=(r,t,e,o)=>{let n=Math.pow(1-r,2),a=(1-r)*2*r,u=r*r;return[n*t[0]+a*e[0]+u*o[0],n*t[1]+a*e[1]+u*o[1]]},ar=(r,t,e,o)=>{let n=Math.pow(1-r,2),a=(1-r)*2*r,u=r*r;return[n*t[0]+a*e[0]+u*o[0],n*t[1]+a*e[1]+u*o[1],n*t[2]+a*e[2]+u*o[2]]},cr=(r,t,e,o,n)=>{let a=Math.pow(1-r,3),u=Math.pow(1-r,2)*3*r,m=(1-r)*3*r*r,i=r*r*r;return[a*t[0]+u*e[0]+m*o[0]+i*n[0],a*t[1]+u*e[1]+m*o[1]+i*n[1]]},ur=(r,t,e,o,n)=>{let a=Math.pow(1-r,3),u=Math.pow(1-r,2)*3*r,m=(1-r)*3*r*r,i=r*r*r;return[a*t[0]+u*e[0]+m*o[0]+i*n[0],a*t[1]+u*e[1]+m*o[1]+i*n[1],a*t[2]+u*e[2]+m*o[2]+i*n[2]]};window.TCMath=window.TCMath||{vSum:v,v2Sum:R,v3Sum:D,vSub:p,v2Sub:N,v3Sub:C,vMulScalar:l,v2MulScalar:B,v3MulScalar:L,vLength:f,v2Length:M,v3Length:A,v2SetLength:w,vNormalize:V,v2Normalize:Q,v3Normalize:F,vDotProduct:s,v2DotProduct:O,v3DotProduct:q,v3CrossProduct:P,mSum:b,m2Sum:j,m3Sum:W,mSub:h,m2Sub:k,m3Sub:E,mMulScalar:S,m2MulScalar:G,m3MulScalar:H,mTranspose:x,m2Transpose:J,m3Transpose:K,mMul:U,mMulVector:X,getV2Angle:g,setV2Angle:I,radiansToDegrees:z,degreesToRadians:T,setDecimalPlaces:c,getRandom:Y,getRandomInt:y,getRandomBoolean:Z,getRandomItemFromArray:_,mod:$,convertRange:rr,doRangesOverlap:tr,isNumber:er,stringToNumber:or,v2QuadraticBezierCurve:nr,v3QuadraticBezierCurve:ar,v2CubicBezierCurve:cr,v3CubicBezierCurve:ur};})();
//# sourceMappingURL=tc-math.min.js.map
