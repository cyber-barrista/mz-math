/* 
Tool Cool Math Helpers
Version: 1.0.8
Documentation: https://github.com/toolcool-org/toolcool-math
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
(()=>{var X=Math.pow;var i=(t,r=1/0)=>{if(r===1/0)return t;r<0&&(r=0);let e=X(10,r);return Math.round(t*e)/e};var V=(t,r=1/0)=>{let e=Math.atan2(t[1],t[0]);return i(e,r)},Y=(t,r,e=1/0)=>{let o=S(t);return[i(Math.cos(r)*o,e),i(Math.sin(r)*o,e)]},Z=(t,r=1/0)=>{let e=t*(180/Math.PI);return i(e,r)},F=(t,r=1/0)=>{let e=t*(Math.PI/180);return i(e,r)};var x=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(i(t[n]+r[n],e));return o},O=(t,r,e=1/0)=>x(t,r,e),P=(t,r,e=1/0)=>x(t,r,e),p=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(i(t[n]-r[n],e));return o},W=(t,r,e=1/0)=>p(t,r,e),k=(t,r,e=1/0)=>p(t,r,e),f=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(i(t[n]*r,e));return o},G=(t,r,e=1/0)=>f(t,r,e),H=(t,r,e=1/0)=>f(t,r,e),l=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n=0;n<t.length;n++)o.push(i(t[n]/r,e));return o},J=(t,r,e=1/0)=>l(t,r,e),K=(t,r,e=1/0)=>l(t,r,e),y=(t,r=1/0)=>{let e=0;for(let o=0;o<t.length;o++)e+=t[o]*t[o];return i(Math.sqrt(e),r)},S=(t,r=1/0)=>y(t,r),U=(t,r=1/0)=>y(t,r),_=(t,r,e=1/0)=>{let o=V(t);return[i(Math.cos(o)*r,e),i(Math.sin(o)*r,e)]},b=(t,r=1/0)=>{let e=y(t),o=[];for(let n=0;n<t.length;n++)o.push(e===0?0:i(t[n]/e,r));return o},g=(t,r=1/0)=>b(t,r),M=(t,r=1/0)=>b(t,r),v=(t,r,e=1/0)=>{let o=0;for(let n=0;n<t.length;n++)o+=t[n]*r[n];return i(o,e)},$=(t,r,e=1/0)=>v(t,r,e),tt=(t,r,e=1/0)=>v(t,r,e),rt=(t,r,e=1/0)=>[i(t[1]*r[2]-t[2]*r[1],e),i(t[2]*r[0]-t[0]*r[2],e),i(t[0]*r[1]-t[1]*r[0],e)],et=(t=0)=>[t,t],ot=(t=0)=>[t,t,t],d=(t,r=0)=>{if(t<0)throw new Error("N must be a non-negative number.");let e=[];for(let o=0;o<t;o++)e.push(r);return e},R=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0};var I=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(x(t[n],r[n],e));return o},nt=(t,r,e=1/0)=>I(t,r,e),at=(t,r,e=1/0)=>I(t,r,e),z=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(p(t[n],r[n],e));return o},it=(t,r,e=1/0)=>z(t,r,e),mt=(t,r,e=1/0)=>z(t,r,e),D=(t,r,e=1/0)=>{let o=[];for(let n of t)o.push(f(n,r,e));return o},ct=(t,r,e=1/0)=>D(t,r,e),ut=(t,r,e=1/0)=>D(t,r,e),st=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n of t)o.push(l(n,r,e));return o},kt=(t,r,e=1/0)=>st(t,r,e),mr=(t,r,e=1/0)=>st(t,r,e),h=t=>{let r=t.length;if(r<=0)return t;let e=t[0].length;if(e<=0)return t;let o=[];for(let n=0;n<e;n++)o.push([]);for(let n=0;n<r;n++)for(let a=0;a<e;a++)o[a].push(t[n][a]);return o},vt=t=>h(t),xt=t=>h(t),N=(t,r=0)=>{if(t.length<=0)return[];let e=[];for(let o=0;o<t.length;o++){let n=t[o].length,a=[];for(let m=0;m<n;m++)a.push(r);e.push(a)}return e},pt=(t,r=0)=>N(t,r),ft=(t,r=0)=>N(t,r),lt=(t=0)=>[[t,t],[t,t]],Mt=(t=0)=>[[t,t,t],[t,t,t],[t,t,t]],yt=(t,r,e=0)=>{if(t<=0||r<=0)throw new Error("M and N must be positive numbers.");let o=[];for(let n=0;n<t;n++)o.push(d(r,e));return o},ht=()=>[[1,0],[0,1]],Vt=()=>[[1,0,0],[0,1,0],[0,0,1]],St=t=>{if(t<0)throw new Error("N must be a non-negative number.");if(t===0)return[];let r=[];for(let e=0;e<t;e++){let o=[];for(let n=0;n<t;n++)o.push(e===n?1:0);r.push(o)}return r},bt=(t,r,e=1/0)=>{let o=[];for(let a=0;a<t.length;a++)o.push([]);let n=h(r);if(o.length!==n.length)throw new Error("The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.");for(let a=0;a<t.length;a++){let m=t[a];for(let c=0;c<n.length;c++){let s=n[c],Ft=v(m,s,e);o[a].push(Ft)}}return o},u=(t,r,e=1/0)=>{if(t.length<0)return[];if(t[0].length!==r.length)throw new Error("The number of columns in the matrix must be equal to the length of the vector.");let o=[];for(let n=0;n<t.length;n++)o[n]=v(t[n],r,e);return o},gt=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(!R(t[e],r[e]))return!1;return!0},w=t=>[[Math.cos(t),-Math.sin(t)],[Math.sin(t),Math.cos(t)]],dt=(t,r)=>{let e=g(r);return u(w(t),e)},C=t=>[[1,0,0],[0,Math.cos(t),-Math.sin(t)],[0,Math.sin(t),Math.cos(t)]],Rt=(t,r)=>{let e=M(r);return u(C(t),e)},B=t=>[[Math.cos(t),0,Math.sin(t)],[0,1,0],[-Math.sin(t),0,Math.cos(t)]],It=(t,r)=>{let e=M(r);return u(B(t),e)},L=t=>[[Math.cos(t),-Math.sin(t),0],[Math.sin(t),Math.cos(t),0],[0,0,1]],zt=(t,r)=>{let e=M(r);return u(L(t),e)},A=t=>[[t[0],0],[0,t[1]]],Dt=(t,r)=>u(A(t),r),E=t=>[[t[0],0,0],[0,t[1],0],[0,0,t[2]]],Nt=(t,r)=>u(E(t),r),q=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return t[0][0]*t[1][1]-t[1][0]*t[0][1]},j=t=>[[t[1][1],-t[0][1]],[-t[1][0],t[0][0]]],T=(t,r=1/0)=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");let e=q(t);if(e===0)return null;let o=j(t);return kt(o,e,r)};var Tt=(t,r,e=1/0)=>i(Math.random()*(r-t)+t,e),Q=(t,r)=>Math.floor(Math.random()*(r-t+1)+t),wt=()=>Math.random()<.5,Ct=t=>{let r=Q(0,t.length-1);return t[r]};var Bt=(t,r)=>(t%r+r)%r,Lt=(t,r,e,o,n)=>(n-o)*(t-r)/(e-r)+o,At=(t,r,e,o)=>Math.max(t,e)<=Math.min(r,o),Et=t=>!isNaN(parseFloat(t))&&isFinite(t);var qt=(t,r)=>{var o;if(t==null)return r;let e=(o=Number(t))!=null?o:r;return isNaN(e)?r:e};var jt=(t,r,e,o)=>{let n=Math.pow(1-t,2),a=(1-t)*2*t,m=t*t;return[n*r[0]+a*e[0]+m*o[0],n*r[1]+a*e[1]+m*o[1]]},Qt=(t,r,e,o)=>{let n=Math.pow(1-t,2),a=(1-t)*2*t,m=t*t;return[n*r[0]+a*e[0]+m*o[0],n*r[1]+a*e[1]+m*o[1],n*r[2]+a*e[2]+m*o[2]]},Xt=(t,r,e,o,n)=>{let a=Math.pow(1-t,3),m=Math.pow(1-t,2)*3*t,c=(1-t)*3*t*t,s=t*t*t;return[a*r[0]+m*e[0]+c*o[0]+s*n[0],a*r[1]+m*e[1]+c*o[1]+s*n[1]]},Yt=(t,r,e,o,n)=>{let a=Math.pow(1-t,3),m=Math.pow(1-t,2)*3*t,c=(1-t)*3*t*t,s=t*t*t;return[a*r[0]+m*e[0]+c*o[0]+s*n[0],a*r[1]+m*e[1]+c*o[1]+s*n[1],a*r[2]+m*e[2]+c*o[2]+s*n[2]]};var Zt=(t,r,e=1/0)=>{let o=[[t[0],t[1]],[r[0],r[1]]],n=T(o);if(n===null)return null;let a=[t[2],r[2]];return u(n,a,e)};var $t={v2:et,v3:ot,vN:d,m2x2:lt,m3x3:Mt,mNxM:yt,identity2:ht,identity3:Vt,identityN:St,vEqual:R,mEqual:gt,vSum:x,v2Sum:O,v3Sum:P,vSub:p,v2Sub:W,v3Sub:k,vMulScalar:f,v2MulScalar:G,v3MulScalar:H,vDivideScalar:l,v2DivideScalar:J,v3DivideScalar:K,vLength:y,v2Length:S,v3Length:U,v2SetLength:_,vNormalize:b,v2Normalize:g,v3Normalize:M,vDotProduct:v,v2DotProduct:$,v3DotProduct:tt,v3CrossProduct:rt,mSum:I,m2Sum:nt,m3Sum:at,mSub:z,m2Sub:it,m3Sub:mt,mMulScalar:D,m2MulScalar:ct,m3MulScalar:ut,mTranspose:h,m2Transpose:vt,m3Transpose:xt,mMul:bt,mMulVector:u,mReset:N,m2Reset:pt,m3Reset:ft,m2Rotation:w,v2Rotate:dt,m3RotationX:C,v3RotateX:Rt,m3RotationY:B,v3RotateY:It,m3RotationZ:L,v3RotateZ:zt,m2Scale:A,v2Scale:Dt,m3Scale:E,v3Scale:Nt,m2Determinant:q,m2Inverse:T,m2Adjugate:j,getV2Angle:V,setV2Angle:Y,radiansToDegrees:Z,degreesToRadians:F,setDecimalPlaces:i,getRandom:Tt,getRandomInt:Q,getRandomBoolean:wt,getRandomItemFromArray:Ct,mod:Bt,convertRange:Lt,doRangesOverlap:At,isNumber:Et,stringToNumber:qt,v2QuadraticBezierCurve:jt,v3QuadraticBezierCurve:Qt,v2CubicBezierCurve:Xt,v3CubicBezierCurve:Yt,equationSystem2:Zt};window.TCMath=window.TCMath||$t;})();
//# sourceMappingURL=tc-math.min.js.map
