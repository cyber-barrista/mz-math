/* 
Tool Cool Math Helpers
Version: 1.0.0
Documentation: https://github.com/toolcool-org/toolcool-math
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
(()=>{var Q=Math.pow;var i=(t,r=1/0)=>{if(r===1/0)return t;r<0&&(r=0);let e=Q(10,r);return Math.round(t*e)/e};var h=(t,r=1/0)=>{let e=Math.atan2(t[1],t[0]);return i(e,r)},X=(t,r,e=1/0)=>{let o=V(t);return[i(Math.cos(r)*o,e),i(Math.sin(r)*o,e)]},Y=(t,r=1/0)=>{let e=t*(180/Math.PI);return i(e,r)},Z=(t,r=1/0)=>{let e=t*(Math.PI/180);return i(e,r)};var v=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(i(t[n]+r[n],e));return o},F=(t,r,e=1/0)=>v(t,r,e),O=(t,r,e=1/0)=>v(t,r,e),p=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(i(t[n]-r[n],e));return o},P=(t,r,e=1/0)=>p(t,r,e),W=(t,r,e=1/0)=>p(t,r,e),f=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(i(t[n]*r,e));return o},k=(t,r,e=1/0)=>f(t,r,e),G=(t,r,e=1/0)=>f(t,r,e),b=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n=0;n<t.length;n++)o.push(i(t[n]/r,e));return o},er=(t,r,e=1/0)=>b(t,r,e),or=(t,r,e=1/0)=>b(t,r,e),M=(t,r=1/0)=>{let e=0;for(let o=0;o<t.length;o++)e+=t[o]*t[o];return i(Math.sqrt(e),r)},V=(t,r=1/0)=>M(t,r),H=(t,r=1/0)=>M(t,r),J=(t,r,e=1/0)=>{let o=h(t);return[i(Math.cos(o)*r,e),i(Math.sin(o)*r,e)]},g=(t,r=1/0)=>{let e=M(t),o=[];for(let n=0;n<t.length;n++)o.push(e===0?0:i(t[n]/e,r));return o},S=(t,r=1/0)=>g(t,r),l=(t,r=1/0)=>g(t,r),x=(t,r,e=1/0)=>{let o=0;for(let n=0;n<t.length;n++)o+=t[n]*r[n];return i(o,e)},K=(t,r,e=1/0)=>x(t,r,e),U=(t,r,e=1/0)=>x(t,r,e),_=(t,r,e=1/0)=>[i(t[1]*r[2]-t[2]*r[1],e),i(t[2]*r[0]-t[0]*r[2],e),i(t[0]*r[1]-t[1]*r[0],e)],$=(t=0)=>[t,t],tt=(t=0)=>[t,t,t],d=(t,r=0)=>{if(t<0)throw new Error("N must be a non-negative number.");let e=[];for(let o=0;o<t;o++)e.push(r);return e},R=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0};var I=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(v(t[n],r[n],e));return o},rt=(t,r,e=1/0)=>I(t,r,e),et=(t,r,e=1/0)=>I(t,r,e),z=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(p(t[n],r[n],e));return o},ot=(t,r,e=1/0)=>z(t,r,e),nt=(t,r,e=1/0)=>z(t,r,e),N=(t,r,e=1/0)=>{let o=[];for(let n of t)o.push(f(n,r,e));return o},at=(t,r,e=1/0)=>N(t,r,e),it=(t,r,e=1/0)=>N(t,r,e),mt=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n of t)o.push(b(n,r,e));return o},Ot=(t,r,e=1/0)=>mt(t,r,e),ar=(t,r,e=1/0)=>mt(t,r,e),y=t=>{let r=t.length;if(r<=0)return t;let e=t[0].length;if(e<=0)return t;let o=[];for(let n=0;n<e;n++)o.push([]);for(let n=0;n<r;n++)for(let a=0;a<e;a++)o[a].push(t[n][a]);return o},ct=t=>y(t),ut=t=>y(t),D=(t,r=0)=>{if(t.length<=0)return[];let e=[];for(let o=0;o<t.length;o++){let n=t[o].length,a=[];for(let m=0;m<n;m++)a.push(r);e.push(a)}return e},st=(t,r=0)=>D(t,r),xt=(t,r=0)=>D(t,r),vt=(t=0)=>[[t,t],[t,t]],pt=(t=0)=>[[t,t,t],[t,t,t],[t,t,t]],ft=(t,r,e=0)=>{if(t<=0||r<=0)throw new Error("M and N must be positive numbers.");let o=[];for(let n=0;n<t;n++)o.push(d(r,e));return o},lt=()=>[[1,0],[0,1]],Mt=()=>[[1,0,0],[0,1,0],[0,0,1]],yt=t=>{if(t<0)throw new Error("N must be a non-negative number.");if(t===0)return[];let r=[];for(let e=0;e<t;e++){let o=[];for(let n=0;n<t;n++)o.push(e===n?1:0);r.push(o)}return r},ht=(t,r,e=1/0)=>{let o=[];for(let a=0;a<t.length;a++)o.push([]);let n=y(r);if(o.length!==n.length)throw new Error("The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.");for(let a=0;a<t.length;a++){let m=t[a];for(let c=0;c<n.length;c++){let u=n[c],Xt=x(m,u,e);o[a].push(Xt)}}return o},s=(t,r,e=1/0)=>{if(t.length<0)return[];if(t[0].length!==r.length)throw new Error("The number of columns in the matrix must be equal to the length of the vector.");let o=[];for(let n=0;n<t.length;n++)o[n]=x(t[n],r,e);return o},Vt=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(!R(t[e],r[e]))return!1;return!0},T=t=>[[Math.cos(t),-Math.sin(t)],[Math.sin(t),Math.cos(t)]],bt=(t,r)=>{let e=S(r);return s(T(t),e)},w=t=>[[1,0,0],[0,Math.cos(t),-Math.sin(t)],[0,Math.sin(t),Math.cos(t)]],gt=(t,r)=>{let e=l(r);return s(w(t),e)},C=t=>[[Math.cos(t),0,Math.sin(t)],[0,1,0],[-Math.sin(t),0,Math.cos(t)]],St=(t,r)=>{let e=l(r);return s(C(t),e)},B=t=>[[Math.cos(t),-Math.sin(t),0],[Math.sin(t),Math.cos(t),0],[0,0,1]],dt=(t,r)=>{let e=l(r);return s(B(t),e)},L=t=>[[t[0],0],[0,t[1]]],Rt=(t,r)=>s(L(t),r),A=t=>[[t[0],0,0],[0,t[1],0],[0,0,t[2]]],It=(t,r)=>s(A(t),r),E=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return t[0][0]*t[1][1]-t[1][0]*t[0][1]},q=t=>[[t[1][1],-t[0][1]],[-t[1][0],t[0][0]]],zt=(t,r=1/0)=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");let e=E(t);if(e===0)return null;let o=q(t);return Ot(o,e,r)};var Nt=(t,r,e=1/0)=>i(Math.random()*(r-t)+t,e),j=(t,r)=>Math.floor(Math.random()*(r-t+1)+t),Dt=()=>Math.random()<.5,Tt=t=>{let r=j(0,t.length-1);return t[r]};var wt=(t,r)=>(t%r+r)%r,Ct=(t,r,e,o,n)=>(n-o)*(t-r)/(e-r)+o,Bt=(t,r,e,o)=>Math.max(t,e)<=Math.min(r,o),Lt=t=>!isNaN(parseFloat(t))&&isFinite(t);var At=(t,r)=>{var o;if(t==null)return r;let e=(o=Number(t))!=null?o:r;return isNaN(e)?r:e};var Et=(t,r,e,o)=>{let n=Math.pow(1-t,2),a=(1-t)*2*t,m=t*t;return[n*r[0]+a*e[0]+m*o[0],n*r[1]+a*e[1]+m*o[1]]},qt=(t,r,e,o)=>{let n=Math.pow(1-t,2),a=(1-t)*2*t,m=t*t;return[n*r[0]+a*e[0]+m*o[0],n*r[1]+a*e[1]+m*o[1],n*r[2]+a*e[2]+m*o[2]]},jt=(t,r,e,o,n)=>{let a=Math.pow(1-t,3),m=Math.pow(1-t,2)*3*t,c=(1-t)*3*t*t,u=t*t*t;return[a*r[0]+m*e[0]+c*o[0]+u*n[0],a*r[1]+m*e[1]+c*o[1]+u*n[1]]},Qt=(t,r,e,o,n)=>{let a=Math.pow(1-t,3),m=Math.pow(1-t,2)*3*t,c=(1-t)*3*t*t,u=t*t*t;return[a*r[0]+m*e[0]+c*o[0]+u*n[0],a*r[1]+m*e[1]+c*o[1]+u*n[1],a*r[2]+m*e[2]+c*o[2]+u*n[2]]};var Jt={v2:$,v3:tt,vN:d,m2x2:vt,m3x3:pt,mNxM:ft,identity2:lt,identity3:Mt,identityN:yt,vEqual:R,mEqual:Vt,vSum:v,v2Sum:F,v3Sum:O,vSub:p,v2Sub:P,v3Sub:W,vMulScalar:f,v2MulScalar:k,v3MulScalar:G,vLength:M,v2Length:V,v3Length:H,v2SetLength:J,vNormalize:g,v2Normalize:S,v3Normalize:l,vDotProduct:x,v2DotProduct:K,v3DotProduct:U,v3CrossProduct:_,mSum:I,m2Sum:rt,m3Sum:et,mSub:z,m2Sub:ot,m3Sub:nt,mMulScalar:N,m2MulScalar:at,m3MulScalar:it,mTranspose:y,m2Transpose:ct,m3Transpose:ut,mMul:ht,mMulVector:s,mReset:D,m2Reset:st,m3Reset:xt,m2Rotation:T,v2Rotate:bt,m3RotationX:w,v3RotateX:gt,m3RotationY:C,v3RotateY:St,m3RotationZ:B,v3RotateZ:dt,m2Scale:L,v2Scale:Rt,m3Scale:A,v3Scale:It,m2Determinant:E,m2Inverse:zt,m2Adjugate:q,getV2Angle:h,setV2Angle:X,radiansToDegrees:Y,degreesToRadians:Z,setDecimalPlaces:i,getRandom:Nt,getRandomInt:j,getRandomBoolean:Dt,getRandomItemFromArray:Tt,mod:wt,convertRange:Ct,doRangesOverlap:Bt,isNumber:Lt,stringToNumber:At,v2QuadraticBezierCurve:Et,v3QuadraticBezierCurve:qt,v2CubicBezierCurve:jt,v3CubicBezierCurve:Qt};window.TCMath=window.TCMath||Jt;})();
//# sourceMappingURL=tc-math.min.js.map
