/* 
Tool Cool Math Helpers
Version: 1.0.13
Documentation: https://github.com/toolcool-org/toolcool-math
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
(()=>{var tt=Object.defineProperty;var C=Object.getOwnPropertySymbols;var pt=Object.prototype.hasOwnProperty,mt=Object.prototype.propertyIsEnumerable;var rt=Math.pow,P=(t,r,e)=>r in t?tt(t,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[r]=e,p=(t,r)=>{for(var e in r||(r={}))pt.call(r,e)&&P(t,e,r[e]);if(C)for(var e of C(r))mt.call(r,e)&&P(t,e,r[e]);return t};var m=(t,r)=>{for(var e in r)tt(t,e,{get:r[e],enumerable:!0})};var A={};m(A,{v2:()=>zt,v2DivideScalar:()=>It,v2DotProduct:()=>Dt,v2Length:()=>E,v2MulScalar:()=>yt,v2Normalize:()=>R,v2SetLength:()=>dt,v2Sub:()=>bt,v2Sum:()=>Vt,v3:()=>Rt,v3CrossProduct:()=>Et,v3DivideScalar:()=>wt,v3DotProduct:()=>Tt,v3Length:()=>St,v3MulScalar:()=>vt,v3Normalize:()=>g,v3Sub:()=>gt,v3Sum:()=>lt,vDivideScalar:()=>b,vDotProduct:()=>h,vEqual:()=>N,vLength:()=>v,vMulScalar:()=>l,vN:()=>j,vNormalize:()=>z,vSub:()=>V,vSum:()=>f});var d={};m(d,{setDecimalPlaces:()=>u});var u=(t,r=1/0)=>{if(r===1/0)return t;r<0&&(r=0);let e=rt(10,r);return Math.round(t*e)/e};var T={};m(T,{degreesToRadians:()=>ft,getV2Angle:()=>D,radiansToDegrees:()=>ht,setV2Angle:()=>Mt});var D=(t,r=1/0)=>{let e=Math.atan2(t[1],t[0]);return u(e,r)},Mt=(t,r,e=1/0)=>{let o=E(t);return[u(Math.cos(r)*o,e),u(Math.sin(r)*o,e)]},ht=(t,r=1/0)=>{let e=t*(180/Math.PI);return u(e,r)},ft=(t,r=1/0)=>{let e=t*(Math.PI/180);return u(e,r)};var f=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(u(t[n]+r[n],e));return o},Vt=(t,r,e=1/0)=>f(t,r,e),lt=(t,r,e=1/0)=>f(t,r,e),V=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(u(t[n]-r[n],e));return o},bt=(t,r,e=1/0)=>V(t,r,e),gt=(t,r,e=1/0)=>V(t,r,e),l=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(u(t[n]*r,e));return o},yt=(t,r,e=1/0)=>l(t,r,e),vt=(t,r,e=1/0)=>l(t,r,e),b=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n=0;n<t.length;n++)o.push(u(t[n]/r,e));return o},It=(t,r,e=1/0)=>b(t,r,e),wt=(t,r,e=1/0)=>b(t,r,e),v=(t,r=1/0)=>{let e=0;for(let o=0;o<t.length;o++)e+=t[o]*t[o];return u(Math.sqrt(e),r)},E=(t,r=1/0)=>v(t,r),St=(t,r=1/0)=>v(t,r),dt=(t,r,e=1/0)=>{let o=D(t);return[u(Math.cos(o)*r,e),u(Math.sin(o)*r,e)]},z=(t,r=1/0)=>{let e=v(t),o=[];for(let n=0;n<t.length;n++)o.push(e===0?0:u(t[n]/e,r));return o},R=(t,r=1/0)=>z(t,r),g=(t,r=1/0)=>z(t,r),h=(t,r,e=1/0)=>{let o=0;for(let n=0;n<t.length;n++)o+=t[n]*r[n];return u(o,e)},Dt=(t,r,e=1/0)=>h(t,r,e),Tt=(t,r,e=1/0)=>h(t,r,e),Et=(t,r,e=1/0)=>[u(t[1]*r[2]-t[2]*r[1],e),u(t[2]*r[0]-t[0]*r[2],e),u(t[0]*r[1]-t[1]*r[0],e)],zt=(t=0)=>[t,t],Rt=(t=0)=>[t,t,t],j=(t,r=0)=>{if(t<0)throw new Error("N must be a non-negative number.");let e=[];for(let o=0;o<t;o++)e.push(r);return e},N=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0};var G={};m(G,{identity2:()=>kt,identity3:()=>Gt,identityN:()=>Jt,m2Adjugate:()=>H,m2AppendRow:()=>$t,m2DeepCopy:()=>Q,m2Determinant:()=>Z,m2DivideScalar:()=>et,m2Inverse:()=>W,m2MulScalar:()=>Bt,m2PrependRow:()=>tr,m2Reset:()=>Yt,m2Rotation:()=>ot,m2Scale:()=>st,m2Sub:()=>At,m2Sum:()=>jt,m2Transpose:()=>Qt,m2x2:()=>Ht,m3Adjugate:()=>mr,m3AppendRow:()=>Ct,m3DeepCopy:()=>X,m3Determinant:()=>pr,m3DivideScalar:()=>Ft,m3Inverse:()=>k,m3MulScalar:()=>Lt,m3PrependRow:()=>rr,m3Reset:()=>Zt,m3RotationX:()=>nt,m3RotationY:()=>it,m3RotationZ:()=>ct,m3Scale:()=>ut,m3Sub:()=>qt,m3Sum:()=>Nt,m3Transpose:()=>Xt,m3x3:()=>Ot,mAdjugate:()=>O,mAppendCol:()=>Kt,mAppendRow:()=>_t,mDeepCopy:()=>M,mDeterminant:()=>w,mDivideScalar:()=>I,mEqual:()=>or,mInverse:()=>S,mMinor:()=>Y,mMul:()=>er,mMulScalar:()=>L,mMulVector:()=>x,mNxM:()=>Wt,mPrependCol:()=>Ut,mPrependRow:()=>Pt,mReset:()=>F,mSub:()=>B,mSum:()=>q,mTranspose:()=>y,v2Rotate:()=>nr,v2Scale:()=>ur,v3RotateX:()=>ir,v3RotateY:()=>cr,v3RotateZ:()=>sr,v3Scale:()=>ar});var q=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(f(t[n],r[n],e));return o},jt=(t,r,e=1/0)=>q(t,r,e),Nt=(t,r,e=1/0)=>q(t,r,e),B=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(V(t[n],r[n],e));return o},At=(t,r,e=1/0)=>B(t,r,e),qt=(t,r,e=1/0)=>B(t,r,e),L=(t,r,e=1/0)=>{let o=[];for(let n of t)o.push(l(n,r,e));return o},Bt=(t,r,e=1/0)=>L(t,r,e),Lt=(t,r,e=1/0)=>L(t,r,e),I=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n of t)o.push(b(n,r,e));return o},et=(t,r,e=1/0)=>I(t,r,e),Ft=(t,r,e=1/0)=>I(t,r,e),y=t=>{let r=t.length;if(r<=0)return t;let e=t[0].length;if(e<=0)return t;let o=[];for(let n=0;n<e;n++)o.push([]);for(let n=0;n<r;n++)for(let i=0;i<e;i++)o[i].push(t[n][i]);return o},Qt=t=>y(t),Xt=t=>y(t),F=(t,r=0)=>{if(t.length<=0)return[];let e=[];for(let o=0;o<t.length;o++){let n=t[o].length,i=[];for(let c=0;c<n;c++)i.push(r);e.push(i)}return e},Yt=(t,r=0)=>F(t,r),Zt=(t,r=0)=>F(t,r),Ht=(t=0)=>[[t,t],[t,t]],Ot=(t=0)=>[[t,t,t],[t,t,t],[t,t,t]],Wt=(t,r,e=0)=>{if(t<=0||r<=0)throw new Error("M and N must be positive numbers.");let o=[];for(let n=0;n<t;n++)o.push(j(r,e));return o},kt=()=>[[1,0],[0,1]],Gt=()=>[[1,0,0],[0,1,0],[0,0,1]],Jt=t=>{if(t<0)throw new Error("N must be a non-negative number.");if(t===0)return[];let r=[];for(let e=0;e<t;e++){let o=[];for(let n=0;n<t;n++)o.push(e===n?1:0);r.push(o)}return r},M=t=>{let r=[];for(let e=0;e<t.length;e++){let o=t[e],n=[];for(let i=0;i<o.length;i++)n.push(o[i]);r.push(n)}return r},Q=t=>M(t),X=t=>M(t),Kt=(t,r)=>{if(t.length<=0)return[];let e=M(t);for(let o=0;o<e.length;o++)e[o].push(r[o]);return e},Ut=(t,r)=>{if(t.length<=0)return[];let e=M(t);for(let o=0;o<e.length;o++)e[o].unshift(r[o]);return e},_t=(t,r)=>{let e=M(t);return e.push(r),e},$t=(t,r)=>{let e=Q(t);return e.push(r),e},Ct=(t,r)=>{let e=X(t);return e.push(r),e},Pt=(t,r)=>{let e=M(t);return e.unshift(r),e},tr=(t,r)=>{let e=Q(t);return e.unshift(r),e},rr=(t,r)=>{let e=X(t);return e.unshift(r),e},er=(t,r,e=1/0)=>{let o=[];for(let i=0;i<t.length;i++)o.push([]);let n=y(r);if(o.length!==n.length)throw new Error("The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.");for(let i=0;i<t.length;i++){let c=t[i];for(let s=0;s<n.length;s++){let a=n[s],xt=h(c,a,e);o[i].push(xt)}}return o},x=(t,r,e=1/0)=>{if(t.length<0)return[];if(t[0].length!==r.length)throw new Error("The number of columns in the matrix must be equal to the length of the vector.");let o=[];for(let n=0;n<t.length;n++)o[n]=h(t[n],r,e);return o},or=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(!N(t[e],r[e]))return!1;return!0},ot=t=>[[Math.cos(t),-Math.sin(t)],[Math.sin(t),Math.cos(t)]],nr=(t,r)=>{let e=R(r);return x(ot(t),e)},nt=t=>[[1,0,0],[0,Math.cos(t),-Math.sin(t)],[0,Math.sin(t),Math.cos(t)]],ir=(t,r)=>{let e=g(r);return x(nt(t),e)},it=t=>[[Math.cos(t),0,Math.sin(t)],[0,1,0],[-Math.sin(t),0,Math.cos(t)]],cr=(t,r)=>{let e=g(r);return x(it(t),e)},ct=t=>[[Math.cos(t),-Math.sin(t),0],[Math.sin(t),Math.cos(t),0],[0,0,1]],sr=(t,r)=>{let e=g(r);return x(ct(t),e)},st=t=>[[t[0],0],[0,t[1]]],ur=(t,r)=>x(st(t),r),ut=t=>[[t[0],0,0],[0,t[1],0],[0,0,t[2]]],ar=(t,r)=>x(ut(t),r),xr=(t,r,e)=>{let o=t.length;if(o<=0)throw new Error("The matrix should not be empty.");if(o!==t[0].length)throw new Error("The matrix must be square.");let n=[];for(let i=0;i<o;i++){if(i===r)continue;let c=[];for(let s=0;s<o;s++)s!==e&&c.push(t[i][s]);n.push(c)}return n},Y=(t,r,e)=>{let o=t.length;if(o<=0)throw new Error("The matrix should not be empty.");if(o!==t[0].length)throw new Error("The matrix must be square.");let n=xr(t,r,e);return w(n)},w=t=>{let r=t.length;if(r===0)return 1;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t[0][0];if(r===2)return Z(t);let e=0;for(let o=0;o<r;o++){let n=Y(t,0,o),i=t[0][o];o%2!==0&&(i=-i),e+=n*i}return e},Z=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return t[0][0]*t[1][1]-t[1][0]*t[0][1]},pr=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return w(t)},H=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return[[t[1][1],-t[0][1]],[-t[1][0],t[0][0]]]},mr=t=>O(t),O=t=>{let r=t.length;if(r<=0)return null;if(r!==t[0].length)throw new Error("The matrix must be square.");if(r===1)return t;if(r===2)return H(t);let e=[];for(let o=0;o<r;o++){let n=[];for(let i=0;i<r;i++){let c=Y(t,o,i),s=Math.pow(-1,o+i);n.push(s*c)}e.push(n)}return y(e)},W=(t,r=1/0)=>{if(t.length<=0)return null;if(t.length!==t[0].length)throw new Error("The matrix must be square.");let e=Z(t);if(e===0)return null;let o=H(t);return o===null?null:et(o,e,r)},k=(t,r=1/0)=>S(t,r),S=(t,r=1/0)=>{let e=t.length;if(e<=0)return null;if(e!==t[0].length)throw new Error("The matrix must be square.");let o=w(t),n=O(t);return n===null?null:I(n,o,r)};var J={};m(J,{getRandom:()=>Mr,getRandomBoolean:()=>hr,getRandomInt:()=>at,getRandomItemFromArray:()=>fr});var Mr=(t,r,e=1/0)=>u(Math.random()*(r-t)+t,e),at=(t,r)=>Math.floor(Math.random()*(r-t+1)+t),hr=()=>Math.random()<.5,fr=t=>{let r=at(0,t.length-1);return t[r]};var K={};m(K,{convertRange:()=>lr,doRangesOverlap:()=>br,isNumber:()=>gr,mod:()=>Vr});var Vr=(t,r)=>(t%r+r)%r,lr=(t,r,e,o,n)=>(n-o)*(t-r)/(e-r)+o,br=(t,r,e,o)=>Math.max(t,e)<=Math.min(r,o),gr=t=>!isNaN(parseFloat(t))&&isFinite(t);var U={};m(U,{stringToNumber:()=>yr});var yr=(t,r)=>{var o;if(t==null)return r;let e=(o=Number(t))!=null?o:r;return isNaN(e)?r:e};var _={};m(_,{v2CubicBezierCurve:()=>wr,v2QuadraticBezierCurve:()=>vr,v3CubicBezierCurve:()=>Sr,v3QuadraticBezierCurve:()=>Ir});var vr=(t,r,e,o)=>{let n=Math.pow(1-t,2),i=(1-t)*2*t,c=t*t;return[n*r[0]+i*e[0]+c*o[0],n*r[1]+i*e[1]+c*o[1]]},Ir=(t,r,e,o)=>{let n=Math.pow(1-t,2),i=(1-t)*2*t,c=t*t;return[n*r[0]+i*e[0]+c*o[0],n*r[1]+i*e[1]+c*o[1],n*r[2]+i*e[2]+c*o[2]]},wr=(t,r,e,o,n)=>{let i=Math.pow(1-t,3),c=Math.pow(1-t,2)*3*t,s=(1-t)*3*t*t,a=t*t*t;return[i*r[0]+c*e[0]+s*o[0]+a*n[0],i*r[1]+c*e[1]+s*o[1]+a*n[1]]},Sr=(t,r,e,o,n)=>{let i=Math.pow(1-t,3),c=Math.pow(1-t,2)*3*t,s=(1-t)*3*t*t,a=t*t*t;return[i*r[0]+c*e[0]+s*o[0]+a*n[0],i*r[1]+c*e[1]+s*o[1]+a*n[1],i*r[2]+c*e[2]+s*o[2]+a*n[2]]};var $={};m($,{equationSystem2:()=>dr,equationSystem3:()=>Dr,equationSystemN:()=>Tr});var dr=(t,r,e=1/0)=>{let o=[[t[0],t[1]],[r[0],r[1]]],n=W(o);if(n===null)return null;let i=[t[2],r[2]];return x(n,i,e)},Dr=(t,r,e,o=1/0)=>{let n=[[t[0],t[1],t[2]],[r[0],r[1],r[2]],[e[0],e[1],e[2]]],i=k(n);if(i===null)return null;let c=[t[3],r[3],e[3]];return x(i,c,o)},Tr=(t,r=1/0)=>{if(t.length<=0)return null;let e=[],o=t.length;for(let c=0;c<o;c++){let s=[];for(let a=0;a<o;a++)s.push(t[c][a]);e.push(s)}let n=S(e);if(n===null)return null;let i=[];for(let c=0;c<o;c++){let s=t[c];i.push(s[s.length-1])}return x(n,i,r)};var Er=p(p(p(p(p(p(p(p(p({},A),G),d),T),J),K),U),_),$);window.TCMath=window.TCMath||Er;})();
//# sourceMappingURL=tc-math.min.js.map
