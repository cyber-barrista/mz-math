/* 
Tool Cool Math Helpers
Version: 1.0.8
Documentation: https://github.com/toolcool-org/toolcool-math
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
(()=>{var Z=Math.pow;var i=(t,r=1/0)=>{if(r===1/0)return t;r<0&&(r=0);let e=Z(10,r);return Math.round(t*e)/e};var h=(t,r=1/0)=>{let e=Math.atan2(t[1],t[0]);return i(e,r)},F=(t,r,e=1/0)=>{let o=V(t);return[i(Math.cos(r)*o,e),i(Math.sin(r)*o,e)]},O=(t,r=1/0)=>{let e=t*(180/Math.PI);return i(e,r)},P=(t,r=1/0)=>{let e=t*(Math.PI/180);return i(e,r)};var x=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(i(t[n]+r[n],e));return o},W=(t,r,e=1/0)=>x(t,r,e),k=(t,r,e=1/0)=>x(t,r,e),p=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(i(t[n]-r[n],e));return o},G=(t,r,e=1/0)=>p(t,r,e),H=(t,r,e=1/0)=>p(t,r,e),f=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(i(t[n]*r,e));return o},J=(t,r,e=1/0)=>f(t,r,e),K=(t,r,e=1/0)=>f(t,r,e),l=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n=0;n<t.length;n++)o.push(i(t[n]/r,e));return o},U=(t,r,e=1/0)=>l(t,r,e),_=(t,r,e=1/0)=>l(t,r,e),y=(t,r=1/0)=>{let e=0;for(let o=0;o<t.length;o++)e+=t[o]*t[o];return i(Math.sqrt(e),r)},V=(t,r=1/0)=>y(t,r),$=(t,r=1/0)=>y(t,r),tt=(t,r,e=1/0)=>{let o=h(t);return[i(Math.cos(o)*r,e),i(Math.sin(o)*r,e)]},b=(t,r=1/0)=>{let e=y(t),o=[];for(let n=0;n<t.length;n++)o.push(e===0?0:i(t[n]/e,r));return o},g=(t,r=1/0)=>b(t,r),M=(t,r=1/0)=>b(t,r),v=(t,r,e=1/0)=>{let o=0;for(let n=0;n<t.length;n++)o+=t[n]*r[n];return i(o,e)},rt=(t,r,e=1/0)=>v(t,r,e),et=(t,r,e=1/0)=>v(t,r,e),ot=(t,r,e=1/0)=>[i(t[1]*r[2]-t[2]*r[1],e),i(t[2]*r[0]-t[0]*r[2],e),i(t[0]*r[1]-t[1]*r[0],e)],nt=(t=0)=>[t,t],at=(t=0)=>[t,t,t],d=(t,r=0)=>{if(t<0)throw new Error("N must be a non-negative number.");let e=[];for(let o=0;o<t;o++)e.push(r);return e},R=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0};var I=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(x(t[n],r[n],e));return o},it=(t,r,e=1/0)=>I(t,r,e),mt=(t,r,e=1/0)=>I(t,r,e),D=(t,r,e=1/0)=>{let o=[];for(let n=0;n<t.length;n++)o.push(p(t[n],r[n],e));return o},ct=(t,r,e=1/0)=>D(t,r,e),ut=(t,r,e=1/0)=>D(t,r,e),z=(t,r,e=1/0)=>{let o=[];for(let n of t)o.push(f(n,r,e));return o},st=(t,r,e=1/0)=>z(t,r,e),vt=(t,r,e=1/0)=>z(t,r,e),N=(t,r,e=1/0)=>{if(r===0)throw new Error("Division by zero error.");let o=[];for(let n of t)o.push(l(n,r,e));return o},C=(t,r,e=1/0)=>N(t,r,e),xt=(t,r,e=1/0)=>N(t,r,e),S=t=>{let r=t.length;if(r<=0)return t;let e=t[0].length;if(e<=0)return t;let o=[];for(let n=0;n<e;n++)o.push([]);for(let n=0;n<r;n++)for(let a=0;a<e;a++)o[a].push(t[n][a]);return o},pt=t=>S(t),ft=t=>S(t),T=(t,r=0)=>{if(t.length<=0)return[];let e=[];for(let o=0;o<t.length;o++){let n=t[o].length,a=[];for(let m=0;m<n;m++)a.push(r);e.push(a)}return e},lt=(t,r=0)=>T(t,r),Mt=(t,r=0)=>T(t,r),yt=(t=0)=>[[t,t],[t,t]],St=(t=0)=>[[t,t,t],[t,t,t],[t,t,t]],ht=(t,r,e=0)=>{if(t<=0||r<=0)throw new Error("M and N must be positive numbers.");let o=[];for(let n=0;n<t;n++)o.push(d(r,e));return o},Vt=()=>[[1,0],[0,1]],bt=()=>[[1,0,0],[0,1,0],[0,0,1]],gt=t=>{if(t<0)throw new Error("N must be a non-negative number.");if(t===0)return[];let r=[];for(let e=0;e<t;e++){let o=[];for(let n=0;n<t;n++)o.push(e===n?1:0);r.push(o)}return r},dt=(t,r,e=1/0)=>{let o=[];for(let a=0;a<t.length;a++)o.push([]);let n=S(r);if(o.length!==n.length)throw new Error("The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.");for(let a=0;a<t.length;a++){let m=t[a];for(let c=0;c<n.length;c++){let s=n[c],Pt=v(m,s,e);o[a].push(Pt)}}return o},u=(t,r,e=1/0)=>{if(t.length<0)return[];if(t[0].length!==r.length)throw new Error("The number of columns in the matrix must be equal to the length of the vector.");let o=[];for(let n=0;n<t.length;n++)o[n]=v(t[n],r,e);return o},Rt=(t,r)=>{if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(!R(t[e],r[e]))return!1;return!0},B=t=>[[Math.cos(t),-Math.sin(t)],[Math.sin(t),Math.cos(t)]],It=(t,r)=>{let e=g(r);return u(B(t),e)},L=t=>[[1,0,0],[0,Math.cos(t),-Math.sin(t)],[0,Math.sin(t),Math.cos(t)]],Dt=(t,r)=>{let e=M(r);return u(L(t),e)},A=t=>[[Math.cos(t),0,Math.sin(t)],[0,1,0],[-Math.sin(t),0,Math.cos(t)]],zt=(t,r)=>{let e=M(r);return u(A(t),e)},E=t=>[[Math.cos(t),-Math.sin(t),0],[Math.sin(t),Math.cos(t),0],[0,0,1]],Nt=(t,r)=>{let e=M(r);return u(E(t),e)},q=t=>[[t[0],0],[0,t[1]]],Tt=(t,r)=>u(q(t),r),j=t=>[[t[0],0,0],[0,t[1],0],[0,0,t[2]]],wt=(t,r)=>u(j(t),r),Q=t=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");return t[0][0]*t[1][1]-t[1][0]*t[0][1]},X=t=>[[t[1][1],-t[0][1]],[-t[1][0],t[0][0]]],w=(t,r=1/0)=>{if(t.length!==t[0].length)throw new Error("The matrix must be square.");let e=Q(t);if(e===0)return null;let o=X(t);return C(o,e,r)};var Ct=(t,r,e=1/0)=>i(Math.random()*(r-t)+t,e),Y=(t,r)=>Math.floor(Math.random()*(r-t+1)+t),Bt=()=>Math.random()<.5,Lt=t=>{let r=Y(0,t.length-1);return t[r]};var At=(t,r)=>(t%r+r)%r,Et=(t,r,e,o,n)=>(n-o)*(t-r)/(e-r)+o,qt=(t,r,e,o)=>Math.max(t,e)<=Math.min(r,o),jt=t=>!isNaN(parseFloat(t))&&isFinite(t);var Qt=(t,r)=>{var o;if(t==null)return r;let e=(o=Number(t))!=null?o:r;return isNaN(e)?r:e};var Xt=(t,r,e,o)=>{let n=Math.pow(1-t,2),a=(1-t)*2*t,m=t*t;return[n*r[0]+a*e[0]+m*o[0],n*r[1]+a*e[1]+m*o[1]]},Yt=(t,r,e,o)=>{let n=Math.pow(1-t,2),a=(1-t)*2*t,m=t*t;return[n*r[0]+a*e[0]+m*o[0],n*r[1]+a*e[1]+m*o[1],n*r[2]+a*e[2]+m*o[2]]},Zt=(t,r,e,o,n)=>{let a=Math.pow(1-t,3),m=Math.pow(1-t,2)*3*t,c=(1-t)*3*t*t,s=t*t*t;return[a*r[0]+m*e[0]+c*o[0]+s*n[0],a*r[1]+m*e[1]+c*o[1]+s*n[1]]},Ft=(t,r,e,o,n)=>{let a=Math.pow(1-t,3),m=Math.pow(1-t,2)*3*t,c=(1-t)*3*t*t,s=t*t*t;return[a*r[0]+m*e[0]+c*o[0]+s*n[0],a*r[1]+m*e[1]+c*o[1]+s*n[1],a*r[2]+m*e[2]+c*o[2]+s*n[2]]};var Ot=(t,r,e=1/0)=>{let o=[[t[0],t[1]],[r[0],r[1]]],n=w(o);if(n===null)return null;let a=[t[2],r[2]];return u(n,a,e)};var tr={v2:nt,v3:at,vN:d,m2x2:yt,m3x3:St,mNxM:ht,identity2:Vt,identity3:bt,identityN:gt,vEqual:R,mEqual:Rt,vSum:x,v2Sum:W,v3Sum:k,vSub:p,v2Sub:G,v3Sub:H,vMulScalar:f,v2MulScalar:J,v3MulScalar:K,vDivideScalar:l,v2DivideScalar:U,v3DivideScalar:_,vLength:y,v2Length:V,v3Length:$,v2SetLength:tt,vNormalize:b,v2Normalize:g,v3Normalize:M,vDotProduct:v,v2DotProduct:rt,v3DotProduct:et,v3CrossProduct:ot,mSum:I,m2Sum:it,m3Sum:mt,mSub:D,m2Sub:ct,m3Sub:ut,mMulScalar:z,m2MulScalar:st,m3MulScalar:vt,mDivideScalar:N,m2DivideScalar:C,m3DivideScalar:xt,mTranspose:S,m2Transpose:pt,m3Transpose:ft,mMul:dt,mMulVector:u,mReset:T,m2Reset:lt,m3Reset:Mt,m2Rotation:B,v2Rotate:It,m3RotationX:L,v3RotateX:Dt,m3RotationY:A,v3RotateY:zt,m3RotationZ:E,v3RotateZ:Nt,m2Scale:q,v2Scale:Tt,m3Scale:j,v3Scale:wt,m2Determinant:Q,m2Inverse:w,m2Adjugate:X,getV2Angle:h,setV2Angle:F,radiansToDegrees:O,degreesToRadians:P,setDecimalPlaces:i,getRandom:Ct,getRandomInt:Y,getRandomBoolean:Bt,getRandomItemFromArray:Lt,mod:At,convertRange:Et,doRangesOverlap:qt,isNumber:jt,stringToNumber:Qt,v2QuadraticBezierCurve:Xt,v3QuadraticBezierCurve:Yt,v2CubicBezierCurve:Zt,v3CubicBezierCurve:Ft,equationSystem2:Ot};window.TCMath=window.TCMath||tr;})();
//# sourceMappingURL=tc-math.min.js.map
